s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :arr, s(:call, s(:lvar, :words), :clone)), s(:iter, s(:call, s(:lvar, :arr), :map!), s(:args, :arri), s(:lasgn, :arri, s(:call, s(:call, s(:call, s(:call, s(:lvar, :arri), :downcase), :split, s(:lit, //)), :sort), :join))), s(:lasgn, :res, s(:array)), s(:lasgn, :j, s(:lit, 0)), s(:lasgn, :black, s(:array)), s(:iter, s(:call, s(:lvar, :arr), :each_with_index), s(:args, :arri, :i), s(:if, s(:call, s(:call, s(:lvar, :black), :include?, s(:lvar, :arri)), :!), s(:block, s(:attrasgn, s(:lvar, :res), :[]=, s(:lvar, :j), s(:array)), s(:call, s(:call, s(:lvar, :res), :[], s(:lvar, :j)), :concat, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :split)), s(:iter, s(:call, s(:lvar, :arr), :each_with_index), s(:args, :arri1, :y), s(:if, s(:and, s(:call, s(:lvar, :arri), :==, s(:lvar, :arri1)), s(:call, s(:lvar, :y), :!=, s(:lvar, :i))), s(:call, s(:call, s(:lvar, :res), :[], s(:lvar, :j)), :concat, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :y)), :split)), nil)), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1))), s(:call, s(:lvar, :black), :push, s(:lvar, :arri))), nil)), s(:lvar, :res)), s(:call, nil, :p, s(:call, s(:iter, s(:call, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")), :group_by), s(:args, :i), s(:call, s(:call, s(:call, s(:call, s(:lvar, :i), :downcase), :split, s(:lit, //)), :sort), :join)), :values)))