s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :bFound, s(:false)), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :a), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :a), :[], s(:lit, 0)), :downcase), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort)), s(:block, s(:call, s(:lvar, :a), :<<, s(:lvar, :w)), s(:lasgn, :bFound, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :bFound), :==, s(:false)), s(:block, s(:lasgn, :i, s(:call, s(:lvar, :anagrams), :length)), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lvar, :i), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :i)), :<<, s(:lvar, :w))), nil))), s(:return, s(:lvar, :anagrams)))