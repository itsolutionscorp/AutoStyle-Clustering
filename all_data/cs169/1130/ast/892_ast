s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :list, s(:hash)), s(:for, s(:lvar, :words), s(:lasgn, :word), s(:block, s(:lasgn, :letters, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :list), :[], s(:lvar, :letters)), :==, s(:nil)), s(:attrasgn, s(:lvar, :list), :[]=, s(:lvar, :letters), s(:array, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :list), :[], s(:lvar, :letters)), :<<, s(:lvar, :word))))), s(:lasgn, :groups, s(:array)), s(:iter, s(:call, s(:lvar, :list), :each), s(:args, :letters, :words), s(:call, s(:lvar, :groups), :<<, s(:lvar, :words))), s(:return, s(:lvar, :groups))), s(:if, s(:call, s(:str, "(string)"), :==, s(:gvar, :$0)), s(:block, s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :print, s(:call, s(:call, s(:lvar, :words), :inspect), :+, s(:str, "\n"))), s(:lasgn, :groups, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:call, nil, :print, s(:call, s(:call, s(:lvar, :groups), :inspect), :+, s(:str, "\n")))), nil))