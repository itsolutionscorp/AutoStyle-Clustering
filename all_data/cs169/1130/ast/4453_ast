s(:block, s(:defn, :get_anagram_root, s(:args, :word), s(:lasgn, :array, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), s(:args, :char), s(:call, s(:lvar, :array), :<<, s(:lvar, :char))), s(:call, s(:lvar, :array), :sort!), s(:lasgn, :hash_key, s(:str, "")), s(:iter, s(:call, s(:lvar, :array), :each_with_object, s(:lvar, :hash_key)), s(:args, :char, :hash_key), s(:call, s(:lvar, :hash_key), :<<, s(:lvar, :char))), s(:return, s(:lvar, :hash_key))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each_with_object, s(:lvar, :hash)), s(:args, :word, :hash), s(:block, s(:lasgn, :hash_key, s(:call, nil, :get_anagram_root, s(:lvar, :word))), s(:call, nil, :printf, s(:dstr, "word=", s(:evstr, s(:lvar, :word)), s(:str, " hash_key= "), s(:evstr, s(:lvar, :hash_key)), s(:str, "\n"))), s(:if, s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :hash_key)), :!), s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :hash_key), s(:array, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :hash_key)), :<<, s(:lvar, :word))))), s(:return, s(:call, s(:lvar, :hash), :values))))