s(:block, s(:defn, :canonical, s(:args, :str), s(:lasgn, :lower, s(:call, s(:lvar, :str), :downcase)), s(:lasgn, :out, s(:str, "")), s(:iter, s(:call, s(:call, s(:call, s(:lvar, :lower), :split, s(:str, "")), :sort), :each), s(:args, :s), s(:lasgn, :out, s(:call, s(:lvar, :out), :+, s(:lvar, :s)))), s(:lvar, :out)), s(:defn, :combine_anagrams, s(:args, :str_array), s(:lasgn, :grouped, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :str_array), :each), s(:args, :unsorted), s(:block, s(:lasgn, :s, s(:call, nil, :canonical, s(:lvar, :unsorted))), s(:if, s(:call, s(:call, s(:lvar, :grouped), :[], s(:lvar, :s)), :==, s(:nil)), s(:attrasgn, s(:lvar, :grouped), :[]=, s(:lvar, :s), s(:array)), nil), s(:call, s(:call, s(:lvar, :grouped), :[], s(:lvar, :s)), :<<, s(:lvar, :unsorted)))), s(:lasgn, :grouped_arr, s(:array)), s(:iter, s(:call, s(:lvar, :grouped), :each), s(:args, :key, :value), s(:call, s(:lvar, :grouped_arr), :<<, s(:lvar, :value))), s(:lvar, :grouped_arr)))