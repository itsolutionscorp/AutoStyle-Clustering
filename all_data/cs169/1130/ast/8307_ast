s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :array, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :w, s(:call, s(:call, s(:lvar, :word), :downcase), :sort)), s(:lasgn, :found, s(:false)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :array), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :array), :[], s(:lvar, :i)), :[], s(:lit, 0)), :downcase), :sort), :==, s(:lvar, :w)), s(:block, s(:attrasgn, s(:call, s(:lvar, :array), :[], s(:lvar, :i)), :[]=, s(:call, s(:call, s(:lvar, :array), :[], s(:lvar, :i)), :length), s(:lvar, :word)), s(:lasgn, :found, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :found), :!), s(:attrasgn, s(:lvar, :array), :[]=, s(:call, s(:lvar, :array), :length), s(:array, s(:lvar, :word))), nil))), s(:lvar, :array)), s(:class, :String, nil, s(:defn, :sort, s(:args), s(:lasgn, :myArray, s(:call, s(:self), :split, s(:lit, //))), s(:call, s(:lvar, :myArray), :sort!), s(:call, s(:lvar, :myArray), :join))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "ARCS"), s(:str, "roF"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))