s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :resultado, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagramas, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:call, s(:lvar, :resultado), :length), :==, s(:lit, 0)), s(:block, s(:call, s(:lvar, :resultado), :<<, s(:lvar, :word)), s(:call, s(:lvar, :anagramas), :<<, s(:lvar, :word))), s(:block, s(:lasgn, :encontrado, s(:false)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :anagramas), :each), s(:args, :anagram), s(:block, s(:call, nil, :printf, s(:str, "%d %s %s\n"), s(:lvar, :i), s(:lvar, :word), s(:lvar, :anagram)), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :anagram), :downcase), :chars), :sort), :join)), s(:block, s(:lasgn, :encontrado, s(:true)), s(:attrasgn, s(:lvar, :resultado), :[]=, s(:lvar, :i), s(:array, s(:call, s(:call, s(:lvar, :resultado), :[], s(:lvar, :i)), :flatten), s(:lvar, :word)))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))))), s(:if, s(:call, s(:lvar, :encontrado), :==, s(:false)), s(:block, s(:call, s(:lvar, :resultado), :<<, s(:lvar, :word)), s(:call, s(:lvar, :anagramas), :<<, s(:lvar, :word))), nil), s(:call, nil, :puts))), s(:call, nil, :puts), s(:iter, s(:call, s(:lvar, :resultado), :each), s(:args, :r), s(:call, nil, :puts, s(:lvar, :r))), s(:return, s(:lvar, :resultado)))