s(:block, s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "For"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:call, s(:lvar, :groups), :length), :==, s(:lit, 0)), s(:attrasgn, s(:lvar, :groups), :[]=, s(:lit, 0), s(:array, s(:lvar, :word))), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :groups), :each_index), s(:args, :index), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :groups), :[], s(:lvar, :index)), :[], s(:lit, 0)), :downcase), :split, s(:str, "")), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort)), s(:block, s(:call, s(:call, s(:lvar, :groups), :[], s(:lvar, :index)), :<<, s(:lvar, :word)), s(:lasgn, :found, s(:true)), s(:if, s(:call, s(:lvar, :found), :==, s(:true)), s(:break), nil)), nil)), s(:if, s(:call, s(:lvar, :found), :==, s(:false)), s(:call, s(:lvar, :groups), :<<, s(:array, s(:lvar, :word))), nil)))), s(:return, s(:lvar, :groups))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:lvar, :words))))