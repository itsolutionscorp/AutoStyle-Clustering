s(:block, s(:class, :String, nil, s(:defn, :is_anagram?, s(:args, :w), s(:lasgn, :h1, s(:hash)), s(:iter, s(:call, s(:call, s(:self), :downcase), :each_byte), s(:args, :b), s(:block, s(:op_asgn1, s(:lvar, :h1), s(:arglist, s(:lvar, :b)), :"||", s(:lit, 0)), s(:op_asgn1, s(:lvar, :h1), s(:arglist, s(:lvar, :b)), :+, s(:lit, 1)))), s(:lasgn, :h2, s(:hash)), s(:iter, s(:call, s(:call, s(:lvar, :w), :downcase), :each_byte), s(:args, :b), s(:block, s(:op_asgn1, s(:lvar, :h2), s(:arglist, s(:lvar, :b)), :"||", s(:lit, 0)), s(:op_asgn1, s(:lvar, :h2), s(:arglist, s(:lvar, :b)), :+, s(:lit, 1)))), s(:call, s(:lvar, :h1), :==, s(:lvar, :h2)))), s(:class, :Array, nil, s(:defn, :find_anagrams, s(:args, :w), s(:lasgn, :anagrams, s(:array)), s(:iter, s(:call, s(:self), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :w), :is_anagram?, s(:lvar, :word)), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :word)), nil)), s(:lvar, :anagrams))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:if, s(:call, s(:call, s(:call, s(:lvar, :result), :flatten), :include?, s(:lvar, :w)), :!), s(:call, s(:lvar, :result), :<<, s(:call, s(:lvar, :words), :find_anagrams, s(:lvar, :w))), nil)), s(:lvar, :result)), s(:call, nil, :puts, s(:dstr, "is the 'String#is_anagram?' working? ", s(:evstr, s(:call, s(:str, "ciao"), :is_anagram?, s(:str, "icao"))))), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :words)), :inspect)))