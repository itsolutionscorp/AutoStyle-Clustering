s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :first_arr, s(:lvar, :words)), s(:lasgn, :output_arr, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :wordOne), s(:block, s(:lasgn, :newArr, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :newArr), :<<, s(:lvar, :wordOne)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :wordTwo), s(:block, s(:lasgn, :found, s(:false)), s(:if, s(:or, s(:call, s(:lvar, :output_arr), :include?, s(:lvar, :wordOne)), s(:call, s(:lvar, :output_arr), :include?, s(:lvar, :wordTwo))), s(:break), nil), s(:if, s(:and, s(:call, s(:lvar, :wordOne), :!=, s(:lvar, :wordTwo)), s(:call, s(:call, s(:call, s(:call, s(:lvar, :wordOne), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:lvar, :wordTwo), :chars), :sort), :join))), s(:call, s(:lvar, :newArr), :<<, s(:lvar, :wordTwo)), nil), s(:call, s(:lvar, :output_arr), :<<, s(:lvar, :newArr)))))), s(:iter, s(:call, s(:lvar, :output_arr), :map!), s(:args, :sub_arr), s(:call, s(:lvar, :sub_arr), :sort!)), s(:call, s(:lvar, :output_arr), :uniq!), s(:lvar, :output_arr))