s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:array)), s(:until, s(:call, s(:lvar, :words), :empty?), s(:block, s(:lasgn, :anagrams, s(:array)), s(:call, s(:lvar, :anagrams), :<<, s(:lasgn, :el, s(:call, s(:lvar, :words), :[], s(:lit, 0)))), s(:call, s(:lvar, :words), :delete_at, s(:lit, 0)), s(:lasgn, :el_sorted_array, s(:call, s(:call, s(:call, s(:lvar, :el), :downcase), :scan, s(:lit, /./)), :sort)), s(:lasgn, :input_new, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :el2), s(:block, s(:lasgn, :el2_sorted_array, s(:call, s(:call, s(:call, s(:lvar, :el2), :downcase), :scan, s(:lit, /./)), :sort)), s(:if, s(:call, s(:lvar, :el_sorted_array), :==, s(:lvar, :el2_sorted_array)), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :el2)), s(:call, s(:lvar, :input_new), :<<, s(:lvar, :el2))))), s(:call, s(:lvar, :output), :<<, s(:lvar, :anagrams)), s(:lasgn, :words, s(:lvar, :input_new))), true), s(:lvar, :output)), s(:lasgn, :input, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :output, s(:call, nil, :combine_anagrams, s(:lvar, :input))), s(:call, nil, :puts, s(:dstr, "", s(:evstr, s(:lvar, :output)))))