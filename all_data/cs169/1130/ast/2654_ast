s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:iter, s(:call, s(:lvar, :words), :collect), s(:args, :x), s(:array, s(:lvar, :x)))), s(:iter, s(:call, s(:call, s(:lvar, :groups), :length), :times), s(:args, :group_index), s(:block, s(:lasgn, :group, s(:call, s(:lvar, :groups), :[], s(:lvar, :group_index))), s(:lasgn, :base_word, s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 0)), :downcase)), s(:iter, s(:call, s(:lvar, :words), :each_with_index), s(:args, :word, :index), s(:if, s(:and, s(:call, s(:lvar, :index), :!=, s(:lvar, :group_index)), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:lvar, :base_word), :chars), :sort), :join))), s(:call, s(:call, s(:lvar, :groups), :[], s(:lvar, :group_index)), :<<, s(:lvar, :word)), nil)), s(:call, s(:call, s(:lvar, :groups), :[], s(:lvar, :group_index)), :sort!))), s(:call, s(:lvar, :groups), :uniq)), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "a"), s(:str, "a"), s(:str, "b"), s(:str, "b"), s(:str, "c"), s(:str, "d")))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "A"), s(:str, "a")))))