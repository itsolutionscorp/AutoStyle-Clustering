s(:block, s(:defn, :arr, s(:args, :str), s(:lasgn, :a, s(:array)), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:call, s(:lvar, :str), :length), :-, s(:lit, 1))), s(:args, :i), s(:call, s(:lvar, :a), :<<, s(:call, s(:call, s(:lvar, :str), :downcase), :[], s(:lvar, :i)))), s(:return, s(:call, s(:lvar, :a), :sort))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :final, s(:array)), s(:lasgn, :count, s(:lit, -1)), s(:lasgn, :s, s(:array)), s(:lasgn, :a, s(:array)), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:args, :i), s(:block, s(:attrasgn, s(:lvar, :a), :[]=, s(:lvar, :i), s(:lit, 0)), s(:attrasgn, s(:lvar, :s), :[]=, s(:lvar, :i), s(:call, nil, :arr, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))))), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:args, :i), s(:block, s(:lasgn, :flag, s(:lit, 0)), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:lvar, :i), :-, s(:lit, 1))), s(:args, :j), s(:if, s(:call, s(:call, s(:lvar, :s), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :s), :[], s(:lvar, :j))), s(:block, s(:call, s(:call, s(:lvar, :final), :[], s(:call, s(:lvar, :a), :[], s(:lvar, :j))), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:attrasgn, s(:lvar, :a), :[]=, s(:lvar, :i), s(:call, s(:lvar, :a), :[], s(:lvar, :j))), s(:lasgn, :flag, s(:lit, 1)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :flag), :==, s(:lit, 0)), s(:block, s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), s(:attrasgn, s(:lvar, :final), :[]=, s(:lvar, :count), s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:attrasgn, s(:lvar, :a), :[]=, s(:lvar, :i), s(:lvar, :count))), nil))), s(:return, s(:lvar, :final))))