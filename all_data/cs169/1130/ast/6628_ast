s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :srtd, s(:array)), s(:lasgn, :out, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:call, s(:lvar, :srtd), :<<, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join))), s(:call, s(:lvar, :srtd), :uniq!), s(:iter, s(:call, s(:lvar, :srtd), :each), s(:args, :g), s(:call, s(:lvar, :out), :<<, s(:array))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :num, s(:call, s(:lvar, :srtd), :size)), s(:while, s(:call, s(:lvar, :i), :<, s(:lvar, :num)), s(:block, s(:lasgn, :g, s(:call, s(:lvar, :srtd), :[], s(:lvar, :i))), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :==, s(:lvar, :g)), s(:call, s(:call, s(:lvar, :out), :[], s(:lvar, :i)), :<<, s(:lvar, :word)), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true))), s(:return, s(:lvar, :out))), s(:lasgn, :input, s(:array, s(:str, "cars"), s(:str, "CARS"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :bl, s(:array)), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:lvar, :input))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:lvar, :bl))))