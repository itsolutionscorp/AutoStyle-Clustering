s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :conjunto, s(:call, s(:const, :Array), :new)), s(:lasgn, :k, s(:lit, 0)), s(:lasgn, :i, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :words), :size)), s(:block, s(:lasgn, :aux, s(:call, s(:const, :Array), :new)), s(:lasgn, :l, s(:lit, 0)), s(:lasgn, :val, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:attrasgn, s(:lvar, :aux), :[]=, s(:lvar, :l), s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:call, s(:lvar, :words), :delete_at, s(:lit, 0)), s(:lasgn, :j, s(:lit, 0)), s(:while, s(:call, s(:lvar, :j), :<, s(:call, s(:lvar, :words), :size)), s(:if, s(:call, s(:call, s(:lvar, :val), :length), :==, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :j)), :length)), s(:if, s(:call, nil, :isEqual, s(:call, nil, :trans, s(:lvar, :val)), s(:call, nil, :trans, s(:call, s(:lvar, :words), :[], s(:lvar, :j)))), s(:block, s(:lasgn, :l, s(:call, s(:lvar, :l), :+, s(:lit, 1))), s(:attrasgn, s(:lvar, :aux), :[]=, s(:lvar, :l), s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:call, s(:lvar, :words), :delete_at, s(:lvar, :j))), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1)))), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1)))), true), s(:attrasgn, s(:lvar, :conjunto), :[]=, s(:lvar, :k), s(:lvar, :aux)), s(:lasgn, :k, s(:call, s(:lvar, :k), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :conjunto))), s(:defn, :isEqual, s(:args, :real, :aux), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :isAna, s(:true)), s(:while, s(:and, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :aux), :size)), s(:call, s(:lvar, :isAna), :==, s(:true))), s(:block, s(:lasgn, :j, s(:lit, 0)), s(:lasgn, :encontro, s(:false)), s(:while, s(:and, s(:call, s(:lvar, :encontro), :==, s(:false)), s(:call, s(:lvar, :j), :<, s(:call, s(:lvar, :real), :size))), s(:block, s(:if, s(:call, s(:call, s(:lvar, :aux), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :real), :[], s(:lvar, :j))), s(:block, s(:call, s(:lvar, :real), :delete_at, s(:lvar, :j)), s(:lasgn, :encontro, s(:true))), nil), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1)))), true), s(:if, s(:call, s(:lvar, :encontro), :==, s(:false)), s(:lasgn, :isAna, s(:false)), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :isAna))), s(:defn, :trans, s(:args, :word), s(:lasgn, :word, s(:call, s(:lvar, :word), :downcase)), s(:lasgn, :arreglo, s(:call, s(:const, :Array), :new)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :word), :each_char), s(:args, :c), s(:block, s(:attrasgn, s(:lvar, :arreglo), :[]=, s(:lvar, :i), s(:lvar, :c)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), s(:return, s(:lvar, :arreglo))))