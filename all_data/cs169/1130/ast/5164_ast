s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return), nil), s(:call, s(:lvar, :words), :flatten!), s(:lasgn, :normalized, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:lvar, :word)), s(:lasgn, :value, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:call, s(:lvar, :normalized), :merge!, s(:hash, s(:lvar, :key), s(:lvar, :value))))), s(:lasgn, :sorted_anagrams, s(:iter, s(:call, s(:lvar, :normalized), :sort_by), s(:args, :key, :value), s(:lvar, :value))), s(:lasgn, :seed, s(:call, s(:call, s(:lvar, :sorted_anagrams), :[], s(:lit, 0)), :[], s(:lit, 1))), s(:lasgn, :last, s(:call, s(:call, s(:lvar, :sorted_anagrams), :last), :[], s(:lit, 1))), s(:lasgn, :answer, s(:call, s(:const, :Array), :new)), s(:lasgn, :collector, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagram_length, s(:call, s(:lvar, :sorted_anagrams), :length)), s(:lasgn, :counter, s(:lit, 1)), s(:iter, s(:call, s(:lvar, :sorted_anagrams), :each), s(:args, :key, :value), s(:block, s(:if, s(:call, s(:lvar, :value), :==, s(:lvar, :seed)), s(:call, s(:lvar, :collector), :<<, s(:lvar, :key)), s(:block, s(:call, s(:lvar, :answer), :<<, s(:lvar, :collector)), s(:lasgn, :collector, s(:call, s(:const, :Array), :new)), s(:lasgn, :seed, s(:lvar, :value)), s(:call, s(:lvar, :collector), :<<, s(:lvar, :key)))), s(:if, s(:and, s(:call, s(:lvar, :anagram_length), :==, s(:lvar, :counter)), s(:call, s(:lvar, :anagram_length), :>, s(:lit, 1))), s(:call, s(:lvar, :answer), :<<, s(:lvar, :collector)), nil), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))))), s(:lvar, :answer))