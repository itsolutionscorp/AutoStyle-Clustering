s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagram_hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :letters, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :upcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :anagram_hash), :has_key?, s(:lvar, :letters)), s(:call, s(:call, s(:lvar, :anagram_hash), :[], s(:lvar, :letters)), :push, s(:lvar, :w)), s(:attrasgn, s(:lvar, :anagram_hash), :[]=, s(:lvar, :letters), s(:array, s(:lvar, :w)))))), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :anagram_hash), :each_value), s(:args, :ana_group), s(:call, s(:lvar, :result), :push, s(:lvar, :ana_group))), s(:return, s(:lvar, :result))), s(:lasgn, :test, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :print, s(:call, nil, :combine_anagrams, s(:lvar, :test))))