s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sorted, s(:call, s(:const, :Array), :new, s(:lit, 0))), s(:lasgn, :grouped, s(:call, s(:const, :Hash), :new, s(:lit, 0))), s(:lasgn, :combined, s(:call, s(:const, :Array), :new, s(:lit, 0))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :sorted), :push, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join))), s(:iter, s(:call, s(:lvar, :sorted), :each), s(:args, :sword), s(:block, s(:attrasgn, s(:lvar, :grouped), :[]=, s(:call, s(:lvar, :sword), :to_s), s(:call, s(:const, :Array), :new, s(:lit, 0))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :sword), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:call, s(:call, s(:lvar, :grouped), :[], s(:call, s(:lvar, :sword), :to_s)), :push, s(:lvar, :word)), nil)))), s(:iter, s(:call, s(:lvar, :grouped), :each), s(:args, :key, :group), s(:call, s(:lvar, :combined), :push, s(:lvar, :group))), s(:return, s(:lvar, :combined))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "cars"), s(:str, "a"), s(:str, "A"), s(:str, "a"), s(:str, "For"), s(:str, "potatoes"), s(:str, "rAcs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :inspect)))