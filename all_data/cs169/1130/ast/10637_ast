s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :results, s(:call, s(:const, :Hash), :new)), s(:lasgn, :results_array, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :processed_word, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :upcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :results), :has_key?, s(:lvar, :processed_word)), :!), s(:block, s(:attrasgn, s(:lvar, :results), :[]=, s(:lvar, :processed_word), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :results), :[], s(:lvar, :processed_word)), :insert, s(:lit, 0), s(:lvar, :word))), s(:attrasgn, s(:lvar, :results), :[]=, s(:lvar, :processed_word), s(:call, s(:call, s(:lvar, :results), :[], s(:lvar, :processed_word)), :insert, s(:lit, 0), s(:lvar, :word)))))), s(:if, s(:call, s(:call, s(:lvar, :results), :length), :>, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :results), :each), s(:args, :key, :value), s(:call, s(:lvar, :results_array), :<<, s(:lvar, :value))), nil), s(:return, s(:lvar, :results_array)))