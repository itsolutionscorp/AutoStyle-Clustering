s(:block, s(:defn, :value_string, s(:args, :string), s(:lasgn, :counter, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :string), :each_char), s(:args, :e), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:call, s(:lvar, :e), :ord)))), s(:return, s(:lvar, :counter))), s(:defn, :anagram?, s(:args, :string1, :string2), s(:lasgn, :answer, s(:call, s(:call, s(:lvar, :string1), :size), :==, s(:call, s(:lvar, :string2), :size))), s(:lasgn, :answer, s(:call, s(:lvar, :answer), :&, s(:call, s(:call, nil, :value_string, s(:lvar, :string1)), :==, s(:call, nil, :value_string, s(:lvar, :string2))))), s(:if, s(:lvar, :answer), s(:iter, s(:call, s(:lvar, :string2), :each_char), s(:args, :e), s(:lasgn, :answer, s(:call, s(:lvar, :answer), :&, s(:call, s(:lvar, :string1), :include?, s(:lvar, :e))))), nil), s(:return, s(:lvar, :answer))), s(:defn, :combine_anagrams, s(:args, :list), s(:lasgn, :limit, s(:call, s(:lvar, :list), :count)), s(:masgn, s(:array, s(:lasgn, :i), s(:lasgn, :j)), s(:to_ary, s(:lit, 0))), s(:lasgn, :temp, s(:str, "")), s(:lasgn, :listGen, s(:call, s(:const, :Array), :new)), s(:while, s(:call, s(:lvar, :i), :<, s(:lvar, :limit)), s(:block, s(:lasgn, :j, s(:lvar, :i)), s(:lasgn, :temp, s(:call, s(:lvar, :list), :[], s(:lvar, :i))), s(:lasgn, :listEspec, s(:call, s(:const, :Array), :new)), s(:while, s(:call, s(:lvar, :j), :<, s(:lvar, :limit)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :temp), :empty?), :!), s(:if, s(:call, nil, :anagram?, s(:call, s(:lvar, :temp), :downcase), s(:call, s(:call, s(:lvar, :list), :[], s(:lvar, :j)), :downcase)), s(:block, s(:call, s(:lvar, :listEspec), :push, s(:call, s(:lvar, :list), :[], s(:lvar, :j))), s(:attrasgn, s(:lvar, :list), :[]=, s(:lvar, :j), s(:str, ""))), nil), nil), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1)))), true), s(:if, s(:call, s(:call, s(:lvar, :listEspec), :empty?), :!), s(:call, s(:lvar, :listGen), :push, s(:lvar, :listEspec)), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :listGen))))