s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:call, nil, :include, s(:const, :Enumerable)), s(:lasgn, :ws, s(:call, s(:const, :Hash), :[])), s(:lasgn, :newarray, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :e, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :ws), :has_key?, s(:lvar, :e)), s(:call, s(:call, s(:lvar, :ws), :[], s(:lvar, :e)), :<<, s(:lvar, :w)), s(:attrasgn, s(:lvar, :ws), :[]=, s(:lvar, :e), s(:array, s(:lvar, :w)))))), s(:iter, s(:call, s(:lvar, :ws), :each_value), s(:args, :v), s(:call, s(:lvar, :newarray), :<<, s(:lvar, :v))), s(:return, s(:lvar, :newarray))), s(:lasgn, :words, s(:array, s(:str, "Cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :words)), :inspect)), s(:call, nil, :puts, s(:call, s(:lvar, :words), :inspect)))