s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :result), :each), s(:args, :group), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 0)), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:block, s(:call, s(:lvar, :group), :<<, s(:lvar, :word)), s(:lasgn, :found, s(:true))), nil)), s(:if, s(:call, s(:lvar, :found), :!), s(:call, s(:lvar, :result), :<<, s(:array, s(:lvar, :word))), nil))), s(:return, s(:lvar, :result))), s(:call, nil, :print, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))