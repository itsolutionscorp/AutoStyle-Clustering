s(:block, s(:class, :String, nil, s(:defn, :is_anagram_of?, s(:args, :new_string), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :new_string), :downcase), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:self), :downcase), :chars), :sort))))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :ones_to_skip, s(:array)), s(:lasgn, :found_words, s(:array)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:lvar, :ones_to_skip), :include?, s(:lvar, :i)), nil, s(:block, s(:lasgn, :found_words_iteration, s(:array)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:call, s(:lvar, :ones_to_skip), :include?, s(:lvar, :j)), nil, s(:if, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :is_anagram_of?, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:block, s(:call, s(:lvar, :ones_to_skip), :<<, s(:lvar, :j)), s(:call, s(:lvar, :found_words_iteration), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :j)))), nil))), s(:call, s(:lvar, :found_words), :<<, s(:lvar, :found_words_iteration))))), s(:return, s(:lvar, :found_words))))