s(:block, s(:defn, :sorted, s(:args, :s), s(:lasgn, :ss, s(:call, s(:call, s(:call, s(:call, s(:lvar, :s), :downcase), :split, s(:str, "")), :sort), :join))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :outa, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word1), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :outa), :each), s(:args, :ou), s(:if, s(:call, s(:lvar, :ou), :include?, s(:lvar, :word1)), s(:lasgn, :found, s(:true)), nil)), s(:if, s(:call, s(:lvar, :found), :!), s(:block, s(:lasgn, :sw1, s(:call, nil, :sorted, s(:lvar, :word1))), s(:lasgn, :a1, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word2), s(:block, s(:lasgn, :sw2, s(:call, nil, :sorted, s(:lvar, :word2))), s(:if, s(:call, s(:lvar, :sw1), :==, s(:lvar, :sw2)), s(:call, s(:lvar, :a1), :push, s(:lvar, :word2)), nil))), s(:call, s(:lvar, :outa), :push, s(:lvar, :a1))), nil))), s(:return, s(:lvar, :outa))), s(:defn, :check, s(:args, :in_a, :out_a), s(:lasgn, :failed, s(:false)), s(:lasgn, :c_a, s(:call, nil, :combine_anagrams, s(:lvar, :in_a))), s(:iter, s(:call, s(:lvar, :c_a), :each), s(:args, :a), s(:if, s(:call, s(:call, s(:lvar, :out_a), :include?, s(:lvar, :a)), :!), s(:block, s(:lasgn, :failed, s(:true)), s(:break)), nil)), s(:if, s(:lvar, :failed), s(:block, s(:call, nil, :print, s(:str, "Expected: ")), s(:call, nil, :print, s(:lvar, :out_a)), s(:call, nil, :print, s(:str, "\n")), s(:call, nil, :print, s(:str, "Actual:   ")), s(:call, nil, :print, s(:lvar, :c_a)), s(:call, nil, :print, s(:str, "\n"))), s(:call, nil, :print, s(:str, "Passed\n")))), s(:lasgn, :in_a, s(:array, s(:str, "a"), s(:str, "a"), s(:str, "b"), s(:str, "b"), s(:str, "c"), s(:str, "d"))), s(:lasgn, :out_a, s(:array, s(:array, s(:str, "a"), s(:str, "a")), s(:array, s(:str, "b"), s(:str, "b")), s(:array, s(:str, "c")), s(:array, s(:str, "d")))), s(:call, nil, :check, s(:lvar, :in_a), s(:lvar, :out_a)), s(:lasgn, :in_a, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :out_a, s(:array, s(:array, s(:str, "cars"), s(:str, "racs"), s(:str, "scar")), s(:array, s(:str, "four")), s(:array, s(:str, "for")), s(:array, s(:str, "potatoes")), s(:array, s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :check, s(:lvar, :in_a), s(:lvar, :out_a)), s(:lasgn, :in_a, s(:array, s(:str, "cars"), s(:str, "a"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "A"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"), s(:str, "a"), s(:str, "scar"))), s(:lasgn, :out_a, s(:array, s(:array, s(:str, "a")), s(:array, s(:str, "cars"), s(:str, "racs"), s(:str, "scar")), s(:array, s(:str, "four")), s(:array, s(:str, "for")), s(:array, s(:str, "potatoes")), s(:array, s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :check, s(:lvar, :in_a), s(:lvar, :out_a)))