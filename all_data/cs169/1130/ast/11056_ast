s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :upcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :key)), :is_a?, s(:const, :Array)), s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :key)), :<<, s(:lvar, :word)), s(:block, s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :key), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :key)), :<<, s(:lvar, :word)))))), s(:return, s(:call, s(:lvar, :result), :values))), s(:lasgn, :test1, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :combine_anagrams, s(:lvar, :test1)))