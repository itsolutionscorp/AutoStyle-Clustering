s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :temp_words, s(:call, s(:const, :Array), :new, s(:lvar, :words))), s(:iter, s(:call, s(:lvar, :temp_words), :each_index), s(:args, :i), s(:attrasgn, s(:lvar, :temp_words), :[]=, s(:lvar, :i), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :temp_words), :[], s(:lvar, :i)), :downcase), :chars), :sort), :join))), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :temp_words), :each_index), s(:args, :i), s(:if, s(:call, s(:lvar, :h), :has_key?, s(:call, s(:lvar, :temp_words), :[], s(:lvar, :i))), s(:call, s(:call, s(:lvar, :h), :[], s(:call, s(:lvar, :temp_words), :[], s(:lvar, :i))), :<<, s(:lvar, :i)), s(:block, s(:attrasgn, s(:lvar, :h), :[]=, s(:call, s(:lvar, :temp_words), :[], s(:lvar, :i)), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :h), :[], s(:call, s(:lvar, :temp_words), :[], s(:lvar, :i))), :<<, s(:lvar, :i))))), s(:lasgn, :groups, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :h), :each_value), s(:args, :val), s(:block, s(:lasgn, :a, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :val), :each), s(:args, :i), s(:call, s(:lvar, :a), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:call, s(:lvar, :groups), :<<, s(:lvar, :a)))), s(:return, s(:lvar, :groups))), s(:defn, :test_combine_anagrams, s(:args), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))), s(:call, nil, :test_combine_anagrams))