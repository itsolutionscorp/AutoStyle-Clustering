s(:block, s(:defn, :print_ln, s(:args, :line), s(:call, nil, :print, s(:call, s(:call, s(:lvar, :line), :to_s), :+, s(:str, "\n")))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:array)), s(:lasgn, :anagramsInserted, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :wordDown, s(:call, s(:lvar, :word), :downcase)), s(:lasgn, :wordSortted, s(:call, s(:call, s(:call, s(:lvar, :wordDown), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join)), s(:if, s(:call, s(:lvar, :anagramsInserted), :has_key?, s(:lvar, :wordSortted)), s(:block, s(:lasgn, :position, s(:call, s(:lvar, :anagramsInserted), :[], s(:lvar, :wordSortted))), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :position)), :push, s(:lvar, :word))), s(:block, s(:lasgn, :newArray, s(:array)), s(:call, s(:lvar, :newArray), :push, s(:lvar, :word)), s(:lasgn, :position, s(:call, s(:lvar, :anagrams), :length)), s(:attrasgn, s(:lvar, :anagramsInserted), :[]=, s(:lvar, :wordSortted), s(:lvar, :position)), s(:call, s(:lvar, :anagrams), :push, s(:lvar, :newArray)))))), s(:lvar, :anagrams)), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"), s(:str, "hello"), s(:str, "Hello"), s(:str, "A"), s(:str, "a"))))