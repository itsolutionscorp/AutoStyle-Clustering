s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sorted_words, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :sorted_words), :<<, s(:call, s(:call, s(:call, s(:lvar, :word), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join))), s(:lasgn, :result, s(:array)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :sorted_words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :word, s(:call, s(:lvar, :sorted_words), :[], s(:lvar, :i))), s(:lasgn, :added, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :result), :each), s(:args, :item), s(:block, s(:call, nil, :puts, s(:str, "analyzing:")), s(:call, nil, :puts, s(:lvar, :item)), s(:if, s(:call, s(:call, s(:lvar, :word), :downcase), :==, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :item), :[], s(:lit, 0)), :downcase), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join)), s(:block, s(:call, s(:lvar, :item), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:lasgn, :added, s(:lit, 1))), nil))), s(:if, s(:call, s(:lvar, :added), :==, s(:lit, 0)), s(:call, s(:lvar, :result), :<<, s(:call, s(:const, :Array), :[], s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), nil))), s(:call, nil, :puts, s(:lvar, :result)), s(:return, s(:lvar, :result)))