s(:block, s(:defn, :combine_anagrams, s(:args, :input), s(:lasgn, :inputs, s(:iter, s(:call, s(:lvar, :input), :map), s(:args, :elem), s(:lasgn, :elem, s(:call, s(:call, s(:call, s(:call, s(:lvar, :elem), :downcase), :chars), :sort), :join)))), s(:lasgn, :output, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :inputs), :each_with_index), s(:args, :in_elem, :read_index), s(:if, s(:call, s(:lvar, :output), :has_key?, s(:lvar, :in_elem)), s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :in_elem)), :<<, s(:call, s(:lvar, :input), :[], s(:lvar, :read_index))), s(:attrasgn, s(:lvar, :output), :[]=, s(:lvar, :in_elem), s(:array, s(:call, s(:lvar, :input), :[], s(:lvar, :read_index)))))), s(:lasgn, :output_list, s(:array)), s(:iter, s(:call, s(:lvar, :output), :each), s(:args, :key, :elem), s(:call, s(:lvar, :output_list), :<<, s(:lvar, :elem))), s(:call, nil, :puts, s(:lvar, :output_list)), s(:return, s(:lvar, :output_list))), s(:lasgn, :inputt, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :combine_anagrams, s(:lvar, :inputt)))