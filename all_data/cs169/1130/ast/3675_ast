s(:block, s(:defn, :is_anagram, s(:args, :word1, :word2), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :split, s(:lit, //)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :split, s(:lit, //)), :sort)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :dim, s(:call, s(:lvar, :words), :length)), s(:lasgn, :group, s(:lit, 0)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :dim), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :anagr, s(:false)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :i), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:call, nil, :is_anagram, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:lasgn, :anagr, s(:true)), nil)), s(:if, s(:call, s(:lvar, :anagr), :==, s(:false)), s(:lasgn, :group, s(:call, s(:lvar, :group), :+, s(:lit, 1))), nil))), s(:lasgn, :h, s(:iter, s(:call, s(:const, :Array), :new, s(:lvar, :group)), s(:args), s(:call, s(:const, :Array), :new))), s(:lasgn, :index, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:for, s(:dot2, s(:lit, 0), s(:lvar, :index)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :i)), :[], s(:lit, 0)), :==, s(:nil)), s(:block, s(:attrasgn, s(:call, s(:lvar, :h), :[], s(:lvar, :index)), :[]=, s(:lit, 0), s(:lvar, :w)), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1))), s(:break)), s(:if, s(:call, nil, :is_anagram, s(:lvar, :w), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :i)), :[], s(:lit, 0))), s(:block, s(:attrasgn, s(:call, s(:lvar, :h), :[], s(:lvar, :i)), :[]=, s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :i)), :length), s(:lvar, :w)), s(:break)), nil)))), s(:return, s(:lvar, :h))), s(:call, nil, :puts, s(:lit, 1)), s(:call, nil, :puts, s(:call, nil, :is_anagram, s(:str, "a"), s(:str, "a"))), s(:call, nil, :puts, s(:lit, 2)), s(:call, nil, :puts, s(:call, nil, :is_anagram, s(:str, "a"), s(:str, "A"))), s(:call, nil, :puts, s(:lit, 3)), s(:call, nil, :puts, s(:call, s(:call, nil, :is_anagram, s(:str, "a"), s(:str, "b")), :==, s(:false))), s(:call, nil, :puts, s(:lit, 4)), s(:call, nil, :puts, s(:call, nil, :is_anagram, s(:str, "ab"), s(:str, "ba"))), s(:call, nil, :puts, s(:lit, 5)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :==, s(:array, s(:array, s(:str, "cars"), s(:str, "racs"), s(:str, "scar")), s(:array, s(:str, "for")), s(:array, s(:str, "potatoes")), s(:array, s(:str, "four")), s(:array, s(:str, "creams"), s(:str, "scream"))))), s(:call, nil, :puts, s(:lit, 6)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racq"), s(:str, "four"), s(:str, "wcar"), s(:str, "ereams"), s(:str, "scream"))), :==, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racq"), s(:str, "four"), s(:str, "wcar"), s(:str, "ereams"), s(:str, "scream")))))