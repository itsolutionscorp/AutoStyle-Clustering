s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :anag, s(:array)), s(:lasgn, :rest, s(:array)), s(:lasgn, :head, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:lasgn, :regexp, s(:call, s(:call, s(:str, "\\b"), :+, s(:lvar, :head)), :+, s(:str, "\\b"))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:call, s(:const, :Regexp), :new, s(:lvar, :regexp), s(:true)), :=~, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:lasgn, :anag, s(:call, s(:lvar, :anag), :+, s(:array, s(:lvar, :word)))), s(:lasgn, :rest, s(:call, s(:lvar, :rest), :+, s(:array, s(:lvar, :word)))))), s(:if, s(:call, s(:call, s(:lvar, :output), :include?, s(:lvar, :anag)), :!), s(:call, s(:lvar, :output), :<<, s(:lvar, :anag)), nil))), s(:return, s(:lvar, :output)))