s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagram_hash, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :transformed_word, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :anagram_hash), :has_key?, s(:lvar, :transformed_word)), s(:call, s(:call, s(:lvar, :anagram_hash), :[], s(:lvar, :transformed_word)), :<<, s(:lvar, :word)), s(:attrasgn, s(:lvar, :anagram_hash), :[]=, s(:lvar, :transformed_word), s(:array, s(:lvar, :word)))))), s(:iter, s(:call, s(:lvar, :anagram_hash), :inject, s(:array)), s(:args, :memo, :val), s(:call, s(:lvar, :memo), :<<, s(:call, s(:lvar, :val), :[], s(:lit, 1))))), s(:lasgn, :anagrams, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :puts, s(:call, s(:lvar, :anagrams), :inspect)))