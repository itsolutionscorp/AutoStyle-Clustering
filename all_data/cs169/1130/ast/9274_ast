s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :str), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :str), :downcase), :chars), :sort), :join)), s(:call, nil, :print, s(:str, "str: <"), s(:lvar, :str), s(:str, "> key: "), s(:lvar, :key), s(:str, "\n")), s(:lasgn, :list, s(:call, s(:lvar, :hash), :[], s(:lvar, :key))), s(:call, nil, :print, s(:str, "list: "), s(:call, s(:lvar, :list), :inspect), s(:str, "\n")), s(:if, s(:call, s(:lvar, :list), :==, s(:nil)), s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :key), s(:array, s(:lvar, :str))), s(:call, s(:lvar, :list), :<<, s(:lvar, :str))))), s(:call, s(:lvar, :hash), :values)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :inspect)))