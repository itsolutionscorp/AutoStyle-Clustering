s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :previous_anagram, s(:str, "")), s(:lasgn, :words_anagrams, s(:hash)), s(:lasgn, :group, s(:array)), s(:lasgn, :groups, s(:array)), s(:lasgn, :result, s(:nil)), s(:call, s(:lvar, :words_anagrams), :compare_by_identity), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :item), s(:attrasgn, s(:lvar, :words_anagrams), :[]=, s(:lvar, :item), s(:call, s(:call, s(:call, s(:call, s(:lvar, :item), :downcase), :scan, s(:lit, /./)), :sort), :join))), s(:lasgn, :words_anagrams_original, s(:call, s(:lvar, :words_anagrams), :clone)), s(:while, s(:call, s(:call, s(:lvar, :words_anagrams), :size), :>, s(:lit, 0)), s(:block, s(:lasgn, :anagram, s(:call, s(:lvar, :words_anagrams), :[], s(:call, s(:call, s(:lvar, :words_anagrams), :keys), :[], s(:lit, 0)))), s(:if, s(:and, s(:call, s(:lvar, :previous_anagram), :!=, s(:str, "")), s(:call, s(:lvar, :previous_anagram), :!=, s(:lvar, :anagram))), s(:block, s(:call, s(:lvar, :groups), :<<, s(:lvar, :group)), s(:lasgn, :group, s(:array))), nil), s(:lasgn, :word, s(:call, s(:call, s(:lvar, :words_anagrams), :invert), :[], s(:lvar, :anagram))), s(:call, s(:lvar, :group), :<<, s(:lvar, :word)), s(:if, s(:call, s(:call, s(:lvar, :words_anagrams), :size), :==, s(:lit, 1)), s(:call, s(:lvar, :groups), :<<, s(:lvar, :group)), nil), s(:call, s(:lvar, :words_anagrams), :delete, s(:lvar, :word)), s(:lasgn, :previous_anagram, s(:lvar, :anagram))), true), s(:lasgn, :result, s(:lvar, :groups)))