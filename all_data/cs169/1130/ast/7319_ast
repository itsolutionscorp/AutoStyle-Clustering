s(:block, s(:defn, :sort_s, s(:args, :s), s(:lasgn, :arr, s(:call, s(:call, s(:call, s(:lvar, :s), :downcase), :chars), :to_a)), s(:lasgn, :arr1, s(:call, s(:lvar, :arr), :sort)), s(:lasgn, :s1, s(:str, "")), s(:iter, s(:call, s(:lvar, :arr1), :each), s(:args, :c), s(:lasgn, :s1, s(:call, s(:lvar, :s1), :+, s(:lvar, :c)))), s(:return, s(:lvar, :s1))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :swords, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :ww), s(:call, nil, :sort_s, s(:lvar, :ww)))), s(:lasgn, :result, s(:iter, s(:call, s(:const, :Array), :new, s(:call, s(:lvar, :words), :length)), s(:args, :i), s(:nil))), s(:lasgn, :idx, s(:lit, 0)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :i)), :==, s(:nil)), s(:block, s(:lasgn, :idx, s(:lvar, :i)), s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :i), s(:lvar, :idx)), s(:for, s(:dot2, s(:lvar, :i), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:call, s(:call, s(:lvar, :swords), :[], s(:lvar, :j)), :==, s(:call, s(:lvar, :swords), :[], s(:lvar, :i))), s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :j), s(:lvar, :idx)), nil))), nil)), s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :result), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :tmp, s(:call, s(:lvar, :result), :[], s(:lvar, :i))), s(:if, s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :tmp)), :==, s(:nil)), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lvar, :tmp), s(:call, s(:const, :Array), :new)), nil), s(:attrasgn, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :tmp)), :[]=, s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :tmp)), :length), s(:call, s(:lvar, :words), :[], s(:lvar, :i))))), s(:call, s(:lvar, :anagrams), :delete, s(:nil)), s(:return, s(:lvar, :anagrams))))