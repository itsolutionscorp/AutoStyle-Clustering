s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :grouped, s(:call, s(:const, :Array), :new)), s(:lasgn, :new_words_hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :new_word, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:lit, //)), :sort)), s(:if, s(:call, s(:lvar, :new_words_hash), :has_key?, s(:lvar, :new_word)), s(:block, s(:lasgn, :temp, s(:call, s(:lvar, :new_words_hash), :[], s(:lvar, :new_word))), s(:attrasgn, s(:lvar, :new_words_hash), :[]=, s(:lvar, :new_word), s(:call, s(:lvar, :temp), :push, s(:lvar, :w)))), s(:attrasgn, s(:lvar, :new_words_hash), :[]=, s(:lvar, :new_word), s(:array, s(:lvar, :w)))))), s(:iter, s(:call, s(:lvar, :new_words_hash), :each_value), s(:args, :value), s(:call, s(:lvar, :grouped), :push, s(:lvar, :value))), s(:call, nil, :puts, s(:call, s(:lvar, :grouped), :inspect)), s(:return, s(:lvar, :grouped))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "CaRS"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scaR"), s(:str, "creams"), s(:str, "scream"))))