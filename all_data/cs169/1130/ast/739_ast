s(:block, s(:defn, :prepare, s(:args, :words), s(:lasgn, :map, s(:hash)), s(:lasgn, :words, s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :ana, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort), :join)), s(:attrasgn, s(:lvar, :map), :[]=, s(:lvar, :ana), s(:call, s(:call, s(:call, s(:lvar, :map), :[], s(:lvar, :ana)), :to_a), :+, s(:array, s(:lvar, :word))))))), s(:lvar, :map)), s(:defn, :combine_anagrams, s(:args, :words), s(:call, s(:call, nil, :prepare, s(:lvar, :words)), :values)), s(:call, nil, :prepare, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "Cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racS"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))