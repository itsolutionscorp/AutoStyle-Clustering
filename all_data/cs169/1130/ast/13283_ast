s(:block, s(:defn, :anagrams?, s(:args, :w1, :w2), s(:return, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w1), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w2), :downcase), :chars), :sort), :join)))), s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:array)), nil), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:lasgn, :part, s(:lvar, :words)), s(:while, s(:call, s(:call, s(:lvar, :part), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :tmp, s(:iter, s(:call, s(:lvar, :part), :partition), s(:args, :w), s(:call, nil, :anagrams?, s(:lvar, :w), s(:call, s(:lvar, :part), :[], s(:lit, 0))))), s(:lasgn, :result, s(:call, s(:lvar, :result), :+, s(:array, s(:call, s(:lvar, :tmp), :[], s(:lit, 0))))), s(:lasgn, :part, s(:call, s(:lvar, :tmp), :[], s(:lit, 1)))), true), s(:return, s(:lvar, :result))))