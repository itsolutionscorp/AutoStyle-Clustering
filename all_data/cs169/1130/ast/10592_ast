s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sortwords, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :sortwords), :push, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join))), s(:lasgn, :sortwords, s(:call, s(:lvar, :sortwords), :uniq)), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:lasgn, :sortindex, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :sortwords), :each), s(:args, :sortword), s(:block, s(:call, s(:lvar, :result), :push, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :sortword), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join)), s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :sortindex)), :push, s(:lvar, :word)), nil)), s(:lasgn, :sortindex, s(:call, s(:lvar, :sortindex), :+, s(:lit, 1))))), s(:return, s(:lvar, :result)))