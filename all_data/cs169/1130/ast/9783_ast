s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:call, s(:const, :Hash), :new)), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:if, s(:call, s(:lvar, :words), :kind_of?, s(:const, :Array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :res, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join)), s(:if, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :res)), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lvar, :res), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :res)), :<<, s(:lvar, :word))), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lvar, :res), s(:call, s(:const, :Array), :[], s(:lvar, :word)))))), s(:return, s(:call, s(:const, :Array), :[], s(:lvar, :words)))), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :k, :v), s(:call, s(:lvar, :result), :<<, s(:lvar, :v))), s(:return, s(:lvar, :result))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:str, "a")), :to_s)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "auto"), s(:str, "voiture"), s(:str, "radar"))), :to_s)))