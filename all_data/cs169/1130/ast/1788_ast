s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :arr, s(:call, s(:const, :Array), :new)), s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sortedword_downcase, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort)), s(:iter, s(:call, s(:lvar, :arr), :each), s(:args, :item), s(:if, s(:call, s(:lvar, :sortedword_downcase), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :item), :[], s(:lit, 0)), :downcase), :split, s(:str, "")), :sort)), s(:block, s(:call, s(:lvar, :item), :push, s(:lvar, :word)), s(:lasgn, :found, s(:true))), nil)), s(:if, s(:call, s(:lvar, :found), :!), s(:block, s(:lasgn, :tmp, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :tmp), :push, s(:lvar, :word)), s(:call, s(:lvar, :arr), :push, s(:lvar, :tmp))), nil), s(:lasgn, :found, s(:false)))), s(:lvar, :arr))