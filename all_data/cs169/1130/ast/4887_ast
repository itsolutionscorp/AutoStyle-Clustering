s(:block, s(:defn, :count_word, s(:args, :word), s(:lasgn, :result, s(:call, s(:const, :Hash), :new, s(:lit, 0))), s(:iter, s(:call, s(:call, s(:lvar, :word), :downcase), :each_char), s(:args, :x), s(:op_asgn1, s(:lvar, :result), s(:arglist, s(:lvar, :x)), :+, s(:lit, 1))), s(:lvar, :result)), s(:defn, :anagram?, s(:args, :array_or_word, :w2), s(:lasgn, :word, s(:if, s(:call, s(:lvar, :array_or_word), :kind_of?, s(:const, :Array)), s(:call, s(:lvar, :array_or_word), :[], s(:lit, 0)), s(:lvar, :array_or_word))), s(:return, s(:call, s(:call, nil, :count_word, s(:lvar, :word)), :==, s(:call, nil, :count_word, s(:lvar, :w2))))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :results, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :results), :each), s(:args, :result), s(:if, s(:call, nil, :anagram?, s(:lvar, :result), s(:lvar, :word)), s(:block, s(:call, s(:lvar, :result), :<<, s(:lvar, :word)), s(:lasgn, :found, s(:true))), nil)), s(:if, s(:lvar, :found), nil, s(:call, s(:lvar, :results), :<<, s(:array, s(:lvar, :word)))))), s(:lvar, :results)))