s(:block, s(:defn, :are_anagrams, s(:args, :word1, :word2), s(:if, s(:call, s(:call, s(:lvar, :word1), :length), :==, s(:call, s(:lvar, :word2), :length)), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :chars), :sort))), nil), s(:return, s(:false))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:lasgn, :oldWords, s(:call, s(:const, :Array), :new, s(:lvar, :words))), s(:while, s(:call, s(:call, s(:lvar, :oldWords), :length), :!=, s(:lit, 0)), s(:block, s(:lasgn, :word, s(:call, s(:lvar, :oldWords), :[], s(:lit, 0))), s(:call, s(:lvar, :oldWords), :delete_at, s(:lit, 0)), s(:lasgn, :subResult, s(:array, s(:lvar, :word))), s(:lasgn, :i, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :oldWords), :length)), s(:block, s(:if, s(:call, nil, :are_anagrams, s(:call, s(:lvar, :oldWords), :[], s(:lvar, :i)), s(:lvar, :word)), s(:block, s(:lasgn, :subResult, s(:call, s(:lvar, :subResult), :+, s(:array, s(:call, s(:lvar, :oldWords), :[], s(:lvar, :i))))), s(:call, s(:lvar, :oldWords), :delete_at, s(:lvar, :i))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:lasgn, :result, s(:call, s(:lvar, :result), :+, s(:array, s(:lvar, :subResult))))), true), s(:return, s(:lvar, :result))))