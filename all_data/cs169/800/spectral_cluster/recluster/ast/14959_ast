s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :map, s(:call, s(:const, :Hash), :new)), s(:lasgn, :g, s(:call, s(:const, :Array), :new)), s(:lasgn, :index, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:if, s(:call, s(:call, s(:lvar, :map), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join)), :nil?), s(:block, s(:attrasgn, s(:lvar, :map), :[]=, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join), s(:lvar, :index)), s(:attrasgn, s(:lvar, :g), :[]=, s(:call, s(:lvar, :map), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join)), s(:call, nil, :Array, s(:lvar, :w))), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1)))), s(:call, s(:call, s(:lvar, :g), :[], s(:call, s(:lvar, :map), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join))), :<<, s(:lvar, :w)))), s(:lvar, :g))