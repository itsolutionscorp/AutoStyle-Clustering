s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :list, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :match, s(:nil)), s(:iter, s(:call, s(:lvar, :list), :each), s(:args, :anagram), s(:if, s(:call, nil, :matches?, s(:lvar, :word), s(:call, s(:lvar, :anagram), :[], s(:lit, 0))), s(:lasgn, :match, s(:call, s(:lvar, :list), :index, s(:lvar, :anagram))), nil)), s(:if, s(:call, s(:lvar, :match), :!), s(:block, s(:call, nil, :puts, s(:call, s(:call, s(:str, "Word "), :+, s(:lvar, :word)), :+, s(:str, " doesnt match"))), s(:lasgn, :item, s(:array, s(:lvar, :word))), s(:call, s(:lvar, :list), :push, s(:lvar, :item))), s(:block, s(:call, nil, :puts, s(:call, s(:call, s(:str, "Word "), :+, s(:lvar, :word)), :+, s(:str, " matches"))), s(:call, s(:call, s(:lvar, :list), :[], s(:lvar, :match)), :push, s(:lvar, :word)))))), s(:return, s(:lvar, :list))), s(:defn, :matches?, s(:args, :string1, :string2), s(:lasgn, :word1, s(:call, s(:call, s(:call, s(:call, s(:lvar, :string1), :downcase), :chars), :sort), :join)), s(:lasgn, :word2, s(:call, s(:call, s(:call, s(:call, s(:lvar, :string2), :downcase), :chars), :sort), :join)), s(:return, s(:call, s(:lvar, :word1), :eql?, s(:lvar, :word2)))), s(:call, nil, :puts, s(:call, nil, :matches?, s(:str, "cars"), s(:str, "racs"))), s(:call, nil, :puts, s(:call, nil, :matches?, s(:str, "cars"), s(:str, "scar"))), s(:call, nil, :puts, s(:call, nil, :matches?, s(:str, "cars"), s(:str, "four"))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))