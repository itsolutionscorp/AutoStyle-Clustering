s(:block, s(:defn, :anagramize, s(:args, :string), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :string), :downcase), :split, s(:lit, //)), :sort), :join), :squeeze)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :flag, s(:false)), s(:lasgn, :flag1, s(:false)), s(:iter, s(:call, s(:lvar, :groups), :each), s(:args, :group), s(:if, s(:call, s(:call, nil, :anagramize, s(:lvar, :word)), :==, s(:call, nil, :anagramize, s(:call, s(:lvar, :group), :[], s(:lit, 0)))), s(:block, s(:iter, s(:call, s(:lvar, :group), :each), s(:args, :ele), s(:if, s(:call, s(:lvar, :word), :==, s(:lvar, :ele)), s(:block, s(:call, nil, :p, s(:dstr, "", s(:evstr, s(:lvar, :word)), s(:str, " in "), s(:evstr, s(:lvar, :group)))), s(:lasgn, :flag, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :flag), :!), s(:block, s(:call, s(:lvar, :group), :<<, s(:lvar, :word)), s(:lasgn, :flag1, s(:true)), s(:break)), nil)), nil)), s(:if, s(:and, s(:call, s(:lvar, :flag1), :!), s(:call, s(:lvar, :flag), :!)), s(:call, s(:lvar, :groups), :<<, s(:array, s(:lvar, :word))), nil))), s(:lvar, :groups)), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :print, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:call, nil, :print, s(:str, "\n")))