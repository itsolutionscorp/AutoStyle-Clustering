s(:block, s(:call, nil, :require, s(:str, "pp")), s(:class, :String, nil, s(:defn, :permutation, s(:args, :"&block"), s(:lasgn, :arr, s(:call, nil, :split, s(:lit, //))), s(:iter, s(:call, s(:lvar, :arr), :permutation), s(:args, :i), s(:yield, s(:call, s(:lvar, :i), :join))))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :array_anagram, s(:call, s(:const, :Array), :new)), s(:lasgn, :words2, s(:lvar, :words)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :arrtmp, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :arrtmp), :insert, s(:lit, 0), s(:lvar, :w)), s(:iter, s(:call, s(:call, s(:lvar, :w), :to_s), :permutation), s(:args, :i), s(:if, s(:call, s(:lvar, :words2), :include?, s(:lvar, :i)), s(:block, s(:call, s(:lvar, :arrtmp), :insert, s(:call, s(:lvar, :arrtmp), :length), s(:lvar, :i)), s(:call, s(:lvar, :words2), :delete, s(:lvar, :w))), nil)), s(:call, s(:lvar, :array_anagram), :insert, s(:call, s(:lvar, :array_anagram), :length), s(:call, s(:lvar, :arrtmp), :uniq)))), s(:return, s(:lvar, :array_anagram))))