s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sWords, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:block, s(:call, s(:lvar, :x), :downcase!), s(:lasgn, :y, s(:call, s(:call, s(:call, s(:lvar, :x), :chars), :sort), :join)), s(:attrasgn, s(:lvar, :sWords), :[]=, s(:lvar, :y), s(:lvar, :x)))), s(:lasgn, :finalArray, s(:call, s(:const, :Array), :new)), s(:lasgn, :j, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :sWords), :each_key), s(:args, :k), s(:block, s(:lasgn, :fWords, s(:call, s(:const, :Array), :new)), s(:lasgn, :nWords, s(:call, s(:const, :Array), :new)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:if, s(:and, s(:call, s(:lvar, :k), :==, s(:call, s(:call, s(:call, s(:lvar, :w), :chars), :sort), :join)), s(:call, s(:call, s(:lvar, :k), :length), :==, s(:call, s(:lvar, :w), :length))), s(:block, s(:attrasgn, s(:lvar, :fWords), :[]=, s(:lvar, :i), s(:lvar, :w)), s(:attrasgn, s(:lvar, :nWords), :[]=, s(:lvar, :i), s(:lvar, :fWords)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), nil)), s(:attrasgn, s(:lvar, :finalArray), :[]=, s(:lvar, :j), s(:call, s(:call, s(:lvar, :nWords), :uniq), :flatten)), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1))))), s(:call, nil, :puts, s(:call, s(:lvar, :finalArray), :inspect)), s(:return, s(:lvar, :finalArray))))