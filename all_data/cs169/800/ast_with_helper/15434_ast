s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:defn, :same?, s(:args, :a, :b), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :a), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :b), :downcase), :chars), :sort), :join))), s(:lasgn, :anagrams, s(:array)), s(:while, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :a, s(:call, s(:lvar, :words), :delete_at, s(:lit, 0))), s(:lasgn, :temp, s(:array, s(:lvar, :a))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, nil, :same?, s(:lvar, :a), s(:lvar, :word)), s(:call, s(:lvar, :temp), :<<, s(:call, s(:lvar, :words), :slice!, s(:call, s(:lvar, :words), :index, s(:lvar, :word)))), nil)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, nil, :same?, s(:lvar, :a), s(:lvar, :word)), s(:call, s(:lvar, :temp), :<<, s(:call, s(:lvar, :words), :slice!, s(:call, s(:lvar, :words), :index, s(:lvar, :word)))), nil)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, nil, :same?, s(:lvar, :a), s(:lvar, :word)), s(:call, s(:lvar, :temp), :<<, s(:call, s(:lvar, :words), :slice!, s(:call, s(:lvar, :words), :index, s(:lvar, :word)))), nil)), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :temp))), true), s(:return, s(:lvar, :anagrams))), s(:defn, :same?, s(:args, :a, :b), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :a), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :b), :downcase), :chars), :sort), :join))))