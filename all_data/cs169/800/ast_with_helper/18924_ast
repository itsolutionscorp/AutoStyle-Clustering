s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :map, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :map), :has_key?, s(:lvar, :key)), s(:block, s(:lasgn, :values, s(:call, s(:call, s(:lvar, :map), :[], s(:lvar, :key)), :flatten)), s(:attrasgn, s(:lvar, :values), :[]=, s(:call, s(:lvar, :values), :count), s(:lvar, :word)), s(:attrasgn, s(:lvar, :map), :[]=, s(:lvar, :key), s(:lvar, :values))), s(:block, s(:lasgn, :value, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :value), :[]=, s(:lit, 0), s(:lvar, :word)), s(:attrasgn, s(:lvar, :map), :[]=, s(:lvar, :key), s(:lvar, :value)))))), s(:lasgn, :output, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:call, s(:lvar, :map), :keys), :each), s(:args, :key), s(:call, s(:lvar, :output), :push, s(:call, s(:const, :Array), :new, s(:call, s(:lvar, :map), :[], s(:lvar, :key))))), s(:return, s(:lvar, :output))))