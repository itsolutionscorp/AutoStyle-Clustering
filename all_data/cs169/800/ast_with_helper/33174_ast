s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:call, s(:const, :Array), :new)), s(:lasgn, :n, s(:call, s(:lvar, :words), :length)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :n), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :output), :length), :==, s(:lit, 0)), s(:call, s(:lvar, :output), :concat, s(:array, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i))))), s(:block, s(:lasgn, :added, s(:false)), s(:lasgn, :k, s(:call, s(:lvar, :output), :length)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :k), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :j)), :[], s(:lit, 0)), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :chars), :sort)), s(:block, s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :j)), :concat, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:lasgn, :added, s(:true))), nil)), s(:if, s(:call, s(:lvar, :added), :!), s(:call, s(:lvar, :output), :concat, s(:array, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i))))), nil)))), s(:return, s(:lvar, :output))))