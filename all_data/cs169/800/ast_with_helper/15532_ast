s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams_group, s(:array)), s(:if, s(:call, s(:lvar, :words), :empty?), s(:return, s(:lvar, :anagrams_group)), nil), s(:lasgn, :anagrams_group, s(:array, s(:array, s(:call, s(:lvar, :words), :[], s(:lit, 0))))), s(:call, s(:lvar, :words), :delete_at, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :flag_added, s(:false)), s(:lasgn, :word_array, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort)), s(:iter, s(:call, s(:lvar, :anagrams_group), :each), s(:args, :group), s(:if, s(:call, s(:call, s(:lvar, :word_array), :<=>, s(:call, s(:call, s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 0)), :downcase), :split, s(:lit, //)), :sort)), :==, s(:lit, 0)), s(:block, s(:call, s(:lvar, :group), :<<, s(:lvar, :word)), s(:lasgn, :flag_added, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :flag_added), :!), s(:call, s(:lvar, :anagrams_group), :<<, s(:array, s(:lvar, :word))), nil))), s(:return, s(:lvar, :anagrams_group))))