s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :gram, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :gram), :<<, s(:array, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), s(:call, s(:lvar, :gram), :length)))), s(:call, s(:lvar, :gram), :sort!), s(:lasgn, :out, s(:call, s(:const, :Array), :new)), s(:lasgn, :temp, s(:call, s(:const, :Array), :new)), s(:for, s(:dot2, s(:lit, 1), s(:call, s(:lvar, :gram), :length)), s(:lasgn, :i), s(:block, s(:call, s(:lvar, :temp), :push, s(:call, s(:lvar, :words), :[], s(:call, s(:call, s(:lvar, :gram), :[], s(:call, s(:lvar, :i), :-, s(:lit, 1))), :[], s(:lit, 1)))), s(:if, s(:call, s(:lvar, :i), :==, s(:call, s(:lvar, :gram), :length)), s(:block, s(:call, s(:lvar, :out), :push, s(:call, s(:lvar, :temp), :compact)), s(:break)), s(:if, s(:call, s(:call, s(:call, s(:lvar, :gram), :[], s(:call, s(:lvar, :i), :-, s(:lit, 1))), :[], s(:lit, 0)), :==, s(:call, s(:call, s(:lvar, :gram), :[], s(:lvar, :i)), :[], s(:lit, 0))), s(:next), s(:block, s(:call, s(:lvar, :out), :push, s(:call, s(:lvar, :temp), :compact)), s(:call, s(:lvar, :temp), :clear)))))), s(:return, s(:lvar, :out))))