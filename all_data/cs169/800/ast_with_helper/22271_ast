s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :tempWords, s(:call, s(:lvar, :words), :sort)), s(:lasgn, :hashWords, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :tempWords), :each), s(:args, :tempString), s(:block, s(:lasgn, :stringSortedChars, s(:call, nil, :sorted_char_array, s(:lvar, :tempString))), s(:if, s(:call, s(:lvar, :hashWords), :has_key?, s(:lvar, :stringSortedChars)), s(:block, s(:lasgn, :tempArray, s(:call, s(:const, :Array), :new)), s(:lasgn, :tempArray, s(:call, s(:lvar, :hashWords), :fetch, s(:lvar, :stringSortedChars))), s(:call, s(:lvar, :tempArray), :push, s(:lvar, :tempString))), s(:block, s(:lasgn, :tempArray, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :tempArray), :[]=, s(:lit, 0), s(:lvar, :tempString)), s(:attrasgn, s(:lvar, :hashWords), :[]=, s(:lvar, :stringSortedChars), s(:lvar, :tempArray)))))), s(:lasgn, :arrayResult, s(:call, s(:lvar, :hashWords), :values)), s(:return, s(:lvar, :arrayResult))), s(:defn, :sorted_char_array, s(:args, :tempString), s(:lasgn, :tempArray, s(:call, s(:const, :Array), :new)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :tempString), :each_char), s(:args, :tempChar), s(:block, s(:attrasgn, s(:lvar, :tempArray), :[]=, s(:lvar, :i), s(:call, s(:lvar, :tempChar), :downcase)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), s(:lasgn, :tempArray, s(:call, s(:lvar, :tempArray), :sort)), s(:lasgn, :strSortedCharString, s(:str, "")), s(:iter, s(:call, s(:lvar, :tempArray), :each), s(:args, :charAtIndex), s(:lasgn, :strSortedCharString, s(:call, s(:lvar, :strSortedCharString), :+, s(:lvar, :charAtIndex)))), s(:return, s(:lvar, :strSortedCharString))))