s(:block, s(:defn, :anagram, s(:args, :word1, :word2), s(:if, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :chars), :sort)), s(:return, s(:true)), nil), s(:return, s(:false))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:while, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :word, s(:call, s(:lvar, :words), :shift)), s(:lasgn, :word_vect, s(:array)), s(:attrasgn, s(:lvar, :word_vect), :[]=, s(:lit, 0), s(:lvar, :word)), s(:lasgn, :i, s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:while, s(:call, s(:lvar, :i), :>=, s(:lit, 0)), s(:block, s(:if, s(:call, nil, :anagram, s(:lvar, :word), s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:block, s(:call, s(:lvar, :word_vect), :insert, s(:lit, 1), s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:call, s(:lvar, :words), :delete_at, s(:lvar, :i))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :-, s(:lit, 1)))), true), s(:call, s(:lvar, :result), :insert, s(:lit, -1), s(:lvar, :word_vect))), true), s(:call, nil, :puts, s(:call, s(:lvar, :result), :length)), s(:return, s(:lvar, :result))))