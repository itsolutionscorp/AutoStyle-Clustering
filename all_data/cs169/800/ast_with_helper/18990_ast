s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:while, s(:call, s(:call, s(:lvar, :words), :size), :!=, s(:lit, 0)), s(:block, s(:lasgn, :string, s(:call, s(:lvar, :words), :[], s(:lit, 0))), s(:lasgn, :subArray, s(:call, nil, :takeAnagrams, s(:lvar, :string), s(:lvar, :words))), s(:lasgn, :words, s(:call, s(:lvar, :words), :-, s(:lvar, :subArray))), s(:call, s(:lvar, :result), :insert, s(:lit, -1), s(:lvar, :subArray))), true), s(:lvar, :result)), s(:defn, :takeAnagrams, s(:args, :theString, :array), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :result), :[]=, s(:lit, 0), s(:lvar, :theString)), s(:lasgn, :sorted, s(:call, s(:call, s(:call, s(:call, s(:lvar, :theString), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:for, s(:dot2, s(:lit, 1), s(:call, s(:call, s(:lvar, :array), :size), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :matchString, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :array), :[], s(:lvar, :i)), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:if, s(:call, s(:lvar, :sorted), :==, s(:lvar, :matchString)), s(:call, s(:lvar, :result), :insert, s(:lit, -1), s(:call, s(:lvar, :array), :[], s(:lvar, :i))), nil))), s(:lvar, :result)))