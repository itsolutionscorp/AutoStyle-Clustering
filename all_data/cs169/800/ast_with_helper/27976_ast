s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :response, s(:array)), s(:lasgn, :matched, s(:array)), s(:lasgn, :index, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :anagram), s(:block, s(:if, s(:call, s(:call, s(:lvar, :matched), :include?, s(:lvar, :anagram)), :!), s(:block, s(:call, s(:lvar, :matched), :<<, s(:lvar, :anagram)), s(:lasgn, :anagram_group, s(:array)), s(:call, s(:lvar, :anagram_group), :<<, s(:lvar, :anagram)), s(:iter, s(:call, s(:call, s(:lvar, :index), :+, s(:lit, 1)), :upto, s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:args, :i), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :anagram), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :chars), :sort), :join)), s(:block, s(:call, s(:lvar, :anagram_group), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:if, s(:call, s(:call, s(:lvar, :matched), :include?, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), :!), s(:call, s(:lvar, :matched), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), nil)), nil)), s(:call, s(:lvar, :response), :<<, s(:lvar, :anagram_group))), nil), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1))))), s(:lvar, :response)))