s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :output), :empty?), s(:call, s(:lvar, :output), :<<, s(:array, s(:lvar, :word))), s(:block, s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :output), :each), s(:args, :out), s(:block, s(:lasgn, :target, s(:call, s(:lvar, :out), :[], s(:lit, 0))), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :target), :to_s), :downcase), :split, s(:lit, //)), :sort), :to_s), :downcase), :==, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :to_s), :downcase), :split, s(:lit, //)), :sort), :to_s), :downcase)), s(:block, s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :i)), :<<, s(:lvar, :word)), s(:lasgn, :found, s(:true))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), s(:if, s(:call, s(:lvar, :found), :!), s(:call, s(:lvar, :output), :<<, s(:array, s(:lvar, :word))), nil)))), s(:lvar, :output)))