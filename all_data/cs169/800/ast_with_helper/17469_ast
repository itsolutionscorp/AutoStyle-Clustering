s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :size), :==, s(:lit, 0)), s(:return, s(:lvar, :words)), nil), s(:lasgn, :hash, s(:call, s(:const, :Hash), :new, s(:str, "Sorted"))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :x), s(:call, s(:call, s(:call, s(:call, s(:lvar, :x), :downcase), :unpack, s(:str, "c*")), :sort), :pack, s(:str, "c*")))), s(:lasgn, :a, s(:array)), s(:lasgn, :a, s(:call, s(:call, s(:lvar, :hash), :values), :uniq)), s(:lasgn, :retArray, s(:call, s(:const, :Array), :new)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :a), :size), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :h2, s(:iter, s(:call, s(:lvar, :hash), :select), s(:args, :k, :v), s(:call, s(:lvar, :v), :==, s(:call, s(:lvar, :a), :at, s(:lvar, :i))))), s(:call, s(:lvar, :retArray), :push, s(:call, s(:lvar, :h2), :keys)))), s(:return, s(:lvar, :retArray))))