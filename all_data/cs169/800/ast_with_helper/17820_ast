s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :h, s(:call, s(:const, :Array), :new)), s(:lasgn, :w2, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:call, s(:lvar, :w2), :<<, s(:call, s(:call, s(:call, s(:call, s(:lvar, :x), :downcase), :split, s(:lit, //)), :sort), :join))), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :x), s(:if, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :x)), :empty?), :!), s(:block, s(:lasgn, :s, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :y), s(:if, s(:call, s(:call, s(:lvar, :w2), :[], s(:lvar, :x)), :==, s(:call, s(:lvar, :w2), :[], s(:lvar, :y))), s(:block, s(:call, s(:lvar, :s), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :y))), s(:attrasgn, s(:lvar, :words), :[]=, s(:lvar, :y), s(:str, ""))), nil)), s(:call, s(:lvar, :h), :<<, s(:lvar, :s))), nil)), s(:return, s(:lvar, :h))))