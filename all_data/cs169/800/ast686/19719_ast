s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:array)), s(:lasgn, :sorted_words, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :match, s(:false)), s(:lasgn, :wsorted, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :sorted_words), :length), :-, s(:lit, 1))), s(:lasgn, :index), s(:if, s(:call, s(:lvar, :wsorted), :==, s(:call, s(:lvar, :sorted_words), :[], s(:lvar, :index))), s(:block, s(:lasgn, :match, s(:true)), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :index)), :<<, s(:lvar, :word)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :match), :!), s(:block, s(:call, s(:lvar, :sorted_words), :<<, s(:lvar, :wsorted)), s(:lasgn, :anagram, s(:array)), s(:call, s(:lvar, :anagram), :<<, s(:lvar, :word)), s(:call, s(:lvar, :anagrams), :insert, s(:call, s(:lvar, :anagrams), :length), s(:lvar, :anagram))), nil))), s(:lvar, :anagrams)), s(:call, nil, :puts, s(:dstr, "", s(:evstr, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))))