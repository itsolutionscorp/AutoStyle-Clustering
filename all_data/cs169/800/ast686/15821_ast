s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:call, nil, :print, s(:str, "input:\n[")), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:call, nil, :print, s(:lvar, :w)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))), s(:lasgn, :w, s(:call, s(:lvar, :w), :downcase)), s(:if, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :!=, s(:nil)), s(:call, nil, :print, s(:str, " , ")), nil))), s(:call, nil, :print, s(:str, "]\n")), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:call, nil, :print, s(:lvar, :w), s(:str, " ")), s(:lasgn, :idx, s(:call, s(:call, s(:call, s(:lvar, :w), :chars), :sort), :join)), s(:lasgn, :idx, s(:call, s(:lvar, :idx), :downcase)), s(:if, s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :idx)), :==, s(:nil)), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :idx), s(:call, s(:const, :Array), :new)), nil), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :idx)), :push, s(:lvar, :w)), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :idx)), :sort))), s(:lasgn, :ret, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :h), :each), s(:args, :idx, :v), s(:block, s(:call, nil, :print, s(:str, "index:"), s(:lvar, :idx), s(:str, "\n")), s(:lasgn, :group, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :v), :each), s(:args, :val), s(:block, s(:call, nil, :print, s(:lvar, :val), s(:str, " ")), s(:call, s(:lvar, :group), :push, s(:lvar, :val)))), s(:call, nil, :print, s(:str, "\n")), s(:call, s(:lvar, :ret), :push, s(:lvar, :group)))), s(:lasgn, :i, s(:lit, 0)), s(:call, nil, :print, s(:str, "output:\n[")), s(:iter, s(:call, s(:lvar, :ret), :each), s(:args, :r), s(:block, s(:call, nil, :print, s(:str, "[")), s(:lasgn, :y, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :r), :each), s(:args, :v), s(:block, s(:call, nil, :print, s(:lvar, :v)), s(:lasgn, :y, s(:call, s(:lvar, :y), :+, s(:lit, 1))), s(:if, s(:call, s(:call, s(:lvar, :r), :[], s(:lvar, :y)), :!=, s(:nil)), s(:call, nil, :print, s(:str, " , ")), nil))), s(:call, nil, :print, s(:str, "]")), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))), s(:if, s(:call, s(:call, s(:lvar, :ret), :[], s(:lvar, :i)), :!=, s(:nil)), s(:call, nil, :print, s(:str, " , ")), nil))), s(:call, nil, :print, s(:str, "]\n")), s(:return, s(:lvar, :ret))), s(:if, s(:call, s(:str, "(string)"), :==, s(:gvar, :$0)), s(:block, s(:lasgn, :l, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :r, s(:call, nil, :combine_anagrams, s(:lvar, :l))), s(:call, nil, :print, s(:lvar, :r), s(:str, "\n")), s(:lasgn, :l, s(:array, s(:str, "A"), s(:str, "a"))), s(:lasgn, :r, s(:call, nil, :combine_anagrams, s(:lvar, :l))), s(:call, nil, :print, s(:lvar, :r), s(:str, "\n")), s(:lasgn, :l, s(:array, s(:str, "hello"), s(:str, "HeLLo"))), s(:lasgn, :r, s(:call, nil, :combine_anagrams, s(:lvar, :l))), s(:call, nil, :print, s(:lvar, :r), s(:str, "\n"))), nil))