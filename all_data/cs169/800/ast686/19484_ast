s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :rslt, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :ind, s(:lit, -1)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :rslt), :each), s(:args, :arr), s(:block, s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :arr), :[], s(:lit, 0)), :downcase), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort)), s(:lasgn, :ind, s(:lvar, :i)), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), s(:if, s(:call, s(:lvar, :ind), :==, s(:lit, -1)), s(:block, s(:attrasgn, s(:lvar, :rslt), :[]=, s(:call, s(:lvar, :rslt), :size), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :rslt), :[], s(:call, s(:call, s(:lvar, :rslt), :size), :-, s(:lit, 1))), :<<, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :rslt), :[], s(:lvar, :ind)), :<<, s(:lvar, :word))))), s(:return, s(:lvar, :rslt)))