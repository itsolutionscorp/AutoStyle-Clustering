s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagramHash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :wd, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :anagramHash), :[], s(:lvar, :wd)), :==, s(:nil)), s(:attrasgn, s(:lvar, :anagramHash), :[]=, s(:lvar, :wd), s(:array, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :anagramHash), :[], s(:lvar, :wd)), :concat, s(:array, s(:lvar, :word)))))), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :anagramHash), :each), s(:args, :key, :val), s(:lasgn, :result, s(:call, s(:lvar, :result), :concat, s(:array, s(:lvar, :val))))), s(:return, s(:lvar, :result))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cArs"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :to_s)))