s(:block, s(:defn, :is_anagram, s(:args, :word1, :word2), s(:lasgn, :array1, s(:call, s(:call, s(:lvar, :word1), :downcase), :split, s(:lit, //))), s(:call, s(:lvar, :array1), :sort!), s(:lasgn, :array2, s(:call, s(:call, s(:lvar, :word2), :downcase), :split, s(:lit, //))), s(:call, s(:lvar, :array2), :sort!), s(:return, s(:call, s(:lvar, :array1), :==, s(:lvar, :array2)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :found, s(:false)), s(:lasgn, :groups, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :groups), :empty?), s(:call, s(:lvar, :groups), :push, s(:call, s(:const, :Array), :new, s(:lit, 1), s(:lvar, :word))), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :groups), :each), s(:args, :group), s(:if, s(:call, nil, :is_anagram, s(:call, s(:lvar, :group), :at, s(:lit, 0)), s(:lvar, :word)), s(:block, s(:call, s(:lvar, :group), :push, s(:lvar, :word)), s(:lasgn, :found, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :found), :==, s(:false)), s(:call, s(:lvar, :groups), :push, s(:call, s(:const, :Array), :new, s(:lit, 1), s(:lvar, :word))), nil)))), s(:return, s(:lvar, :groups))))