s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :groups), :each), s(:args, :group), s(:if, s(:call, s(:call, nil, :normalize, s(:call, s(:lvar, :group), :[], s(:lit, 0))), :==, s(:call, nil, :normalize, s(:lvar, :word))), s(:block, s(:lasgn, :found, s(:true)), s(:call, s(:lvar, :group), :push, s(:lvar, :word))), nil)), s(:if, s(:lvar, :found), nil, s(:call, s(:lvar, :groups), :push, s(:array, s(:lvar, :word)))))), s(:lvar, :groups)), s(:defn, :normalize, s(:args, :word), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort), :join))), s(:call, nil, :require, s(:str, "pp")), s(:call, nil, :pp, s(:call, nil, :combine_anagrams, s(:array, s(:str, "Cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))