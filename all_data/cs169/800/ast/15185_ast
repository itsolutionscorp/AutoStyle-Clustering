s(:block, s(:defn, :anagrams?, s(:args, :w1, :w2), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w1), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w2), :downcase), :chars), :sort), :join))), s(:defn, :combine_anagrams, s(:args, :words), s(:call, s(:lvar, :words), :sort!), s(:lasgn, :words_ref, s(:call, s(:lvar, :words), :clone)), s(:lasgn, :groups, s(:array)), s(:while, s(:call, s(:call, s(:lvar, :words_ref), :length), :!=, s(:lit, 0)), s(:block, s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :anagrama, s(:array)), s(:iter, s(:call, s(:lvar, :words_ref), :each), s(:args, :w), s(:if, s(:call, nil, :anagrams?, s(:call, s(:lvar, :words_ref), :[], s(:lit, 0)), s(:lvar, :w)), s(:call, s(:lvar, :anagrama), :<<, s(:lvar, :w)), nil)), s(:while, s(:call, s(:lvar, :count), :!=, s(:call, s(:lvar, :words_ref), :length)), s(:if, s(:call, nil, :anagrams?, s(:call, s(:lvar, :words_ref), :[], s(:lvar, :count)), s(:call, s(:lvar, :anagrama), :[], s(:lit, 0))), s(:call, s(:lvar, :words_ref), :delete_at, s(:lvar, :count)), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1)))), true), s(:call, s(:lvar, :groups), :<<, s(:lvar, :anagrama))), true), s(:return, s(:lvar, :groups))))