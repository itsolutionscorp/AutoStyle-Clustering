s(:block, s(:defn, :toSortArr, s(:args, :str), s(:call, s(:call, s(:call, s(:lvar, :str), :downcase), :split, s(:lit, //)), :sort)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:until, s(:call, s(:lvar, :words), :empty?), s(:block, s(:lasgn, :new_arr, s(:call, s(:array), :<<, s(:call, s(:lvar, :words), :[], s(:lit, 0)))), s(:for, s(:dot2, s(:lit, 1), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, nil, :toSortArr, s(:call, s(:lvar, :new_arr), :[], s(:lit, 0))), :==, s(:call, nil, :toSortArr, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:call, s(:lvar, :new_arr), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), nil)), s(:call, s(:lvar, :result), :<<, s(:lvar, :new_arr)), s(:lasgn, :words, s(:call, s(:lvar, :words), :-, s(:lvar, :new_arr)))), true), s(:lvar, :result)))