s(:block, s(:defn, :is_anagram, s(:args, :word1, :word2), s(:lasgn, :str1, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :chars), :sort), :join, s(:str, ""))), s(:lasgn, :str2, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :chars), :sort), :join, s(:str, ""))), s(:return, s(:call, s(:lvar, :str1), :==, s(:lvar, :str2)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :existed, s(:false)), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :anagram), s(:if, s(:call, nil, :is_anagram, s(:call, s(:lvar, :anagram), :[], s(:lit, 0)), s(:lvar, :word)), s(:block, s(:call, s(:lvar, :anagram), :push, s(:lvar, :word)), s(:lasgn, :existed, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :existed), :!), s(:call, s(:lvar, :anagrams), :push, s(:array, s(:lvar, :word))), nil))), s(:return, s(:lvar, :anagrams))), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :result, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:call, nil, :puts, s(:call, s(:lvar, :result), :inspect)))