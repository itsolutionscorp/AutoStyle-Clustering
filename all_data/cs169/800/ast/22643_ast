s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sorted, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :result), :size), :>, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :result), :each), s(:args, :r), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :r), :[], s(:lit, 0)), :downcase), :chars), :sort), :join), :==, s(:lvar, :sorted)), s(:block, s(:call, s(:lvar, :r), :<<, s(:lvar, :word)), s(:break)), s(:block, s(:call, s(:lvar, :result), :<<, s(:array, s(:lvar, :word))), s(:break)))), s(:lasgn, :result, s(:array, s(:array, s(:lvar, :word))))))), s(:lvar, :result)), s(:call, nil, :combine_anagrams, s(:array, s(:str, "Cars"), s(:str, "cars"), s(:str, "cars"), s(:str, "racs"), s(:str, "CArs"), s(:str, "CarS"), s(:str, "racS"))))