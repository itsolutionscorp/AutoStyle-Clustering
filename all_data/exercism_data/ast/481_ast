s(:defn, :compute, s(:args, :strand_a, :strand_b), s(:if, s(:call, s(:lvar, :strand_a), :==, s(:lvar, :strand_b)), s(:lit, 0), s(:block, s(:lasgn, :short_a, s(:call, s(:call, s(:lvar, :strand_a), :chars), :take, s(:call, s(:lvar, :strand_b), :length))), s(:iter, s(:call, s(:call, s(:lvar, :short_a), :zip, s(:call, s(:lvar, :strand_b), :chars)), :reduce, s(:lit, 0)), s(:args, :result, :pair), s(:block, s(:if, s(:call, s(:call, s(:lvar, :pair), :[], s(:lit, 0)), :==, s(:call, s(:lvar, :pair), :[], s(:lit, 1))), nil, s(:lasgn, :result, s(:call, s(:lvar, :result), :+, s(:lit, 1)))), s(:lvar, :result))))))