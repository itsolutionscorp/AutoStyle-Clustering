ADDING MACHINE Questions

-Which version did you implement for the exercise?
We used a single loop, the while loop that was given in the provided code. Since the condition was simply "true", the only way for the program to terminate was by adding a "return" statement, which returned nothing since the main method was already written with "void". 

-Describe in words how the other version would work, without actually coding it.
In order to write the version that has two loops, we could simply change one of our if statements into a while loop as follows: Our current program terminates when the most recent input and the one before it are both zero. If we simply changed this into a while loop with the condition that these two numbers (the most recent input and the one before it) aren't both zero, then the program would still run the same way. It would run until both the most recent input and the one before it are both zero, just as it currently does. 

-Which version do you prefer? Describe two reasons for preferring the one-loop version and two reasons for preferring the two-loop version.
Both versions are reasonable, but the if statement seemed more natural to us and it was the first strategy that we came up with. 
Two reasons for preferring the one-loop version:
1) The conditional statement for our current if statement might be more readable than what we would have to change it to for the while loop. This is because we would have to negate our condition which is of the form "p is true and q is true" so that it would be "not (p is true and q is true)" or "p is not true or q is not true". This is a slightly more complicated logical expression which might be less easy to read.
2) It's the first one we thought of! 

Two reasons for preferring the two-loop version:
1) It is arguable that if an event only occurs once, and it only occurs at what should be the end of the program, that a while loop makes more sense. To clarify, for example if you want the program to do the exact same thing every single time except the last time when you want it to terminate, it does make more intuitive sense to use a while loop. Instead we used an if statement, which one could argue makes more intuitive sense when you want the program to do different things in different cases. 
2) In a sense, nested loops are often cleaner and more organized-looking.