Experiment 1:For the first experiment we created an array list of string and a linked list of strings. Since arraylist can use indexes while linked list has to go through each element in order to retrieve it we decided to use the get method to see the differences in time.  Using the timer this gave us 0 msecs for array list, but 1 msec for Linked list. From examining how each preforms this method we can see the array list takes 0(1) time while linked list takes 0(n) time.Experiment 2:In order to show that Linked List is a doubly linked list we decided to test the time it takes to remove an element. If it were only a linked list removing a node takes 0(n) time. This is because it has to search through the list to even get to n. But with doubly linked list all you have to do is change n’s next’s previous arrow to n’s previous and n’s previous’s next arrow to n’s next which takes 0(1) times. The experiment we tried was to add the same number of strings to two linked lists but time how long it took to remove the first and last element. Both gave us 0 msecs. If this was not a doubly linked list removing the last element would take a significantly longer time than to remove the first.