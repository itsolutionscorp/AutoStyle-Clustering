s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /./)), :sort), :to_s)), s(:if, s(:call, s(:lvar, :h), :has_key?, s(:lvar, :key)), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :key), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :key)), :+, s(:array, s(:lvar, :word)))), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :key), s(:array, s(:lvar, :word)))))), s(:return, s(:call, s(:lvar, :h), :values))), s(:if, s(:call, s(:str, "(string)"), :==, s(:gvar, :$0)), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "CARS"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"), s(:str, "a"), s(:str, "A"), s(:str, "a"), s(:str, "a"), s(:str, "Aaaa"), s(:str, "Aa")))), nil))