s(:block, s(:defn, :alpha_sort, s(:args, :w), s(:lasgn, :a, s(:call, s(:const, :Array), :[])), s(:iter, s(:call, s(:lvar, :w), :each_char), s(:args, :c), s(:call, s(:lvar, :a), :push, s(:lvar, :c))), s(:call, s(:lvar, :a), :sort!), s(:lasgn, :r, s(:str, "")), s(:iter, s(:call, s(:lvar, :a), :each), s(:args, :c), s(:lasgn, :r, s(:call, s(:lvar, :r), :+, s(:lvar, :c)))), s(:lvar, :r)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :h, s(:call, s(:const, :Hash), :[])), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :anagram_master, s(:call, s(:call, nil, :alpha_sort, s(:lvar, :word)), :downcase)), s(:if, s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :anagram_master)), :nil?), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :anagram_master), s(:call, s(:const, :Array), :[], s(:lvar, :word))), s(:if, s(:call, s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :anagram_master)), :index, s(:lvar, :word)), :nil?), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :anagram_master)), :push, s(:lvar, :word)), nil)))), s(:lasgn, :r, s(:call, s(:const, :Array), :[])), s(:iter, s(:call, s(:lvar, :h), :each), s(:args, :elem), s(:call, s(:lvar, :r), :push, s(:call, s(:lvar, :elem), :[], s(:lit, 1)))), s(:lvar, :r)), s(:lasgn, :input, s(:array, s(:str, "cArs"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :input)), :inspect)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "HeLLo"), s(:str, "hello"))), :inspect)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "hello"), s(:str, "hello"), s(:str, "hello"), s(:str, "hello"))), :inspect)))