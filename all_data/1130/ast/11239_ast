s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sort, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :x), s(:attrasgn, s(:lvar, :sort), :[]=, s(:lvar, :x), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :x)), :downcase), :chars), :sort), :join))), s(:lasgn, :ind, s(:lit, 0)), s(:lasgn, :to_delete, s(:call, s(:const, :Array), :new)), s(:while, s(:call, s(:call, s(:lvar, :sort), :length), :>, s(:lit, 0)), s(:block, s(:call, s(:lvar, :to_delete), :clear), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lvar, :ind), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :ind)), :push, s(:call, s(:lvar, :words), :[], s(:lit, 0))), s(:for, s(:dot2, s(:lit, 1), s(:call, s(:lvar, :sort), :length)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :sort), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :sort), :[], s(:lit, 0))), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :ind)), :push, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), nil)), s(:iter, s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :ind)), :each), s(:args, :x), s(:call, s(:lvar, :words), :delete, s(:lvar, :x))), s(:lasgn, :ind, s(:call, s(:lvar, :ind), :+, s(:lit, 1))), s(:lasgn, :str, s(:call, s(:lvar, :sort), :[], s(:lit, 0))), s(:call, s(:lvar, :sort), :delete, s(:lvar, :str))), true), s(:return, s(:lvar, :anagrams))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))