s(:block, s(:defn, :ac, s(:args, :w), s(:iter, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :inject, s(:str, "")), s(:args, :m, :c), s(:lasgn, :m, s(:call, s(:lvar, :m), :+, s(:lvar, :c))))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :h, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :w), s(:block, s(:lasgn, :k, s(:call, nil, :ac, s(:lvar, :w))), s(:if, s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :k)), :==, s(:nil)), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :k), s(:array)), nil), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :k)), :push, s(:lvar, :w)))), s(:lasgn, :res, s(:array)), s(:iter, s(:call, s(:lvar, :h), :each_key), s(:args, :k), s(:block, s(:call, s(:lvar, :res), :push, s(:call, s(:lvar, :h), :[], s(:lvar, :k))), s(:call, nil, :puts, s(:str, "pushed")), s(:call, nil, :puts, s(:call, s(:lvar, :h), :[], s(:lvar, :k))))), s(:lvar, :res)))