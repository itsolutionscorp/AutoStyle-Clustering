s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :h), :[], s(:call, nil, :formatted, s(:lvar, :word))), s(:attrasgn, s(:lvar, :h), :[]=, s(:call, nil, :formatted, s(:lvar, :word)), s(:call, s(:call, s(:lvar, :h), :[], s(:call, nil, :formatted, s(:lvar, :word))), :<<, s(:lvar, :word))), s(:attrasgn, s(:lvar, :h), :[]=, s(:call, nil, :formatted, s(:lvar, :word)), s(:array, s(:lvar, :word))))), s(:lasgn, :result, s(:call, s(:const, :Array), :new, s(:call, s(:lvar, :h), :size))), s(:iter, s(:call, s(:call, s(:lvar, :h), :keys), :each_with_index), s(:args, :key, :index), s(:block, s(:call, nil, :puts, s(:lvar, :key)), s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :index), s(:call, s(:lvar, :h), :[], s(:lvar, :key))))), s(:return, s(:lvar, :result))), s(:defn, :formatted, s(:args, :string), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :string), :downcase), :chars), :sort), :join))), s(:defn, :anagram?, s(:args, :string1, :string2), s(:if, s(:call, s(:call, s(:lvar, :string1), :formatted), :eql?, s(:call, s(:lvar, :string2), :formatted)), s(:return, s(:true)), nil), s(:return, s(:false))), s(:if, s(:lasgn, :__FILE__a, s(:gvar, :$0)), s(:block, s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "Csar"), s(:str, "p"))))), nil))