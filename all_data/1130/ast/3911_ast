s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :output), :any?), s(:block, s(:lasgn, :a, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :output), :each), s(:args, :list), s(:block, s(:lasgn, :comparison, s(:if, s(:call, s(:call, s(:lvar, :list), :[], s(:lit, 0)), :is_a?, s(:const, :String)), s(:call, s(:lvar, :list), :[], s(:lit, 0)), s(:call, s(:call, s(:lvar, :list), :[], s(:lit, 0)), :[], s(:lit, 0)))), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :comparison), :downcase), :chars), :sort), :join)), s(:block, s(:lasgn, :idx, s(:call, s(:lvar, :output), :index, s(:lvar, :list))), s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :idx)), :<<, s(:lvar, :word)), s(:lasgn, :a, s(:lit, 1)), s(:break)), nil))), s(:if, s(:call, s(:lvar, :a), :==, s(:lit, 0)), s(:call, s(:lvar, :output), :<<, s(:array, s(:lvar, :word))), nil)), s(:if, s(:call, s(:lvar, :output), :empty?), s(:call, s(:lvar, :output), :<<, s(:array, s(:lvar, :word))), s(:call, nil, :puts, s(:str, "INSIDE ELSE CONDITION"))))), s(:lvar, :output))