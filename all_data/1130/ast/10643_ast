s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :hash), :has_key?, s(:lvar, :key)), nil, s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :key), s(:call, s(:const, :Array), :new))), s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :key)), :<<, s(:lvar, :word)))), s(:call, s(:lvar, :hash), :values)), s(:defn, :print_anagrams, s(:args, :anagrams), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :same), s(:block, s(:iter, s(:call, s(:lvar, :same), :each), s(:args, :word), s(:call, nil, :print, s(:call, s(:lvar, :word), :+, s(:str, " ")))), s(:call, nil, :print, s(:str, "\n"))))), s(:call, nil, :print_anagrams, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))