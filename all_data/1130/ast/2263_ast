s(:block, s(:defn, :are_anagrams?, s(:args, :a, :b), s(:return, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :a), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :b), :downcase), :chars), :sort), :join)))), s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:call, s(:const, :Array), :new)), nil), s(:lasgn, :result, s(:array, s(:array, s(:call, s(:lvar, :words), :[], s(:lit, 0))))), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :i), s(:if, s(:call, s(:lvar, :i), :>, s(:lit, 0)), s(:block, s(:lasgn, :is_new, s(:true)), s(:iter, s(:call, s(:lvar, :result), :each), s(:args, :r), s(:if, s(:call, nil, :are_anagrams?, s(:call, s(:lvar, :r), :[], s(:lit, 0)), s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:block, s(:call, s(:lvar, :r), :push, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:lasgn, :is_new, s(:false)), s(:break)), nil)), s(:if, s(:lvar, :is_new), s(:block, s(:lasgn, :n, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:call, s(:lvar, :result), :push, s(:lvar, :n))), nil)), nil)), s(:return, s(:lvar, :result))))