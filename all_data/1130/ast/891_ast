s(:block, s(:defn, :word_index, s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:defn, :index_match, s(:args, :word1, :word2), s(:call, s(:call, nil, :word_index, s(:lvar, :word1)), :==, s(:call, nil, :word_index, s(:lvar, :word2)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :combined, s(:call, s(:const, :Array), :new, s(:lit, 0))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :combined), :each), s(:args, :combination), s(:if, s(:call, nil, :index_match, s(:call, s(:lvar, :combination), :[], s(:lit, 0)), s(:lvar, :word)), s(:block, s(:lasgn, :found, s(:true)), s(:call, s(:lvar, :combination), :<<, s(:lvar, :word))), nil)), s(:if, s(:call, s(:lvar, :found), :!), s(:block, s(:lasgn, :combination, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :combination), :<<, s(:lvar, :word)), s(:call, s(:lvar, :combined), :<<, s(:lvar, :combination))), nil))), s(:return, s(:lvar, :combined))))