s(:block, s(:defn, :anakey, s(:args, :word), s(:return, s(:call, s(:call, s(:call, s(:lvar, :word), :chars), :sort), :join))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :ht, s(:call, s(:const, :Hash), :new, s(:call, s(:const, :Array), :new))), s(:lasgn, :ans, s(:call, s(:const, :Array), :new)), s(:for, s(:lvar, :words), s(:lasgn, :w), s(:if, s(:call, s(:lvar, :ht), :has_key?, s(:call, nil, :anakey, s(:call, s(:lvar, :w), :downcase))), s(:attrasgn, s(:lvar, :ht), :[]=, s(:call, nil, :anakey, s(:call, s(:lvar, :w), :downcase)), s(:call, s(:call, s(:lvar, :ht), :[], s(:call, nil, :anakey, s(:call, s(:lvar, :w), :downcase))), :<<, s(:lvar, :w))), s(:attrasgn, s(:lvar, :ht), :[]=, s(:call, nil, :anakey, s(:call, s(:lvar, :w), :downcase)), s(:array, s(:lvar, :w))))), s(:for, s(:call, s(:lvar, :ht), :keys), s(:lasgn, :k), s(:lasgn, :ans, s(:call, s(:lvar, :ans), :<<, s(:call, s(:lvar, :ht), :[], s(:lvar, :k))))), s(:return, s(:lvar, :ans))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))