s(:block, s(:defn, :is_anagram?, s(:args, :word1, :word2), s(:return, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :chars), :sort), :join)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :twords, s(:call, s(:lvar, :words), :dup)), s(:lasgn, :prev_ana, s(:call, s(:const, :Array), :new)), s(:lasgn, :new_ana, s(:call, s(:const, :Array), :new)), s(:lasgn, :pwords, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:if, s(:call, s(:lvar, :pwords), :find_index, s(:lvar, :w)), s(:next), nil), s(:iter, s(:call, s(:lvar, :twords), :each), s(:args, :test_word), s(:block, s(:if, s(:call, s(:lvar, :pwords), :find_index, s(:lvar, :test_word)), s(:next), nil), s(:if, s(:call, nil, :is_anagram?, s(:lvar, :w), s(:lvar, :test_word)), s(:block, s(:call, nil, :puts, s(:str, "match")), s(:call, s(:lvar, :prev_ana), :push, s(:lvar, :test_word)), s(:call, s(:lvar, :pwords), :push, s(:lvar, :test_word))), nil))), s(:call, s(:lvar, :new_ana), :push, s(:call, s(:lvar, :prev_ana), :dup)), s(:call, s(:lvar, :prev_ana), :clear))), s(:return, s(:lvar, :new_ana))))