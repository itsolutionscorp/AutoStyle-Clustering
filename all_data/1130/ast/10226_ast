s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :already_used, s(:array)), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:or, s(:call, s(:call, s(:lvar, :already_used), :include?, s(:lvar, :word)), :==, s(:false)), s(:call, s(:call, s(:lvar, :already_used), :length), :==, s(:lit, 0))), s(:block, s(:lasgn, :sorted_word, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:lasgn, :sub_result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word1), s(:block, s(:lasgn, :sorted_word1, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :sorted_word), :==, s(:lvar, :sorted_word1)), s(:block, s(:call, s(:lvar, :sub_result), :concat, s(:array, s(:lvar, :word1))), s(:call, s(:lvar, :already_used), :concat, s(:array, s(:lvar, :word1)))), nil))), s(:call, s(:lvar, :result), :push, s(:lvar, :sub_result))), nil)), s(:return, s(:lvar, :result))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "Cars"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"), s(:str, "b"), s(:str, "b"))))