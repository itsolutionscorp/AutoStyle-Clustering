s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :anagrams), :empty?), s(:call, s(:lvar, :anagrams), :<<, s(:array, s(:lvar, :word))), s(:block, s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :list), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :list), :[], s(:lit, 0)), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:block, s(:call, s(:lvar, :list), :<<, s(:lvar, :word)), s(:lasgn, :found, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :found), :!), s(:call, s(:lvar, :anagrams), :<<, s(:array, s(:lvar, :word))), nil)))), s(:return, s(:lvar, :anagrams))), s(:lasgn, :input, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :answer, s(:call, nil, :combine_anagrams, s(:lvar, :input))), s(:call, nil, :p, s(:lvar, :answer)), s(:lasgn, :input, s(:array, s(:str, "cars"), s(:str, "potatoes"), s(:str, "sCreaM"), s(:str, "rAcS"), s(:str, "four"), s(:str, "sCar"), s(:str, "for"), s(:str, "creams"))), s(:lasgn, :answer, s(:call, nil, :combine_anagrams, s(:lvar, :input))), s(:call, nil, :p, s(:lvar, :answer)))