s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:call, s(:lvar, :h), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), :==, s(:nil)), s(:attrasgn, s(:lvar, :h), :[]=, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), s(:call, s(:const, :Array), :new)), nil), s(:call, s(:call, s(:lvar, :h), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), :<<, s(:lvar, :word)))), s(:lasgn, :new_words, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :h), :each_value), s(:args, :val), s(:call, s(:lvar, :new_words), :<<, s(:lvar, :val))), s(:return, s(:lvar, :new_words))), s(:if, s(:call, s(:str, "(string)"), :==, s(:gvar, :$0)), s(:block, s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "Cars"), s(:str, "Cars"), s(:str, "CarS"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :puts, s(:dstr, "", s(:evstr, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :words)), :inspect))))), nil))