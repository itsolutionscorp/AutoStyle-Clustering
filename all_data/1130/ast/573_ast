s(:block, s(:class, :Array, nil, s(:defn, :to_s, s(:args), s(:iter, s(:call, s(:self), :each_with_index), s(:args, :element, :index), s(:block, s(:if, s(:call, s(:lvar, :index), :==, s(:lit, 0)), nil, s(:call, nil, :printf, s(:str, ",%s"), s(:lvar, :element))), s(:if, s(:call, s(:lvar, :index), :==, s(:lit, 0)), s(:call, nil, :printf, s(:str, "%s"), s(:lvar, :element)), nil))), s(:call, nil, :puts))), s(:class, :String, nil, s(:defn, :anagram_key, s(:args), s(:return, s(:call, s(:call, s(:call, s(:call, s(:self), :downcase), :chars), :to_a), :sort))), s(:defn, :anagram?, s(:args, :other), s(:if, s(:call, s(:lvar, :other), :!=, s(:nil)), s(:return, s(:call, s(:call, s(:self), :anagram_key), :==, s(:call, s(:lvar, :other), :anagram_key))), nil), s(:if, s(:call, s(:lvar, :other), :==, s(:nil)), s(:return, s(:false)), nil))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagram_map, s(:call, s(:const, :Hash), :new)), s(:lasgn, :anagram_array, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:lvar, :anagram_map), :has_key?, s(:call, s(:lvar, :word), :anagram_key)), s(:attrasgn, s(:lvar, :anagram_map), :[]=, s(:call, s(:lvar, :word), :anagram_key), s(:call, s(:call, s(:lvar, :anagram_map), :[], s(:call, s(:lvar, :word), :anagram_key)), :push, s(:lvar, :word))), nil), s(:if, s(:call, s(:lvar, :anagram_map), :has_key?, s(:call, s(:lvar, :word), :anagram_key)), nil, s(:attrasgn, s(:lvar, :anagram_map), :[]=, s(:call, s(:lvar, :word), :anagram_key), s(:array, s(:lvar, :word)))))), s(:iter, s(:call, s(:lvar, :anagram_map), :each_key), s(:args, :key), s(:call, s(:lvar, :anagram_array), :push, s(:call, s(:lvar, :anagram_map), :[], s(:lvar, :key)))), s(:return, s(:lvar, :anagram_array))), s(:lasgn, :words, s(:array, s(:str, "a"), s(:str, "a"), s(:str, "b"), s(:str, "b"), s(:str, "c"), s(:str, "d"))), s(:lasgn, :anagram_array, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:iter, s(:call, s(:lvar, :anagram_array), :each), s(:args, :element), s(:call, s(:lvar, :element), :to_s)))