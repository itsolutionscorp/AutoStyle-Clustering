s(:block, s(:call, nil, :require, s(:str, "pp")), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :temp, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :y), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :y), :downcase), :chars), :sort), :join)), s(:call, s(:lvar, :temp), :push, s(:lvar, :y)), nil)), s(:call, s(:lvar, :result), :push, s(:lvar, :temp)))), s(:return, s(:call, s(:lvar, :result), :uniq))), s(:call, nil, :pp, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :pp, s(:call, nil, :combine_anagrams, s(:array, s(:str, "aaa"), s(:str, "aaa"), s(:str, "qqq"), s(:str, "qqq"), s(:str, "aaa")))))