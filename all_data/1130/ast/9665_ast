s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sorted_uniq, s(:call, s(:lvar, :words), :clone)), s(:call, s(:iter, s(:call, s(:call, s(:lvar, :sorted_uniq), :to_a), :map!), s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :to_s), :downcase), :chars), :sort), :to_a), :join)), :uniq!), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :sorted_uniq), :each_index), s(:args, :index), s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :index), s(:call, s(:const, :Array), :new))), s(:iter, s(:call, s(:call, s(:lvar, :words), :to_a), :each), s(:args, :word), s(:call, s(:call, s(:call, s(:lvar, :result), :[], s(:call, s(:lvar, :sorted_uniq), :find_index, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :to_s), :downcase), :chars), :sort), :to_a), :join))), :to_a), :push, s(:lvar, :word))), s(:lvar, :result)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :inspect)))