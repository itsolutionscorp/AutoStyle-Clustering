s(:block, s(:defn, :char_array, s(:args, :string), s(:lasgn, :char_array, s(:array)), s(:iter, s(:call, s(:call, s(:lvar, :string), :downcase), :each_char), s(:args, :c), s(:call, s(:lvar, :char_array), :<<, s(:lvar, :c))), s(:return, s(:call, s(:lvar, :char_array), :sort))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagram_array, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :matched, s(:false)), s(:iter, s(:call, s(:lvar, :anagram_array), :each), s(:args, :a), s(:if, s(:call, s(:call, nil, :char_array, s(:lvar, :w)), :==, s(:call, nil, :char_array, s(:call, s(:lvar, :a), :first))), s(:block, s(:lasgn, :matched, s(:true)), s(:call, s(:lvar, :a), :<<, s(:lvar, :w))), nil)), s(:if, s(:lvar, :matched), nil, s(:call, s(:lvar, :anagram_array), :<<, s(:array, s(:lvar, :w)))))), s(:return, s(:lvar, :anagram_array))), s(:call, nil, :print, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "Racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"), s(:str, "FOR")))))