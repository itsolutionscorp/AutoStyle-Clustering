s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:array)), s(:lasgn, :skips, s(:array)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :word1, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :chars), :sort), :join)), s(:lasgn, :matches, s(:array)), s(:if, s(:call, s(:call, s(:lvar, :skips), :include?, s(:lvar, :i)), :==, s(:const, :FALSE)), s(:block, s(:call, s(:lvar, :matches), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:for, s(:dot2, s(:call, s(:lvar, :i), :+, s(:lit, 1)), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :j), s(:block, s(:lasgn, :word2, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :j)), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :word1), :==, s(:lvar, :word2)), s(:block, s(:call, s(:lvar, :matches), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:call, s(:lvar, :skips), :<<, s(:lvar, :j))), nil)))), nil), s(:if, s(:call, s(:call, s(:lvar, :matches), :length), :>, s(:lit, 0)), s(:call, s(:lvar, :groups), :<<, s(:lvar, :matches)), nil))), s(:lvar, :groups), s(:return, s(:lvar, :groups))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "Racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))