s(:block, s(:defn, :anagram?, s(:args, :word1, :word2), s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :split, s(:str, "")), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :split, s(:str, "")), :sort))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:lvar, :result), :empty?), s(:block, s(:call, s(:lvar, :result), :push, s(:array, s(:lvar, :word))), s(:next)), nil), s(:lasgn, :anagram, s(:false)), s(:iter, s(:call, s(:lvar, :result), :each), s(:args, :group), s(:if, s(:call, nil, :anagram?, s(:call, s(:lvar, :group), :[], s(:lit, 0)), s(:lvar, :word)), s(:block, s(:lasgn, :anagram, s(:true)), s(:call, s(:lvar, :group), :push, s(:lvar, :word)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :anagram), :!), s(:call, s(:lvar, :result), :push, s(:array, s(:lvar, :word))), nil))), s(:return, s(:lvar, :result))))