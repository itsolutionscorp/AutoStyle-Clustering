s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :len, s(:call, s(:lvar, :words), :length)), s(:lasgn, :hm, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sortedword, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:lasgn, :ar, s(:call, s(:lvar, :hm), :[], s(:lvar, :sortedword))), s(:if, s(:call, s(:lvar, :ar), :==, s(:nil)), s(:lasgn, :ar, s(:call, s(:const, :Array), :new)), nil), s(:call, s(:lvar, :ar), :<<, s(:lvar, :word)), s(:attrasgn, s(:lvar, :hm), :[]=, s(:lvar, :sortedword), s(:lvar, :ar)))), s(:lasgn, :retarr, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :hm), :each), s(:args, :key, :value), s(:call, s(:lvar, :retarr), :<<, s(:lvar, :value))), s(:lvar, :retarr)), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "scar"), s(:str, "ARCS"), s(:str, "but"), s(:str, "tUB"))), s(:lasgn, :hm, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:call, nil, :p, s(:lvar, :hm)))