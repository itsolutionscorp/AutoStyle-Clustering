s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :roots, s(:array)), s(:lasgn, :output, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:call, nil, :puts, s(:call, s(:str, "Analizing: "), :+, s(:lvar, :word))), s(:lasgn, :root, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort), :join, s(:str, ""))), s(:call, nil, :puts, s(:call, s(:str, "Root: "), :+, s(:lvar, :root))), s(:lasgn, :index, s(:call, s(:lvar, :roots), :index, s(:lvar, :root))), s(:if, s(:call, s(:lvar, :index), :!), s(:block, s(:call, nil, :puts, s(:call, s(:str, "Adding new root: "), :+, s(:lvar, :root))), s(:call, s(:lvar, :roots), :<<, s(:lvar, :root)), s(:lasgn, :index, s(:call, s(:call, s(:lvar, :roots), :size), :-, s(:lit, 1)))), nil), s(:if, s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :index)), :!), s(:attrasgn, s(:lvar, :output), :[]=, s(:lvar, :index), s(:array)), nil), s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :index)), :<<, s(:lvar, :word)))), s(:call, nil, :puts, s(:call, s(:str, "Anagrams found: "), :+, s(:call, s(:lvar, :output), :to_s))), s(:lvar, :output)), s(:call, nil, :combine_anagrams, s(:array, s(:str, "Cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "Racs"), s(:str, "four"), s(:str, "Scar"), s(:str, "creams"), s(:str, "scream"))))