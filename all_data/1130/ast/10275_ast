s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :word_hash, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:call, nil, :puts, s(:lvar, :word)), s(:lasgn, :tword, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:call, nil, :puts, s(:lvar, :tword)), s(:if, s(:call, s(:call, s(:lvar, :word_hash), :[], s(:lvar, :tword)), :==, s(:nil)), s(:attrasgn, s(:lvar, :word_hash), :[]=, s(:lvar, :tword), s(:array, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :word_hash), :[], s(:lvar, :tword)), :<<, s(:lvar, :word))))), s(:lasgn, :outArray, s(:array)), s(:iter, s(:call, s(:lvar, :word_hash), :each), s(:args, :k, :v), s(:block, s(:call, nil, :puts, s(:lvar, :k)), s(:lasgn, :tArray, s(:array)), s(:iter, s(:call, s(:lvar, :v), :each), s(:args, :vv), s(:call, s(:lvar, :tArray), :<<, s(:lvar, :vv))), s(:call, s(:lvar, :outArray), :<<, s(:lvar, :tArray)))), s(:return, s(:lvar, :outArray)))