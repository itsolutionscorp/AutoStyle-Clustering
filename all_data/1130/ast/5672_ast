s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :groups), :has_key?, s(:lvar, :key)), :!), s(:attrasgn, s(:lvar, :groups), :[]=, s(:lvar, :key), s(:call, s(:const, :Array), :new)), nil), s(:call, s(:call, s(:lvar, :groups), :[], s(:lvar, :key)), :push, s(:lvar, :word)))), s(:return, s(:call, s(:lvar, :groups), :values))), s(:if, s(:call, s(:str, "(string)"), :==, s(:gvar, :$0)), s(:block, s(:lasgn, :input, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :input)), :inspect)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array)), :inspect)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "asd"), s(:str, "sda"), s(:str, "dsa"))), :inspect))), nil))