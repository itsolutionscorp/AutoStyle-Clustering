s(:block, s(:defn, :is_anagram?, s(:args, :a, :b), s(:lasgn, :a_lower, s(:call, s(:lvar, :a), :downcase)), s(:lasgn, :b_lower, s(:call, s(:lvar, :b), :downcase)), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :a_lower), :split, s(:str, "")), :sort), :join), :==, s(:call, s(:call, s(:call, s(:lvar, :b_lower), :split, s(:str, "")), :sort), :join)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :word_groups, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :added, s(:false)), s(:iter, s(:call, s(:lvar, :word_groups), :each), s(:args, :word_group), s(:if, s(:call, s(:lvar, :word_group), :is_a?, s(:const, :Array)), s(:if, s(:call, nil, :is_anagram?, s(:call, s(:lvar, :word_group), :[], s(:lit, 0)), s(:lvar, :word)), s(:block, s(:call, s(:lvar, :word_group), :push, s(:lvar, :word)), s(:lasgn, :added, s(:true))), nil), nil)), s(:if, s(:call, s(:lvar, :added), :!), s(:call, s(:lvar, :word_groups), :push, s(:array, s(:lvar, :word))), nil))), s(:return, s(:lvar, :word_groups))))