s(:block, s(:class, :Anagram, nil, s(:call, nil, :attr_accessor, s(:lit, :sorted)), s(:defn, :initialize, s(:args, :words), s(:iasgn, :@sorted, s(:iter, s(:call, s(:lvar, :words), :group_by), s(:args, :word), s(:call, s(:call, s(:call, s(:lvar, :word), :chars), :map, s(:block_pass, s(:lit, :downcase))), :sort)))), s(:defn, :list, s(:args), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:ivar, :@sorted), :each), s(:args, :k, :v), s(:call, s(:lvar, :result), :<<, s(:lvar, :v))), s(:lvar, :result))), s(:defn, :combine_anagrams, s(:args, :words), s(:call, s(:call, s(:const, :Anagram), :new, s(:lvar, :words)), :list)), s(:call, nil, :require, s(:str, "rspec")), s(:iter, s(:call, nil, :describe, s(:str, "Anagram")), s(:args), s(:block, s(:iter, s(:call, nil, :before), s(:args), s(:block, s(:iasgn, :@words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "Racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:iasgn, :@list, s(:array, s(:array, s(:str, "cars"), s(:str, "Racs"), s(:str, "scar")), s(:array, s(:str, "for")), s(:array, s(:str, "potatoes")), s(:array, s(:str, "four")), s(:array, s(:str, "creams"), s(:str, "scream")))))), s(:iter, s(:call, nil, :it, s(:str, "takes an array and returns the Anagram array")), s(:args), s(:call, s(:call, s(:call, s(:call, s(:const, :Anagram), :new, s(:ivar, :@words)), :list), :should), :==, s(:ivar, :@list))))))