s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:array)), nil), s(:lasgn, :sort, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lit, 0)), :downcase), :split, s(:lit, //)), :sort), :join)), s(:for, s(:dot2, s(:lit, 1), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:lasgn, :sort, s(:call, s(:array, s(:lvar, :sort)), :concat, s(:array, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :split, s(:lit, //)), :sort), :join))))), s(:lasgn, :sort, s(:call, s(:lvar, :sort), :flatten)), s(:lasgn, :group, s(:array)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :j)), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :sub_group, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :j)))), s(:for, s(:dot2, s(:call, s(:lvar, :j), :+, s(:lit, 1)), s(:call, s(:call, s(:lvar, :sort), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :sort), :[], s(:lvar, :j)), :==, s(:call, s(:lvar, :sort), :[], s(:lvar, :i))), s(:block, s(:lasgn, :sub_group, s(:call, s(:array, s(:lvar, :sub_group)), :concat, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i))))), s(:attrasgn, s(:lvar, :words), :[]=, s(:lvar, :i), s(:str, "")), s(:attrasgn, s(:lvar, :sort), :[]=, s(:lvar, :i), s(:str, ""))), nil)), s(:lasgn, :sub_group, s(:call, s(:lvar, :sub_group), :flatten)), s(:lasgn, :group, s(:call, s(:lvar, :group), :concat, s(:array, s(:lvar, :sub_group)))), s(:attrasgn, s(:lvar, :words), :[]=, s(:lvar, :j), s(:str, ""))), nil)), s(:return, s(:lvar, :group)))