s(:block, s(:defn, :strToArr, s(:args, :s), s(:lasgn, :a, s(:array)), s(:iter, s(:call, s(:lvar, :s), :each_char), s(:args, :e), s(:call, s(:lvar, :a), :<<, s(:lvar, :e))), s(:lvar, :a)), s(:defn, :arrToStr, s(:args, :a), s(:lasgn, :s, s(:str, "")), s(:iter, s(:call, s(:lvar, :a), :each), s(:args, :e), s(:call, s(:lvar, :s), :<<, s(:lvar, :e))), s(:lvar, :s)), s(:defn, :combine_anagrams, s(:args, :list), s(:lasgn, :sorter, s(:iter, s(:call, s(:const, :Hash), :new), s(:args, :h, :k), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :k), s(:array)))), s(:iter, s(:call, s(:lvar, :list), :each), s(:args, :l), s(:call, s(:call, s(:lvar, :sorter), :[], s(:call, nil, :arrToStr, s(:call, s(:call, nil, :strToArr, s(:call, s(:lvar, :l), :downcase)), :sort!))), :<<, s(:lvar, :l))), s(:call, s(:lvar, :sorter), :values)), s(:defn, :test_0, s(:args), s(:gasgn, :$\, s(:str, "\n")), s(:gasgn, :$,, s(:str, ", ")), s(:lasgn, :anagrams, s(:call, nil, :combine_anagrams, s(:array, s(:str, "caRs"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :print, s(:lvar, :anagrams)), s(:if, s(:call, s(:call, s(:lvar, :anagrams), :size), :!=, s(:lit, 5)), s(:call, nil, :print, s(:str, "test_0 bad, wrong size")), s(:call, nil, :print, s(:str, "ok"))), s(:lasgn, :expected, s(:array, s(:array, s(:str, "four")), s(:array, s(:str, "potatoes")), s(:array, s(:str, "caRs"), s(:str, "racs"), s(:str, "scar")), s(:array, s(:str, "for")), s(:array, s(:str, "creams"), s(:str, "scream")))), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :a), s(:if, s(:call, s(:call, s(:lvar, :expected), :include?, s(:lvar, :a)), :!), s(:call, nil, :print, s(:str, "bad anagram list")), s(:call, nil, :print, s(:str, "ok"))))), s(:defn, :test_1, s(:args), s(:lasgn, :anagrams, s(:call, nil, :combine_anagrams, s(:array))), s(:if, s(:call, s(:lvar, :anagrams), :!=, s(:array)), s(:call, nil, :puts, s(:str, "test_1 bad"), s(:call, s(:lvar, :anagrams), :inspect)), s(:call, nil, :puts, s(:str, "ok")))), s(:defn, :test_all, s(:args), s(:call, nil, :test_0), s(:call, nil, :test_1)))