s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:lvar, :words)), nil), s(:lasgn, :result, s(:array)), s(:lasgn, :anagrams, s(:array)), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 1)), s(:block, s(:call, s(:lvar, :result), :push, s(:lvar, :words)), s(:return, s(:lvar, :result))), nil), s(:lasgn, :key, s(:call, s(:lvar, :words), :shift)), s(:call, s(:lvar, :anagrams), :push, s(:lvar, :key)), s(:lasgn, :copy, s(:call, s(:const, :Array), :new, s(:lvar, :words))), s(:iter, s(:call, s(:lvar, :copy), :each), s(:args, :w), s(:if, s(:call, s(:call, s(:call, s(:call, s(:lvar, :key), :downcase), :scan, s(:lit, /./)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :scan, s(:lit, /./)), :sort)), s(:block, s(:call, s(:lvar, :anagrams), :push, s(:lvar, :w)), s(:call, s(:lvar, :words), :delete, s(:lvar, :w))), nil)), s(:call, s(:lvar, :result), :push, s(:call, s(:lvar, :anagrams), :sort)), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:call, s(:lvar, :result), :concat, s(:call, nil, :combine_anagrams, s(:lvar, :words))), nil), s(:return, s(:call, s(:lvar, :result), :sort))), s(:lasgn, :input, s(:array, s(:str, "b"), s(:str, "c"), s(:str, "a"), s(:str, "b"), s(:str, "A"), s(:str, "a"), s(:str, "b"), s(:str, "a"), s(:str, "d"), s(:str, "D"))), s(:lasgn, :output, s(:call, nil, :combine_anagrams, s(:lvar, :input))), s(:call, nil, :print, s(:lvar, :output)))