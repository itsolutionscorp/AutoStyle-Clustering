s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :staginghash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:block, s(:lasgn, :sortedletters, s(:call, s(:lvar, :x), :downcase)), s(:lasgn, :sortedletters, s(:call, nil, :sort_letters, s(:lvar, :sortedletters))), s(:if, s(:call, s(:lvar, :staginghash), :has_key?, s(:lvar, :sortedletters)), s(:attrasgn, s(:lvar, :staginghash), :[]=, s(:lvar, :sortedletters), s(:call, s(:call, s(:lvar, :staginghash), :[], s(:lvar, :sortedletters)), :push, s(:lvar, :x))), s(:block, s(:lasgn, :newwordarray, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :newwordarray), :push, s(:lvar, :x)), s(:attrasgn, s(:lvar, :staginghash), :[]=, s(:lvar, :sortedletters), s(:lvar, :newwordarray)))))), s(:return, s(:call, s(:lvar, :staginghash), :values))), s(:defn, :sort_letters, s(:args, :word), s(:lasgn, :returnarray, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :word), :each_char), s(:args, :c), s(:call, s(:lvar, :returnarray), :push, s(:lvar, :c))), s(:lasgn, :returnarray, s(:call, s(:lvar, :returnarray), :sort)), s(:return, s(:call, s(:lvar, :returnarray), :join))))