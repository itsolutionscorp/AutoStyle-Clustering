s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :array, s(:call, s(:const, :Array), :new)), s(:while, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :word1, s(:call, s(:lvar, :words), :pop)), s(:lasgn, :test, s(:false)), s(:iter, s(:call, s(:lvar, :array), :each), s(:args, :group), s(:if, s(:call, nil, :anagrams, s(:lvar, :word1), s(:call, s(:lvar, :group), :[], s(:lit, 0))), s(:block, s(:lasgn, :test, s(:true)), s(:call, s(:lvar, :group), :push, s(:lvar, :word1))), nil)), s(:if, s(:lvar, :test), nil, s(:block, s(:lasgn, :anas, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :anas), :push, s(:lvar, :word1)), s(:call, s(:lvar, :array), :push, s(:lvar, :anas))))), true), s(:return, s(:lvar, :array))), s(:defn, :anagrams, s(:args, :word1, :word2), s(:lasgn, :s1, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :chars), :sort), :join)), s(:lasgn, :s2, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :s1), :==, s(:lvar, :s2)), s(:return, s(:true)), nil), s(:return, s(:false))))