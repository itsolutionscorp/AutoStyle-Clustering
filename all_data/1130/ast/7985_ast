s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :char, s(:call, s(:const, :Array), :new)), s(:lasgn, :size, s(:call, s(:lvar, :words), :size)), s(:lasgn, :hash, s(:call, s(:const, :Hash), :new)), s(:lasgn, :counter, s(:lit, 0)), s(:for, s(:dot3, s(:lit, 0), s(:lvar, :size)), s(:lasgn, :i), s(:block, s(:attrasgn, s(:lvar, :char), :[]=, s(:lvar, :i), s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :scan, s(:lit, /./)), :sort)), s(:lasgn, :ord, s(:call, s(:const, :String), :new)), s(:iter, s(:call, s(:call, s(:lvar, :char), :[], s(:lvar, :i)), :each), s(:args, :s), s(:lasgn, :ord, s(:call, s(:lvar, :ord), :+, s(:lvar, :s)))), s(:if, s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :ord)), :==, s(:nil)), s(:block, s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :ord), s(:lvar, :counter)), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1)))), nil))), s(:lasgn, :match, s(:iter, s(:call, s(:const, :Array), :new, s(:lvar, :counter)), s(:args), s(:call, s(:const, :Array), :new))), s(:for, s(:dot3, s(:lit, 0), s(:lvar, :size)), s(:lasgn, :i), s(:block, s(:attrasgn, s(:lvar, :char), :[]=, s(:lvar, :i), s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :scan, s(:lit, /./)), :sort)), s(:lasgn, :ord, s(:call, s(:const, :String), :new)), s(:iter, s(:call, s(:call, s(:lvar, :char), :[], s(:lvar, :i)), :each), s(:args, :s), s(:lasgn, :ord, s(:call, s(:lvar, :ord), :+, s(:lvar, :s)))), s(:call, s(:call, s(:lvar, :match), :[], s(:call, s(:lvar, :hash), :[], s(:lvar, :ord))), :push, s(:call, s(:lvar, :words), :[], s(:lvar, :i))))), s(:lvar, :match))