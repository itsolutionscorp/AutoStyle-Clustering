s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :words_expanded, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each_with_index), s(:args, :word, :i), s(:block, s(:attrasgn, s(:lvar, :words_expanded), :[]=, s(:lvar, :i), s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :word), :each_char), s(:args, :char), s(:call, s(:call, s(:lvar, :words_expanded), :[], s(:lvar, :i)), :<<, s(:call, s(:lvar, :char), :downcase))))), s(:lasgn, :result_hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words_expanded), :each_with_index), s(:args, :word, :i), s(:block, s(:if, s(:call, s(:lvar, :result_hash), :has_key?, s(:call, s(:call, s(:lvar, :word), :sort), :to_s)), nil, s(:attrasgn, s(:lvar, :result_hash), :[]=, s(:call, s(:call, s(:lvar, :word), :sort), :to_s), s(:array))), s(:call, s(:call, s(:lvar, :result_hash), :[], s(:call, s(:call, s(:lvar, :word), :sort), :to_s)), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i))))), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :result_hash), :each_value), s(:args, :group), s(:call, s(:lvar, :result), :<<, s(:lvar, :group))), s(:return, s(:lvar, :result)))