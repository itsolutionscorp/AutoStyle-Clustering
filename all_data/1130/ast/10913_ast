s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :array, s(:array)), s(:lasgn, :result, s(:array)), s(:for, s(:lvar, :words), s(:lasgn, :x), s(:lasgn, :array, s(:call, s(:lvar, :array), :unshift, s(:iter, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :x), :downcase), :split, s(:str, "")), :sort), :join), :gsub, s(:lit, /(.)\1{2,}/)), s(:args, :x), s(:call, s(:call, s(:call, s(:lvar, :x), :length), :to_s), :+, s(:call, s(:lvar, :x), :[], s(:lit, 0), s(:lit, 1))))))), s(:call, s(:lvar, :array), :reverse!), s(:lasgn, :tmp, s(:array)), s(:lasgn, :indice, s(:lit, 0)), s(:for, s(:lvar, :array), s(:lasgn, :element), s(:block, s(:lasgn, :indice, s(:call, s(:lvar, :array), :find_index, s(:call, s(:lvar, :element), :to_s))), s(:while, s(:call, s(:lvar, :indice), :!=, s(:nil)), s(:block, s(:call, s(:lvar, :tmp), :unshift, s(:call, s(:lvar, :words), :[], s(:lvar, :indice))), s(:attrasgn, s(:lvar, :array), :[]=, s(:lvar, :indice), s(:lit, 0)), s(:lasgn, :indice, s(:call, s(:lvar, :array), :find_index, s(:call, s(:lvar, :element), :to_s)))), true), s(:if, s(:call, s(:lvar, :tmp), :!=, s(:array)), s(:block, s(:call, s(:lvar, :result), :unshift, s(:call, s(:lvar, :tmp), :reverse)), s(:lasgn, :tmp, s(:array))), nil))), s(:call, s(:lvar, :result), :reverse!))