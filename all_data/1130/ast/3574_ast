s(:block, s(:call, nil, :require, s(:str, "test/unit")), s(:defn, :sorted_word, s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join, s(:str, ""))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:call, nil, :sorted_word, s(:lvar, :word))), s(:op_asgn1, s(:lvar, :anagrams), s(:arglist, s(:lvar, :key)), :"||", s(:array)), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :key)), :<<, s(:lvar, :word)))), s(:call, s(:lvar, :anagrams), :values)), s(:class, :HW1Part3Tests, s(:colon2, s(:colon2, s(:const, :Test), :Unit), :TestCase), s(:defn, :test_combine_anagrams, s(:args), s(:call, nil, :assert_equal, s(:call, s(:array, s(:array, s(:str, "cars"), s(:str, "racs"), s(:str, "scar")), s(:array, s(:str, "four")), s(:array, s(:str, "for")), s(:array, s(:str, "potatoes")), s(:array, s(:str, "creams"), s(:str, "scream"))), :sort), s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :sort)))))