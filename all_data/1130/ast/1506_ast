s(:block, s(:defn, :are_anagrams?, s(:args, :w1, :w2), s(:return, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w1), :downcase), :chars), :to_a), :sort), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w2), :downcase), :chars), :to_a), :sort)))), s(:defn, :clean_array, s(:args, :arr, :tmpl_idx), s(:lasgn, :tmpl, s(:call, s(:lvar, :arr), :[], s(:lvar, :tmpl_idx))), s(:iter, s(:call, s(:call, s(:call, s(:lvar, :arr), :length), :-, s(:lit, 1)), :downto, s(:lit, 0)), s(:args, :i), s(:if, s(:call, s(:call, nil, :are_anagrams?, s(:call, s(:lvar, :arr), :[], s(:lvar, :i)), s(:lvar, :tmpl)), :!), s(:call, s(:lvar, :arr), :delete_at, s(:lvar, :i)), nil))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:call, s(:lvar, :words), :length), :times), s(:args), s(:call, s(:lvar, :result), :<<, s(:call, s(:const, :Array), :new, s(:lvar, :words)))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :result), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:call, nil, :clean_array, s(:call, s(:lvar, :result), :[], s(:lvar, :i)), s(:lvar, :i))), s(:return, s(:call, s(:lvar, :result), :uniq))))