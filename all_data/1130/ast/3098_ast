s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :newArr, s(:array)), s(:lasgn, :wordsUsed, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :wordsUsed), :include?, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), :==, s(:false)), s(:block, s(:lasgn, :tmpArr, s(:array)), s(:call, s(:lvar, :tmpArr), :push, s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:iter, s(:call, s(:dot2, s(:call, s(:lvar, :i), :+, s(:lit, 1)), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), :each), s(:args, :xi), s(:if, s(:call, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :downcase), :==, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :xi)), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :downcase)), s(:block, s(:call, s(:lvar, :tmpArr), :push, s(:call, s(:lvar, :words), :[], s(:lvar, :xi))), s(:call, s(:lvar, :wordsUsed), :push, s(:call, s(:lvar, :words), :[], s(:lvar, :xi)))), nil)), s(:call, s(:lvar, :newArr), :push, s(:lvar, :tmpArr))), nil)), s(:return, s(:lvar, :newArr)))