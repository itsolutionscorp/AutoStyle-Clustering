s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:lasgn, :words1, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:call, s(:lvar, :words1), :<<, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :to_s), :downcase), :chars), :sort), :join))), s(:lasgn, :words2, s(:call, s(:lvar, :words1), :uniq)), s(:for, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :words2), :size)), s(:lasgn, :i), s(:block, s(:lasgn, :r, s(:array)), s(:lasgn, :w2, s(:call, s(:lvar, :words2), :[], s(:lvar, :i))), s(:for, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :words), :size)), s(:lasgn, :j), s(:block, s(:lasgn, :w, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:if, s(:call, s(:call, s(:lvar, :w2), :casecmp, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :to_s), :downcase), :chars), :sort), :join)), :==, s(:lit, 0)), s(:call, s(:lvar, :r), :<<, s(:lvar, :w)), nil))), s(:call, s(:lvar, :result), :<<, s(:lvar, :r)))), s(:return, s(:lvar, :result))), s(:lasgn, :words, s(:array, s(:str, "Cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:lvar, :words))))