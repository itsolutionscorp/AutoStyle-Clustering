s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :t), s(:block, s(:lasgn, :yeah, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :output), :each), s(:args, :o), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :o), :[], s(:lit, 0)), :downcase), :split, s(:lit, //)), :sort), :eql?, s(:call, s(:call, s(:call, s(:lvar, :t), :downcase), :split, s(:lit, //)), :sort)), s(:block, s(:call, s(:lvar, :o), :push, s(:lvar, :t)), s(:lasgn, :yeah, s(:lit, 1))), nil)), s(:if, s(:call, s(:lvar, :yeah), :==, s(:lit, 0)), s(:call, s(:lvar, :output), :push, s(:array, s(:lvar, :t))), nil))), s(:return, s(:lvar, :output))), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :puts, s(:dstr, "", s(:evstr, s(:call, nil, :combine_anagrams, s(:lvar, :words))))))