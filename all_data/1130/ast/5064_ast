s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :numero, s(:lit, 1)), s(:lasgn, :resul, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :resul), :[]=, s(:lit, 0), s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:call, s(:lvar, :resul), :[], s(:lit, 0)), :[]=, s(:lit, 0), s(:str, "ahlo")), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :palabra), s(:block, s(:lasgn, :palabra2, s(:call, s(:lvar, :palabra), :downcase)), s(:lasgn, :ordenada, s(:call, s(:call, s(:call, s(:lvar, :palabra2), :split, s(:str, "")), :sort), :join)), s(:lasgn, :encontrada, s(:lit, -1)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :numero), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:call, s(:lvar, :resul), :[], s(:lvar, :i)), :[], s(:lit, 0)), :==, s(:lvar, :ordenada)), s(:block, s(:call, s(:call, s(:lvar, :resul), :[], s(:lvar, :i)), :push, s(:lvar, :palabra)), s(:lasgn, :encontrada, s(:lvar, :i))), nil)), s(:if, s(:call, s(:lvar, :encontrada), :==, s(:lit, -1)), s(:block, s(:attrasgn, s(:lvar, :resul), :[]=, s(:lvar, :numero), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :resul), :[], s(:lvar, :numero)), :push, s(:lvar, :ordenada)), s(:call, s(:call, s(:lvar, :resul), :[], s(:lvar, :numero)), :push, s(:lvar, :palabra)), s(:lasgn, :numero, s(:call, s(:lvar, :numero), :+, s(:lit, 1)))), nil))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :numero), :-, s(:lit, 1))), s(:lasgn, :i), s(:call, s(:call, s(:lvar, :resul), :[], s(:lvar, :i)), :delete_at, s(:lit, 0))), s(:call, s(:lvar, :resul), :delete_at, s(:lit, 0)), s(:return, s(:lvar, :resul)))