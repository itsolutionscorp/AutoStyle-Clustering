s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :anagrams, s(:array)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :size), :-, s(:lit, 1))), :each), s(:args, :i), s(:block, s(:lasgn, :sub_array, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :w1_sorted, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join), :downcase)), s(:lasgn, :w2_sorted, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :to_s), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join), :downcase)), s(:if, s(:call, s(:lvar, :w1_sorted), :==, s(:lvar, :w2_sorted)), s(:if, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :anagrams), :flatten), :any?), s(:args, :word), s(:call, s(:lvar, :word), :==, s(:lvar, :w))), :!), s(:call, s(:lvar, :sub_array), :<<, s(:lvar, :w)), nil), nil))), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :sub_array)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), s(:iter, s(:call, s(:call, s(:lvar, :anagrams), :each), :reject), s(:args, :elmt), s(:call, s(:lvar, :elmt), :empty?)))