s(:block, s(:defn, :are_anagrams?, s(:args, :word1, :word2), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :chars), :sort), :join))), s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :<=, s(:lit, 1)), s(:lasgn, :anagram_groups, s(:lvar, :words)), s(:block, s(:lasgn, :anagram_groups, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:call, nil, :puts, s(:lvar, :w)), s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :anagram_groups), :each), s(:args, :g), s(:block, s(:if, s(:call, nil, :are_anagrams?, s(:call, s(:lvar, :g), :[], s(:lit, 0)), s(:lvar, :w)), s(:block, s(:call, s(:lvar, :g), :<<, s(:lvar, :w)), s(:lasgn, :found, s(:true))), nil), s(:if, s(:lvar, :found), s(:break), nil))), s(:if, s(:call, s(:lvar, :found), :!), s(:call, s(:lvar, :anagram_groups), :<<, s(:array, s(:lvar, :w))), nil))))), s(:lvar, :anagram_groups)))