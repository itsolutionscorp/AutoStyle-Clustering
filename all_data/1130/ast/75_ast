s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:call, s(:const, :Array), :new)), s(:lasgn, :semaphore, s(:false)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:block, s(:lasgn, :semaphore, s(:false)), s(:if, s(:call, s(:call, s(:lvar, :groups), :length), :eql?, s(:lit, 0)), s(:call, s(:lvar, :groups), :push, s(:array, s(:lvar, :x))), s(:block, s(:iter, s(:call, s(:lvar, :groups), :each), s(:args, :y), s(:block, s(:iter, s(:call, s(:call, s(:lvar, :y), :length), :times), s(:args, :index), s(:block, s(:call, nil, :print, s(:call, s(:lvar, :y), :[], s(:lvar, :index))), s(:call, nil, :print, s(:str, "\n")), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :y), :[], s(:lvar, :index)), :to_s), :downcase), :sum), :==, s(:call, s(:call, s(:lvar, :x), :downcase), :sum)), s(:block, s(:call, s(:lvar, :y), :push, s(:lvar, :x)), s(:lasgn, :semaphore, s(:true)), s(:break)), nil))), s(:call, nil, :print, s(:str, "____________")), s(:call, nil, :print, s(:str, "\n")))), s(:if, s(:call, s(:lvar, :semaphore), :!), s(:call, s(:lvar, :groups), :push, s(:array, s(:lvar, :x))), nil))))), s(:call, nil, :print, s(:lvar, :groups)), s(:return, s(:lvar, :groups)))