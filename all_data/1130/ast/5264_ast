s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :answer, s(:array)), s(:lasgn, :processedwords, s(:array)), s(:for, s(:lvar, :words), s(:lasgn, :firstword), s(:block, s(:lasgn, :word1, s(:call, s(:call, s(:call, s(:call, s(:call, s(:const, :String), :new, s(:lvar, :firstword)), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :processedwords), :include?, s(:lvar, :word1)), :!), s(:block, s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new, s(:array, s(:lvar, :firstword)))), s(:call, s(:lvar, :processedwords), :<<, s(:lvar, :word1)), s(:lasgn, :tbd, s(:call, s(:const, :Array), :new, s(:call, s(:lvar, :words), :slice, s(:call, s(:call, s(:lvar, :words), :index, s(:lvar, :firstword)), :+, s(:lit, 1)), s(:call, s(:lvar, :words), :length)))), s(:for, s(:lvar, :tbd), s(:lasgn, :nextword), s(:block, s(:lasgn, :word2, s(:call, s(:call, s(:call, s(:call, s(:call, s(:const, :String), :new, s(:lvar, :nextword)), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :word1), :==, s(:lvar, :word2)), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :nextword)), nil))), s(:call, s(:lvar, :answer), :<<, s(:lvar, :anagrams))), nil))), s(:return, s(:lvar, :answer))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))