s(:block, s(:class, :String, nil, s(:defn, :isanagram?, s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:call, s(:self), :downcase), :chars), :sort), :join), :eql?, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)))), s(:defn, :firstelement, s(:args, :a), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :a), :each), s(:args, :el), s(:call, s(:lvar, :result), :push, s(:call, s(:lvar, :el), :[], s(:lit, 0)))), s(:lvar, :result)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :temp, s(:call, nil, :firstelement, s(:lvar, :result))), s(:lasgn, :root, s(:iter, s(:call, s(:lvar, :temp), :map), s(:args, :el), s(:call, s(:lvar, :el), :isanagram?, s(:lvar, :w)))), s(:if, s(:lasgn, :i, s(:call, s(:lvar, :root), :index, s(:true))), s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :i)), :push, s(:lvar, :w)), s(:call, s(:lvar, :result), :push, s(:array, s(:lvar, :w)))))), s(:lvar, :result)))