s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word1), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word2), s(:block, s(:lasgn, :soretdWord, s(:call, s(:call, s(:call, s(:lvar, :word2), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :result), :has_key?, s(:lvar, :soretdWord)), s(:block, s(:call, nil, :puts, s(:call, s(:str, "tiene la clave "), :+, s(:lvar, :soretdWord))), s(:if, s(:call, s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :soretdWord)), :include?, s(:lvar, :word2)), :!), s(:block, s(:call, nil, :puts, s(:call, s(:str, "no esta repetido agrego el elemento "), :+, s(:lvar, :word2))), s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :soretdWord)), :<<, s(:lvar, :word2))), s(:call, nil, :puts, s(:call, s(:call, s(:str, "pero "), :+, s(:lvar, :word2)), :+, s(:str, " ya esta"))))), s(:block, s(:call, s(:lvar, :result), :store, s(:lvar, :soretdWord), s(:array, s(:lvar, :word2))), s(:call, nil, :puts, s(:call, s(:call, s(:str, "agrego "), :+, s(:lvar, :word2)), :+, s(:str, " por primera vez")))))))), s(:call, nil, :puts), s(:return, s(:call, s(:lvar, :result), :values)))