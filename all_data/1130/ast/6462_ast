s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :ret, s(:call, s(:const, :Array), :new)), s(:if, s(:call, s(:lvar, :words), :!=, s(:nil)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :newGroup, s(:call, s(:const, :Array), :new)), s(:lasgn, :groupFlag, s(:true)), s(:iter, s(:call, s(:lvar, :ret), :each), s(:args, :group), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 0)), :downcase), :split, s(:lit, //)), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join)), s(:block, s(:call, s(:lvar, :group), :push, s(:lvar, :word)), s(:lasgn, :groupFlag, s(:false))), nil)), s(:if, s(:lvar, :groupFlag), s(:block, s(:call, s(:lvar, :newGroup), :push, s(:lvar, :word)), s(:call, s(:lvar, :ret), :push, s(:lvar, :newGroup))), nil))), nil), s(:return, s(:lvar, :ret)))