s(:block, s(:class, :String, nil, s(:defn, :sort, s(:args), s(:call, s(:call, s(:call, s(:self), :chars), :sort), :join)), s(:defn, :anagram?, s(:args, :string), s(:if, s(:call, s(:call, s(:call, s(:self), :downcase), :sort), :==, s(:call, s(:call, s(:lvar, :string), :downcase), :sort)), s(:return, s(:true)), s(:return, s(:false))))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :group, s(:call, s(:call, s(:const, :Array), :new), :insert, s(:lit, 0), s(:lvar, :word))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :comp_word), s(:if, s(:call, s(:lvar, :word), :!=, s(:lvar, :comp_word)), s(:if, s(:call, s(:lvar, :word), :anagram?, s(:lvar, :comp_word)), s(:block, s(:call, s(:lvar, :group), :insert, s(:call, s(:lvar, :group), :size), s(:lvar, :comp_word)), s(:call, s(:lvar, :words), :delete, s(:lvar, :comp_word))), nil), nil)), s(:call, s(:lvar, :result), :insert, s(:call, s(:lvar, :result), :size), s(:lvar, :group)))), s(:return, s(:lvar, :result))))