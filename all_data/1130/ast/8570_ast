s(:block, s(:class, :Array, nil, s(:defn, :combine_anagrams, s(:args), s(:lasgn, :dict, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:self), :each), s(:args, :k), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :k), :downcase), :split, s(:str, "")), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :dict), :has_key?, s(:lvar, :key)), :==, s(:false)), s(:attrasgn, s(:lvar, :dict), :[]=, s(:lvar, :key), s(:array)), nil), s(:call, s(:call, s(:lvar, :dict), :[], s(:lvar, :key)), :push, s(:lvar, :k)))), s(:lasgn, :res, s(:array)), s(:iter, s(:call, s(:lvar, :dict), :each), s(:args, :d, s(:masgn, :k, :v)), s(:call, s(:lvar, :res), :push, s(:call, s(:lvar, :dict), :[], s(:lvar, :d)))), s(:return, s(:call, s(:lvar, :res), :reverse)))), s(:defn, :combine_anagrams, s(:args, :words), s(:return, s(:call, s(:lvar, :words), :combine_anagrams))), s(:call, nil, :puts, s(:call, s(:call, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")), :combine_anagrams), :inspect)), s(:call, nil, :puts, s(:call, s(:call, s(:array, s(:str, "HeLLo"), s(:str, "hello")), :combine_anagrams), :inspect)), s(:call, nil, :puts, s(:call, s(:call, s(:array, s(:str, "A"), s(:str, "a")), :combine_anagrams), :inspect)))