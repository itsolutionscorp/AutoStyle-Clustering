s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :start, s(:lvar, :words)), s(:lasgn, :ans, s(:call, s(:const, :Array), :new, s(:lit, 0))), s(:lasgn, :freq, s(:call, s(:const, :Hash), :new, s(:lit, 0))), s(:lasgn, :numlen, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :s, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :unpack, s(:str, "c*")), :sort), :pack, s(:str, "c*"))), s(:if, s(:call, s(:call, s(:lvar, :freq), :has_key?, s(:lvar, :s)), :==, s(:false)), s(:block, s(:attrasgn, s(:lvar, :freq), :[]=, s(:lvar, :s), s(:lvar, :numlen)), s(:lasgn, :numlen, s(:call, s(:lvar, :numlen), :+, s(:lit, 1)))), nil), s(:lasgn, :curnum, s(:call, s(:lvar, :freq), :[], s(:lvar, :s))), s(:if, s(:call, s(:call, s(:lvar, :ans), :[], s(:lvar, :curnum)), :==, s(:nil)), s(:call, s(:lvar, :ans), :<<, s(:call, s(:const, :Array), :new, s(:lit, 0))), nil), s(:call, s(:call, s(:lvar, :ans), :[], s(:lvar, :curnum)), :<<, s(:lvar, :w)))), s(:return, s(:lvar, :ans)))