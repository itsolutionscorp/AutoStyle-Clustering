s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:call, nil, :combine_anagrams_aux, s(:lvar, :words))), s(:defn, :combine_anagrams_aux, s(:args, :words, s(:lasgn, :acc, s(:array))), s(:if, s(:call, s(:lvar, :words), :empty?), s(:lvar, :acc), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 1)), s(:call, s(:lvar, :acc), :<<, s(:lvar, :words)), s(:block, s(:lasgn, :assert, s(:call, nil, :word_chars, s(:call, s(:lvar, :words), :[], s(:lit, 0)))), s(:masgn, s(:array, s(:lasgn, :anagrams), s(:lasgn, :rest)), s(:to_ary, s(:iter, s(:call, s(:call, s(:lvar, :words), :slice, s(:dot2, s(:lit, 1), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1)))), :partition), s(:args, :word), s(:call, s(:lvar, :assert), :==, s(:call, nil, :word_chars, s(:lvar, :word)))))), s(:call, s(:lvar, :acc), :<<, s(:call, s(:lvar, :anagrams), :<<, s(:call, s(:lvar, :words), :[], s(:lit, 0)))), s(:call, nil, :combine_anagrams_aux, s(:lvar, :rest), s(:lvar, :acc)))))), s(:defn, :word_chars, s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :to_a), :sort)))