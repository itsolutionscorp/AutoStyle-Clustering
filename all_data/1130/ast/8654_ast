s(:block, s(:defn, :is_anagram?, s(:args, :g_st1, :g_st2), s(:lasgn, :st1, s(:call, s(:lvar, :g_st1), :dup)), s(:lasgn, :st2, s(:call, s(:lvar, :g_st2), :dup)), s(:call, s(:lvar, :st1), :downcase!), s(:call, s(:lvar, :st2), :downcase!), s(:lasgn, :ar1, s(:array)), s(:lasgn, :ar2, s(:array)), s(:iter, s(:call, s(:lvar, :st1), :each_char), s(:args, :c), s(:call, s(:lvar, :ar1), :push, s(:lvar, :c))), s(:iter, s(:call, s(:lvar, :st2), :each_char), s(:args, :c), s(:call, s(:lvar, :ar2), :push, s(:lvar, :c))), s(:call, s(:lvar, :ar1), :sort!), s(:call, s(:lvar, :ar2), :sort!), s(:call, s(:lvar, :ar1), :==, s(:lvar, :ar2))), s(:defn, :insert_into_result, s(:args, :result, :str), s(:lasgn, :bInserted, s(:false)), s(:iter, s(:call, s(:lvar, :result), :each), s(:args, :ag), s(:if, s(:call, nil, :is_anagram?, s(:call, s(:lvar, :ag), :[], s(:lit, 0)), s(:lvar, :str)), s(:block, s(:call, s(:lvar, :ag), :push, s(:lvar, :str)), s(:lasgn, :bInserted, s(:true))), nil)), s(:lasgn, :bInserted, s(:lvar, :bInserted))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:if, s(:call, nil, :insert_into_result, s(:lvar, :result), s(:lvar, :w)), nil, s(:call, s(:lvar, :result), :push, s(:array, s(:lvar, :w))))), s(:lvar, :result)))