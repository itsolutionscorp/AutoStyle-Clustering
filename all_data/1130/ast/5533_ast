s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :retHash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :wd), s(:block, s(:lasgn, :keyAr, s(:call, s(:call, s(:call, s(:call, s(:lvar, :wd), :downcase), :each_char), :to_a), :sort)), s(:lasgn, :keyH, s(:str, "")), s(:iter, s(:call, s(:lvar, :keyAr), :map), s(:args, :c), s(:call, s(:lvar, :keyH), :<<, s(:lvar, :c))), s(:if, s(:call, s(:lvar, :retHash), :key?, s(:lvar, :keyH)), s(:call, s(:call, s(:lvar, :retHash), :[], s(:lvar, :keyH)), :push, s(:lvar, :wd)), s(:attrasgn, s(:lvar, :retHash), :[]=, s(:lvar, :keyH), s(:call, s(:const, :Array), :new, s(:lit, 1), s(:lvar, :wd)))))), s(:lasgn, :retArr, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :retHash), :each_value), s(:args, :v), s(:call, s(:lvar, :retArr), :push, s(:lvar, :v))), s(:return, s(:lvar, :retArr))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))