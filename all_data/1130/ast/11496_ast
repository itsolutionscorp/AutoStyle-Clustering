s(:block, s(:defn, :check_groups, s(:args, :groups, :w), s(:lasgn, :cur_group, s(:call, s(:const, :Array), :new)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :groups), :each), s(:args, :g), s(:if, s(:and, s(:call, s(:call, s(:lvar, :g), :size), :>, s(:lit, 0)), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :g), :[], s(:lit, 0)), :downcase), :split, s(:lit, //)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:lit, //)), :sort))), s(:block, s(:call, s(:lvar, :g), :<<, s(:lvar, :w)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), nil)), s(:if, s(:call, s(:lvar, :i), :==, s(:lit, 0)), s(:block, s(:call, s(:lvar, :cur_group), :<<, s(:lvar, :w)), s(:call, s(:lvar, :groups), :<<, s(:lvar, :cur_group))), nil), s(:return, s(:lvar, :groups))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:call, s(:const, :Array), :new)), s(:lasgn, :p, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :groups, s(:call, nil, :check_groups, s(:lvar, :groups), s(:lvar, :w))), s(:lasgn, :p, s(:call, s(:lvar, :p), :+, s(:lit, 1))))), s(:return, s(:lvar, :groups))))