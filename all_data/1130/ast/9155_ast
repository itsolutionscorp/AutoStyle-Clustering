s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:array)), nil), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 1)), s(:return, s(:array, s(:lvar, :words))), nil), s(:lasgn, :remains, s(:array)), s(:lasgn, :check, s(:call, s(:lvar, :words), :[], s(:lit, 0))), s(:lasgn, :ana, s(:array, s(:lvar, :check))), s(:iter, s(:call, s(:call, s(:lvar, :words), :[], s(:lit, 1..-1)), :each), s(:args, :word), s(:if, s(:call, s(:call, s(:call, s(:call, s(:lvar, :check), :upcase), :split, s(:lit, //)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word), :upcase), :split, s(:lit, //)), :sort)), s(:call, s(:lvar, :ana), :<<, s(:lvar, :word)), s(:call, s(:lvar, :remains), :<<, s(:lvar, :word)))), s(:call, s(:array, s(:lvar, :ana)), :+, s(:call, nil, :combine_anagrams, s(:lvar, :remains))))