s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hashArray, s(:call, s(:const, :Hash), :new)), s(:lasgn, :bigArray, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :theKey, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :word), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :downcase)), s(:if, s(:call, s(:lvar, :hashArray), :[], s(:dstr, "", s(:evstr, s(:lvar, :theKey)))), s(:attrasgn, s(:lvar, :hashArray), :[]=, s(:dstr, "", s(:evstr, s(:lvar, :theKey))), s(:call, s(:call, s(:lvar, :hashArray), :[], s(:dstr, "", s(:evstr, s(:lvar, :theKey)))), :<<, s(:lvar, :word))), s(:attrasgn, s(:lvar, :hashArray), :[]=, s(:dstr, "", s(:evstr, s(:lvar, :theKey))), s(:call, s(:call, s(:const, :Array), :new), :<<, s(:lvar, :word)))))), s(:return, s(:call, s(:lvar, :hashArray), :values))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "raCs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))