s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :temp, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :x), s(:call, s(:lvar, :x), :downcase))), s(:lasgn, :res, s(:array)), s(:lasgn, :comp, s(:array)), s(:iter, s(:call, s(:lvar, :temp), :each_with_index), s(:args, :x, :y), s(:block, s(:lasgn, :added, s(:false)), s(:iter, s(:call, s(:lvar, :comp), :each_with_index), s(:args, :rx, :ry), s(:block, s(:lasgn, :ra, s(:call, s(:call, s(:lvar, :rx), :split, s(:str, "")), :sort)), s(:lasgn, :rt, s(:call, s(:call, s(:lvar, :x), :split, s(:str, "")), :sort)), s(:if, s(:call, s(:lvar, :ra), :==, s(:lvar, :rt)), s(:block, s(:call, s(:call, s(:lvar, :res), :[], s(:lvar, :ry)), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :y))), s(:lasgn, :added, s(:true))), nil))), s(:if, s(:call, s(:lvar, :added), :!), s(:block, s(:lasgn, :newRes, s(:array)), s(:call, s(:lvar, :newRes), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :y))), s(:call, s(:lvar, :res), :<<, s(:lvar, :newRes)), s(:call, s(:lvar, :comp), :<<, s(:lvar, :x))), nil))), s(:return, s(:lvar, :res)))