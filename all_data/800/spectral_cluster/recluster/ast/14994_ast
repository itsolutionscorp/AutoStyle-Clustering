s(:block, s(:defn, :is_anagram?, s(:args, :x, :y), s(:return, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :x), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :y), :downcase), :chars), :sort), :join)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :returnArray, s(:array)), s(:lasgn, :list, s(:call, s(:lvar, :words), :clone)), s(:while, s(:call, s(:call, s(:lvar, :list), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :iList, s(:call, s(:lvar, :list), :clone)), s(:lasgn, :i, s(:lit, 1)), s(:lasgn, :listIndex, s(:lit, 0)), s(:lasgn, :curArray, s(:array)), s(:call, s(:lvar, :curArray), :<<, s(:call, s(:lvar, :iList), :[], s(:lit, 0))), s(:call, s(:lvar, :list), :delete_at, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :iList), :length)), s(:block, s(:if, s(:call, nil, :is_anagram?, s(:call, s(:lvar, :curArray), :[], s(:lit, 0)), s(:call, s(:lvar, :iList), :[], s(:lvar, :i))), s(:block, s(:call, s(:lvar, :curArray), :<<, s(:call, s(:lvar, :iList), :[], s(:lvar, :i))), s(:call, s(:lvar, :list), :delete_at, s(:lvar, :listIndex))), s(:lasgn, :listIndex, s(:call, s(:lvar, :listIndex), :+, s(:lit, 1)))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:call, s(:lvar, :returnArray), :<<, s(:lvar, :curArray))), true), s(:return, s(:lvar, :returnArray))))