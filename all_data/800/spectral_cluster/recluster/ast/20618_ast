s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:call, s(:const, :Array), :new)), s(:lasgn, :words_srt, s(:call, s(:const, :Array), :new, s(:lvar, :words))), s(:iter, s(:call, s(:lvar, :words_srt), :collect!), s(:args, :x), s(:block, s(:lasgn, :x, s(:call, s(:lvar, :x), :downcase)), s(:lasgn, :x, s(:call, s(:call, s(:call, s(:lvar, :x), :chars), :sort), :join)))), s(:lasgn, :words_srt_unq, s(:call, s(:lvar, :words_srt), :uniq)), s(:lasgn, :i, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :words_srt_unq), :length)), s(:block, s(:lasgn, :tmp_group, s(:call, s(:const, :Array), :new)), s(:lasgn, :j, s(:lit, 0)), s(:while, s(:call, s(:lvar, :j), :<, s(:call, s(:lvar, :words_srt), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :words_srt), :[], s(:lvar, :j)), :==, s(:call, s(:lvar, :words_srt_unq), :[], s(:lvar, :i))), s(:lasgn, :tmp_group, s(:call, s(:lvar, :tmp_group), :+, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :j))))), nil), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1)))), true), s(:attrasgn, s(:lvar, :groups), :[]=, s(:lvar, :i), s(:lvar, :tmp_group)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :groups)))