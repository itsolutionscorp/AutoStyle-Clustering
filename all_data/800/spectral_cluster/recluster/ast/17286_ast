s(:defn, :combine_anagrams, s(:args, :words), s(:iasgn, :@a, s(:call, s(:const, :Array), :new)), s(:iasgn, :@b, s(:call, s(:const, :Array), :new)), s(:iasgn, :@a, s(:call, s(:array), :+, s(:lvar, :words))), s(:iasgn, :@b, s(:call, s(:array), :+, s(:lvar, :words))), s(:iasgn, :@rtn, s(:array)), s(:iasgn, :@temp, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:ivar, :@a), :each_with_index), s(:args, :wor, :i), s(:block, s(:iter, s(:call, s(:ivar, :@b), :each_with_index), s(:args, :w, :l), s(:if, s(:call, s(:lvar, :wor), :==, s(:lvar, :w)), s(:call, s(:ivar, :@temp), :<<, s(:lvar, :wor)), nil)), s(:if, s(:call, s(:call, s(:ivar, :@temp), :empty?), :!), s(:block, s(:iter, s(:call, s(:ivar, :@b), :each_with_index), s(:args, :wor1, :j), s(:if, s(:and, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :wor), :downcase), :split, s(:str, "")), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :wor1), :downcase), :split, s(:str, "")), :sort), :join)), s(:call, s(:lvar, :wor), :!=, s(:lvar, :wor1))), s(:call, s(:ivar, :@temp), :<<, s(:lvar, :wor1)), nil)), s(:call, s(:ivar, :@rtn), :<<, s(:ivar, :@temp)), s(:iasgn, :@b, s(:call, s(:ivar, :@b), :-, s(:ivar, :@temp))), s(:if, s(:call, s(:lvar, :i), :==, s(:lit, 1)), s(:iasgn, :@test, s(:ivar, :@b)), nil), s(:iasgn, :@temp, s(:call, s(:const, :Array), :new))), nil))), s(:return, s(:ivar, :@rtn)))