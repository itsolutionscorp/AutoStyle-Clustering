s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :arrayResult, s(:array)), s(:lasgn, :arrayGroupIndex, s(:array)), s(:lasgn, :arrayGroup, s(:array)), s(:lasgn, :wordsSort, s(:array)), s(:lasgn, :wordsSort, s(:call, nil, :sort_words, s(:lvar, :words))), s(:lasgn, :wordsMod, s(:call, s(:lvar, :wordsSort), :uniq)), s(:iter, s(:call, s(:lvar, :wordsMod), :each_index), s(:args, :eltUniq), s(:block, s(:lasgn, :arrayGroupIndex, s(:array)), s(:lasgn, :arrayGroup, s(:array)), s(:iter, s(:call, s(:lvar, :wordsSort), :each_index), s(:args, :elt), s(:if, s(:call, s(:call, s(:lvar, :wordsMod), :[], s(:lvar, :eltUniq)), :eql?, s(:call, s(:lvar, :wordsSort), :[], s(:lvar, :elt))), s(:call, s(:lvar, :arrayGroupIndex), :<<, s(:lvar, :elt)), nil)), s(:iter, s(:call, s(:lvar, :arrayGroupIndex), :each_index), s(:args, :elt), s(:block, s(:lasgn, :eltResult, s(:call, s(:lvar, :arrayGroupIndex), :[], s(:lvar, :elt))), s(:attrasgn, s(:lvar, :arrayGroup), :[]=, s(:lvar, :elt), s(:call, s(:lvar, :words), :[], s(:lvar, :eltResult))))), s(:call, s(:lvar, :arrayResult), :<<, s(:lvar, :arrayGroup)))), s(:lvar, :arrayResult)), s(:defn, :sort_words, s(:args, :words), s(:lasgn, :wordsSort, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :word), s(:attrasgn, s(:lvar, :wordsSort), :[]=, s(:lvar, :word), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :word)), :downcase), :scan, s(:lit, /./)), :sort), :join))), s(:lvar, :wordsSort)))