s(:block, s(:defn, :is_anagrams?, s(:args, :word1, :word2), s(:if, s(:call, s(:call, s(:lvar, :word1), :length), :!=, s(:call, s(:lvar, :word2), :length)), s(:return, s(:false)), s(:block, s(:lasgn, :word1, s(:call, s(:lvar, :word1), :downcase)), s(:lasgn, :word2, s(:call, s(:lvar, :word2), :downcase)), s(:lasgn, :h1, s(:call, s(:const, :Hash), :new)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :word1), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :ch, s(:call, s(:lvar, :word1), :[], s(:lvar, :i))), s(:if, s(:call, s(:call, s(:lvar, :h1), :[], s(:lvar, :ch)), :nil?), s(:attrasgn, s(:lvar, :h1), :[]=, s(:lvar, :ch), s(:lit, 1)), s(:attrasgn, s(:lvar, :h1), :[]=, s(:lvar, :ch), s(:call, s(:call, s(:lvar, :h1), :[], s(:lvar, :ch)), :+, s(:lit, 1)))))), s(:lasgn, :h2, s(:call, s(:const, :Hash), :new)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :word2), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :ch, s(:call, s(:lvar, :word2), :[], s(:lvar, :i))), s(:if, s(:call, s(:call, s(:lvar, :h2), :[], s(:lvar, :ch)), :nil?), s(:attrasgn, s(:lvar, :h2), :[]=, s(:lvar, :ch), s(:lit, 1)), s(:attrasgn, s(:lvar, :h2), :[]=, s(:lvar, :ch), s(:call, s(:call, s(:lvar, :h1), :[], s(:lvar, :ch)), :+, s(:lit, 1)))))), s(:iter, s(:call, s(:call, s(:lvar, :h1), :keys), :each), s(:args, :tmp), s(:if, s(:or, s(:call, s(:call, s(:call, s(:lvar, :h2), :[], s(:lvar, :tmp)), :nil?), :==, s(:true)), s(:call, s(:call, s(:lvar, :h1), :[], s(:lvar, :tmp)), :eql?, s(:call, s(:call, s(:lvar, :h2), :[], s(:lvar, :tmp)), :==, s(:false)))), s(:return, s(:false)), nil)), s(:return, s(:true))))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :a, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :ck, s(:false)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :a), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, nil, :is_anagrams?, s(:lvar, :word), s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :i)), :[], s(:lit, 0))), s(:block, s(:attrasgn, s(:lvar, :a), :[]=, s(:lvar, :i), s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :i)), :+, s(:array, s(:lvar, :word)))), s(:lasgn, :ck, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :ck), :==, s(:false)), s(:lasgn, :a, s(:call, s(:lvar, :a), :+, s(:array, s(:array, s(:lvar, :word))))), nil))), s(:return, s(:lvar, :a))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))