s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :out, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :dex, s(:iter, s(:call, s(:lvar, :out), :index), s(:args, :ana), s(:call, s(:call, nil, :wordsort, s(:lvar, :word)), :eql?, s(:call, nil, :wordsort, s(:call, s(:lvar, :ana), :[], s(:lit, 0)))))), s(:if, s(:call, s(:lvar, :dex), :nil?), s(:block, s(:lasgn, :ana, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :out), :<<, s(:lvar, :ana)), s(:call, s(:lvar, :ana), :<<, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :out), :[], s(:lvar, :dex)), :<<, s(:lvar, :word))))), s(:return, s(:lvar, :out))), s(:defn, :wordsort, s(:args, :word), s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort)), s(:lasgn, :astr1, s(:array, s(:str, "rats"), s(:str, "book"), s(:str, "and"), s(:str, "star"), s(:str, "DNA"), s(:str, "Arts"), s(:str, "hobo"))), s(:call, nil, :puts, s(:call, s(:lvar, :astr1), :inspect)), s(:call, nil, :puts, s(:call, s(:str, "  combine: "), :+, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :astr1)), :inspect))))