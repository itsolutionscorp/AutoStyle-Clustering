s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :map, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :w1, s(:call, s(:lvar, :w), :downcase)), s(:lasgn, :key, s(:call, s(:call, s(:call, s(:lvar, :w1), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :map), :has_key?, s(:lvar, :key)), :==, s(:false)), s(:attrasgn, s(:lvar, :map), :[]=, s(:lvar, :key), s(:lvar, :w1)), s(:attrasgn, s(:lvar, :map), :[]=, s(:lvar, :key), s(:array, s(:call, s(:lvar, :map), :[], s(:lvar, :key)), s(:lvar, :w1)))))), s(:lasgn, :list, s(:array)), s(:iter, s(:call, s(:lvar, :map), :each_value), s(:args, :v), s(:call, s(:lvar, :list), :push, s(:lvar, :v))), s(:return, s(:lvar, :list))), s(:lasgn, :out, s(:call, nil, :combine_anagrams, s(:array, s(:str, "caRS"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :out), :size), :-, s(:lit, 1))), s(:lasgn, :i), s(:call, nil, :puts, s(:dstr, " Anagrams ", s(:evstr, s(:call, s(:lvar, :out), :[], s(:lvar, :i)))))))