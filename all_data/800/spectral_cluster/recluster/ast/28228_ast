s(:block, s(:cdecl, :TEST_ANA, s(:true)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sorted, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort), :join)), s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:lvar, :output), :each), s(:args, :group), s(:block, s(:lasgn, :g_sorted, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 0)), :downcase), :split, s(:str, "")), :sort), :join)), s(:if, s(:call, s(:lvar, :g_sorted), :==, s(:lvar, :sorted)), s(:block, s(:call, s(:lvar, :group), :push, s(:lvar, :word)), s(:lasgn, :found, s(:true))), nil))), s(:if, s(:call, s(:lvar, :found), :!), s(:call, s(:lvar, :output), :push, s(:array, s(:lvar, :word))), nil))), s(:lvar, :output)), s(:if, s(:const, :TEST_ANA), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), nil))