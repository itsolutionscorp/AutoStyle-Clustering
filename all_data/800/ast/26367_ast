s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :wordsB, s(:call, s(:lvar, :words), :dup)), s(:lasgn, :combine_array, s(:call, s(:const, :Array), :new)), s(:while, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :wordA, s(:call, s(:lvar, :words), :[], s(:lit, 0))), s(:lasgn, :enagums, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :enagums), :push, s(:lvar, :wordA)), s(:call, nil, :puts, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :wordA), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join)), s(:call, s(:lvar, :words), :delete, s(:lvar, :wordA)), s(:call, s(:lvar, :wordsB), :delete, s(:lvar, :wordA)), s(:lasgn, :index, s(:lit, 0)), s(:while, s(:call, s(:lvar, :index), :<, s(:call, s(:lvar, :wordsB), :length)), s(:block, s(:lasgn, :wordB, s(:call, s(:lvar, :wordsB), :[], s(:lvar, :index))), s(:if, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :wordA), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :==, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :wordB), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join)), s(:block, s(:call, s(:lvar, :enagums), :push, s(:lvar, :wordB)), s(:call, s(:lvar, :wordsB), :delete, s(:lvar, :wordB)), s(:call, s(:lvar, :words), :delete, s(:lvar, :wordB))), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1))))), true), s(:call, s(:lvar, :combine_array), :push, s(:lvar, :enagums))), true), s(:call, nil, :puts, s(:call, s(:lvar, :combine_array), :to_s))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))