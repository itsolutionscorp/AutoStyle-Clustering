s(:block, s(:defn, :ana, s(:args, :string), s(:return, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :string), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :downcase))), s(:lasgn, :src, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :src, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racS"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :res, s(:call, s(:const, :Hash), :new, s(:array))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :el, s(:call, nil, :ana, s(:lvar, :word))), s(:if, s(:call, s(:call, s(:call, s(:lvar, :res), :[], s(:lvar, :el)), :length), :==, s(:lit, 0)), s(:attrasgn, s(:lvar, :res), :[]=, s(:lvar, :el), s(:array, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :res), :[], s(:lvar, :el)), :<<, s(:lvar, :word))))), s(:lasgn, :res_ar, s(:array)), s(:iter, s(:call, s(:lvar, :res), :each), s(:args, :ar), s(:call, s(:lvar, :res_ar), :<<, s(:call, s(:lvar, :ar), :[], s(:lit, 1)))), s(:return, s(:lvar, :res_ar))), s(:call, nil, :combine_anagrams, s(:lvar, :src)))