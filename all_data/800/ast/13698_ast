s(:block, s(:defn, :word_sort, s(:args, :word), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each_with_index), s(:args, :w, :index), s(:block, s(:lasgn, :w2, s(:call, nil, :word_sort, s(:lvar, :w))), s(:if, s(:call, s(:lvar, :output), :has_key?, s(:lvar, :w2)), s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :w2)), :<<, s(:lvar, :w)), s(:attrasgn, s(:lvar, :output), :[]=, s(:lvar, :w2), s(:array, s(:lvar, :w)))))), s(:return, s(:call, s(:lvar, :output), :values))), s(:lasgn, :input, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "Scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :o, s(:call, nil, :combine_anagrams, s(:lvar, :input))), s(:call, nil, :puts, s(:call, s(:lvar, :o), :inspect)), s(:lasgn, :input, s(:array)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :input)), :inspect)), s(:lasgn, :input, s(:array, s(:str, "C"))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :input)), :inspect)))