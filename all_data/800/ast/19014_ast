s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sorted_words, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sorted_word, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /\w/)), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :sorted_words), :has_key?, s(:lvar, :sorted_word)), :!), s(:attrasgn, s(:lvar, :sorted_words), :[]=, s(:lvar, :sorted_word), s(:call, s(:const, :Array), :new)), nil), s(:call, s(:call, s(:lvar, :sorted_words), :[], s(:lvar, :sorted_word)), :<<, s(:lvar, :word)))), s(:return, s(:call, s(:lvar, :sorted_words), :values))), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "RACS"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:lvar, :words))))