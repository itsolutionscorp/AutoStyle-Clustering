s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:call, s(:iter, s(:call, s(:lvar, :words), :group_by), s(:args, :w), s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join)), :values)), s(:call, nil, :require, s(:str, "test/unit")), s(:class, :PartThreeTest, s(:colon2, s(:colon2, s(:const, :Test), :Unit), :TestCase), s(:defn, :test_anagrams, s(:args), s(:lasgn, :res, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :assert_equal, s(:call, s(:array, s(:array, s(:str, "cars"), s(:str, "racs"), s(:str, "scar")), s(:array, s(:str, "four")), s(:array, s(:str, "for")), s(:array, s(:str, "potatoes")), s(:array, s(:str, "creams"), s(:str, "scream"))), :sort), s(:call, s(:lvar, :res), :sort)), s(:lasgn, :res2, s(:call, nil, :combine_anagrams, s(:call, s(:array, s(:str, "a"), s(:str, "A")), :sort))), s(:call, nil, :assert_equal, s(:lvar, :res2), s(:call, s(:array, s(:array, s(:str, "a"), s(:str, "A"))), :sort)))))