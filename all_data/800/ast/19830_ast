s(:block, s(:defn, :anagram?, s(:args, :first, :second), s(:lasgn, :a, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :first), :chars), :sort), s(:args, :k, :l), s(:call, s(:lvar, :k), :casecmp, s(:lvar, :l))), :join)), s(:lasgn, :b, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :second), :chars), :sort), s(:args, :k, :l), s(:call, s(:lvar, :k), :casecmp, s(:lvar, :l))), :join)), s(:return, s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b)))), s(:defn, :anagram_arr?, s(:args, :word, :arr), s(:lasgn, :out, s(:array)), s(:iter, s(:call, s(:lvar, :arr), :each), s(:args, :val), s(:if, s(:call, s(:call, nil, :anagram?, s(:lvar, :word), s(:lvar, :val)), :==, s(:lit, 0)), s(:call, s(:lvar, :out), :<<, s(:lvar, :val)), nil)), s(:return, s(:lvar, :out))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :arr, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :arr), :<<, s(:call, nil, :anagram_arr?, s(:lvar, :word), s(:lvar, :words)))), s(:return, s(:call, s(:lvar, :arr), :uniq))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "Racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :inspect)))