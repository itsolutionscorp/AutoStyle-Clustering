s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :wordsCopy, s(:array)), s(:lasgn, :resultList, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :wordsCopy), :<<, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join))), s(:lasgn, :index, s(:lit, 0)), s(:while, s(:call, s(:lvar, :index), :<, s(:call, s(:lvar, :words), :length)), s(:block, s(:lasgn, :findSortedWord, s(:call, s(:lvar, :wordsCopy), :[], s(:lvar, :index))), s(:if, s(:call, s(:lvar, :findSortedWord), :!=, s(:str, "")), s(:block, s(:lasgn, :wordArray, s(:array)), s(:lasgn, :findIndex, s(:call, s(:lvar, :wordsCopy), :index, s(:lvar, :findSortedWord))), s(:while, s(:call, s(:lvar, :findIndex), :!=, s(:nil)), s(:block, s(:call, s(:lvar, :wordArray), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :findIndex))), s(:attrasgn, s(:lvar, :wordsCopy), :[]=, s(:lvar, :findIndex), s(:str, "")), s(:lasgn, :findIndex, s(:call, s(:lvar, :wordsCopy), :index, s(:lvar, :findSortedWord)))), true), s(:call, s(:lvar, :resultList), :<<, s(:lvar, :wordArray))), nil), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :resultList))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))