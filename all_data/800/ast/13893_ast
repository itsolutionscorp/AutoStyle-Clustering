s(:block, s(:defn, :are_anagrams?, s(:args, :word1, :word2), s(:return, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :split, s(:lit, //)), :sort), :to_s), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :split, s(:lit, //)), :sort), :to_s)))), s(:defn, :contains_anagram?, s(:args, :array, :word), s(:iter, s(:call, s(:lvar, :array), :each), s(:args, :elt), s(:if, s(:call, nil, :are_anagrams?, s(:lvar, :elt), s(:lvar, :word)), s(:return, s(:true)), nil)), s(:false)), s(:defn, :handle_anagrams, s(:args, :array, :word), s(:iter, s(:call, s(:lvar, :array), :each), s(:args, :elt), s(:if, s(:call, nil, :contains_anagram?, s(:lvar, :elt), s(:lvar, :word)), s(:block, s(:call, s(:lvar, :elt), :push, s(:lvar, :word)), s(:return)), nil)), s(:call, s(:lvar, :array), :push, s(:array, s(:lvar, :word)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :anagram_found, s(:false)), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :elt), s(:if, s(:call, nil, :contains_anagram?, s(:lvar, :elt), s(:lvar, :word)), s(:block, s(:call, s(:lvar, :elt), :push, s(:lvar, :word)), s(:lasgn, :anagram_found, s(:true)), s(:break)), nil)), s(:if, s(:call, s(:lvar, :anagram_found), :!), s(:call, s(:lvar, :anagrams), :push, s(:array, s(:lvar, :word))), nil))), s(:return, s(:lvar, :anagrams))))