s(:block, s(:defn, :are_anagrams?, s(:args, :a, :b), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :a), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :b), :downcase), :chars), :sort), :join))), s(:defn, :create_anagram_hash, s(:args, :words), s(:lasgn, :hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :word), s(:block, s(:lasgn, :added, s(:false)), s(:iter, s(:call, s(:call, s(:lvar, :hash), :keys), :each), s(:args, :key), s(:if, s(:call, nil, :are_anagrams?, s(:lvar, :word), s(:lvar, :key)), s(:block, s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :key)), :<<, s(:lvar, :word)), s(:lasgn, :added, s(:true)), s(:break)), nil)), s(:if, s(:lvar, :added), nil, s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :word), s(:array, s(:lvar, :word)))))), s(:lvar, :hash)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :array, s(:array)), s(:iter, s(:call, s(:call, nil, :create_anagram_hash, s(:lvar, :words)), :each_pair), s(:args, :key, :value), s(:call, s(:lvar, :array), :<<, s(:lvar, :value))), s(:lvar, :array)))