s(:block, s(:defn, :createArray, s(:args, :word), s(:lasgn, :wordComp, s(:call, s(:lvar, :word), :downcase)), s(:lasgn, :array, s(:array)), s(:iter, s(:call, s(:lvar, :wordComp), :chars), s(:args, :c), s(:call, s(:lvar, :array), :<<, s(:call, s(:lvar, :c), :ord))), s(:call, s(:lvar, :array), :sort!), s(:lvar, :array)), s(:defn, :compareAnagram, s(:args, :word1, :word2), s(:lasgn, :array1, s(:call, nil, :createArray, s(:lvar, :word1))), s(:lasgn, :array2, s(:call, nil, :createArray, s(:lvar, :word2))), s(:call, s(:lvar, :array1), :==, s(:lvar, :array2))), s(:defn, :findAnagram, s(:args, :anagrams, :word), s(:lasgn, :found, s(:false)), s(:iter, s(:call, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :anagrams), :size)), :each), s(:args, :idx), s(:if, s(:call, s(:call, nil, :compareAnagram, s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :idx)), :[], s(:lit, 0)), s(:lvar, :word)), :==, s(:true)), s(:return, s(:array, s(:true), s(:lvar, :idx))), nil)), s(:return, s(:array, s(:false), s(:lit, -1)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :res, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:masgn, s(:array, s(:lasgn, :found), s(:lasgn, :idx)), s(:to_ary, s(:call, nil, :findAnagram, s(:lvar, :res), s(:lvar, :word)))), s(:if, s(:call, s(:lvar, :found), :==, s(:false)), s(:call, s(:lvar, :res), :<<, s(:array, s(:lvar, :word))), s(:call, s(:call, s(:lvar, :res), :[], s(:lvar, :idx)), :<<, s(:lvar, :word))))), s(:lvar, :res)))