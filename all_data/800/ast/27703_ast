s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :temp, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :temp)), s(:op_asgn1, s(:lvar, :anagrams), s(:arglist, s(:lvar, :temp)), :+, s(:lit, 1)), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lvar, :temp), s(:lit, 1))))), s(:lasgn, :results, s(:iter, s(:call, s(:const, :Array), :new, s(:call, s(:lvar, :anagrams), :length)), s(:args), s(:call, s(:const, :Array), :new))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :i, s(:call, s(:call, s(:lvar, :anagrams), :keys), :index, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join))), s(:call, s(:call, s(:lvar, :results), :[], s(:lvar, :i)), :push, s(:lvar, :word)))), s(:return, s(:lvar, :results))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))