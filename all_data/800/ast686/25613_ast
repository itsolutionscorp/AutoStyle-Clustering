s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:array)), s(:lasgn, :len, s(:call, s(:lvar, :words), :length)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :len), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :compare_word, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :chars), :sort), :join)), s(:lasgn, :current_arr, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :buffer, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :buffer), :length), :==, s(:call, s(:lvar, :compare_word), :length)), s(:if, s(:call, s(:lvar, :compare_word), :start_with?, s(:lvar, :buffer)), s(:block, s(:call, nil, :puts, s(:call, s(:call, s(:lvar, :compare_word), :+, s(:str, " starts with ")), :+, s(:lvar, :buffer))), s(:call, s(:lvar, :current_arr), :push, s(:lvar, :word))), nil), nil))), s(:if, s(:and, s(:call, s(:call, s(:lvar, :current_arr), :length), :>, s(:lit, 0)), s(:call, s(:call, s(:lvar, :result), :index, s(:lvar, :current_arr)), :==, s(:nil))), s(:call, s(:lvar, :result), :push, s(:lvar, :current_arr)), nil), s(:call, nil, :puts, s(:call, s(:lvar, :current_arr), :to_s)))), s(:return, s(:lvar, :result))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :to_s)))