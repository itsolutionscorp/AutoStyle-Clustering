s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :wordHash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sortedword, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :wordHash), :[], s(:lvar, :sortedword)), :nil?), s(:block, s(:lasgn, :newWord, s(:array, s(:lvar, :word))), s(:attrasgn, s(:lvar, :wordHash), :[]=, s(:lvar, :sortedword), s(:lvar, :newWord))), s(:block, s(:lasgn, :wordAlreadyPresent, s(:call, s(:lvar, :wordHash), :[], s(:lvar, :sortedword))), s(:call, s(:lvar, :wordAlreadyPresent), :push, s(:lvar, :word)), s(:attrasgn, s(:lvar, :wordHash), :[]=, s(:lvar, :sortedword), s(:lvar, :wordAlreadyPresent)))))), s(:lasgn, :listToReturn, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :wordHash), :each), s(:args, :key, :value), s(:call, s(:lvar, :listToReturn), :push, s(:lvar, :value))), s(:return, s(:lvar, :listToReturn))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))