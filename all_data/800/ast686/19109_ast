s(:block, s(:defn, :is_anagram, s(:args, :reference, :compared), s(:call, nil, :puts, s(:call, s(:str, "reference sorted: "), :+, s(:call, s(:call, s(:call, s(:lvar, :reference), :chars), :sort), :join))), s(:call, nil, :puts, s(:call, s(:str, "compared sorted: "), :+, s(:call, s(:call, s(:call, s(:lvar, :compared), :chars), :sort), :join))), s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :reference), :downcase), :chars), :sort), :join), :<=>, s(:call, s(:call, s(:call, s(:call, s(:lvar, :compared), :downcase), :chars), :sort), :join)), :==, s(:lit, 0))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sortedword, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:lasgn, :tmp, s(:call, s(:lvar, :result), :[], s(:lvar, :sortedword))), s(:if, s(:call, s(:lvar, :tmp), :!=, s(:nil)), s(:block, s(:call, nil, :puts, s(:call, s(:call, s(:str, "adding word \""), :+, s(:lvar, :word)), :+, s(:str, "\" to hash"))), s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :sortedword), s(:call, s(:lvar, :tmp), :+, s(:array, s(:lvar, :word))))), s(:block, s(:call, nil, :puts, s(:call, s(:call, s(:str, "creating new hash entry with word \""), :+, s(:lvar, :word)), :+, s(:str, "\""))), s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :sortedword), s(:array, s(:lvar, :word))))))), s(:return, s(:call, s(:lvar, :result), :values))))