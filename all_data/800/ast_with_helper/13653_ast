s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :a, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :i), s(:call, s(:call, s(:call, s(:call, s(:lvar, :i), :downcase), :chars), :sort), :join))), s(:lasgn, :b, s(:call, s(:lvar, :a), :uniq)), s(:lasgn, :htable, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :b), :each), s(:args, :w), s(:attrasgn, s(:lvar, :htable), :[]=, s(:lvar, :w), s(:array))), s(:iter, s(:call, s(:lvar, :b), :each), s(:args, :w), s(:iter, s(:call, s(:lvar, :a), :each_with_index), s(:args, :x, :y), s(:if, s(:call, s(:lvar, :x), :==, s(:lvar, :w)), s(:call, s(:call, s(:lvar, :htable), :[], s(:lvar, :w)), :<<, s(:lvar, :y)), nil))), s(:lasgn, :result, s(:array)), s(:lasgn, :t, s(:array)), s(:iter, s(:call, s(:lvar, :htable), :each), s(:args, :x, :y), s(:block, s(:iter, s(:call, s(:lvar, :y), :each), s(:args, :i), s(:call, s(:lvar, :t), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:call, s(:lvar, :result), :<<, s(:lvar, :t)), s(:lasgn, :t, s(:array)))), s(:return, s(:lvar, :result))))