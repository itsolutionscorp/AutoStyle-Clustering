s(:block, s(:defn, :sort_word_chars, s(:args, :word), s(:lasgn, :w_as_array, s(:array)), s(:lasgn, :out, s(:str, "")), s(:iter, s(:call, s(:call, s(:lvar, :word), :downcase), :each_char), s(:args, :ch), s(:call, s(:lvar, :w_as_array), :<<, s(:lvar, :ch))), s(:call, s(:lvar, :w_as_array), :sort!), s(:iter, s(:call, s(:lvar, :w_as_array), :each), s(:args, :ch), s(:call, s(:lvar, :out), :<<, s(:lvar, :ch))), s(:lvar, :out)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :out, s(:array)), s(:lasgn, :hashAnagrams, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :wSorted, s(:call, nil, :sort_word_chars, s(:lvar, :w))), s(:if, s(:call, s(:lvar, :hashAnagrams), :has_key?, s(:lvar, :wSorted)), s(:call, s(:call, s(:lvar, :hashAnagrams), :[], s(:lvar, :wSorted)), :<<, s(:lvar, :w)), s(:attrasgn, s(:lvar, :hashAnagrams), :[]=, s(:lvar, :wSorted), s(:array, s(:lvar, :w)))))), s(:iter, s(:call, s(:lvar, :hashAnagrams), :each), s(:args, :wSorted, :arr), s(:call, s(:lvar, :out), :<<, s(:lvar, :arr))), s(:lvar, :out)))