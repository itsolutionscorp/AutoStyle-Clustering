s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:lvar, :words)), nil), s(:lasgn, :anagram_list, s(:array)), s(:call, nil, :print, s(:lvar, :words)), s(:call, nil, :puts), s(:lasgn, :words, s(:call, s(:lvar, :words), :flatten)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:call, s(:lvar, :anagram_list), :length), :==, s(:lit, 0)), s(:block, s(:call, s(:lvar, :anagram_list), :<<, s(:array, s(:lvar, :word))), s(:next)), nil), s(:lasgn, :sorted_word, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:call, nil, :print, s(:lvar, :sorted_word)), s(:lasgn, :inserted, s(:false)), s(:iter, s(:call, s(:lvar, :anagram_list), :each_index), s(:args, :i), s(:block, s(:call, nil, :print, s(:str, " ")), s(:call, nil, :print, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :anagram_list), :[], s(:lvar, :i)), :[], s(:lit, 0)), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:call, nil, :print, s(:str, "\n")), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :anagram_list), :[], s(:lvar, :i)), :[], s(:lit, 0)), :downcase), :scan, s(:lit, /./)), :sort), :join), :==, s(:lvar, :sorted_word)), s(:block, s(:call, s(:call, s(:lvar, :anagram_list), :[], s(:lvar, :i)), :<<, s(:lvar, :word)), s(:lasgn, :inserted, s(:true)), s(:break)), nil))), s(:if, s(:lvar, :inserted), nil, s(:call, s(:lvar, :anagram_list), :<<, s(:array, s(:lvar, :word)))))), s(:return, s(:lvar, :anagram_list))))