s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :new_words, s(:call, s(:const, :Array), :new)), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:call, s(:lvar, :new_words), :<<, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join))), s(:lasgn, :a, s(:call, s(:lvar, :new_words), :uniq)), s(:iter, s(:call, s(:lvar, :a), :each), s(:args, :k), s(:block, s(:lasgn, :b, s(:iter, s(:call, s(:lvar, :new_words), :map), s(:args, :it), s(:call, s(:lvar, :k), :==, s(:lvar, :it)))), s(:lasgn, :res, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:call, s(:lvar, :b), :length), :times), s(:args, :m), s(:if, s(:call, s(:call, s(:lvar, :b), :[], s(:lvar, :m)), :==, s(:true)), s(:call, s(:lvar, :res), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :m))), nil)), s(:call, s(:lvar, :result), :<<, s(:lvar, :res)))), s(:return, s(:lvar, :result))))