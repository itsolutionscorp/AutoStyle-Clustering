s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :final, s(:call, s(:const, :Array), :new)), s(:lasgn, :n, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :temp, s(:call, s(:const, :Array), :new)), s(:lasgn, :temp, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:lit, //)), :sort)), s(:call, s(:lvar, :temp), :sort), s(:attrasgn, s(:lvar, :final), :[]=, s(:lvar, :n), s(:lvar, :temp)), s(:lasgn, :n, s(:call, s(:lvar, :n), :+, s(:lit, 1))))), s(:call, s(:lvar, :final), :uniq!), s(:lasgn, :really_final, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :final), :each), s(:args, :x), s(:block, s(:lasgn, :semi_final, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :y), s(:block, s(:lasgn, :temp, s(:call, s(:call, s(:call, s(:lvar, :y), :downcase), :split, s(:lit, //)), :sort)), s(:if, s(:call, s(:lvar, :temp), :==, s(:lvar, :x)), s(:call, s(:lvar, :semi_final), :insert, s(:call, s(:lvar, :semi_final), :length), s(:lvar, :y)), nil))), s(:call, s(:lvar, :really_final), :insert, s(:call, s(:lvar, :really_final), :length), s(:lvar, :semi_final)))), s(:call, s(:lvar, :really_final), :sort), s(:return, s(:lvar, :really_final))))