s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:array)), s(:while, s(:call, s(:call, s(:lvar, :words), :empty?), :!), s(:block, s(:lasgn, :w, s(:call, s(:lvar, :words), :pop)), s(:lasgn, :anagram_el, s(:array)), s(:call, s(:lvar, :anagram_el), :<<, s(:lvar, :w)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, nil, :is_anagram, s(:lvar, :w), s(:lvar, :word)), s(:call, s(:lvar, :anagram_el), :<<, s(:lvar, :word)), nil)), s(:iter, s(:call, s(:lvar, :anagram_el), :each), s(:args, :word), s(:call, s(:lvar, :words), :delete, s(:lvar, :word))), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :anagram_el))), true), s(:lvar, :anagrams)), s(:defn, :is_anagram, s(:args, :word1, :word2), s(:lasgn, :w1, s(:call, s(:lvar, :word1), :downcase)), s(:lasgn, :w2, s(:call, s(:lvar, :word2), :downcase)), s(:return, s(:if, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w1), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:lvar, :w2), :chars), :sort), :join)), s(:true), s(:false)))))