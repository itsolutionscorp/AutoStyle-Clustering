s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :wordss, s(:call, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /./)), :sort), :join)), :uniq)), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :wordss), :map), s(:args, :word_u), s(:block, s(:lasgn, :result1, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :word), s(:if, s(:call, s(:lvar, :word_u), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:call, s(:lvar, :result1), :<<, s(:lvar, :word)), nil)), s(:call, s(:lvar, :result), :<<, s(:lvar, :result1)))), s(:return, s(:lvar, :result))))