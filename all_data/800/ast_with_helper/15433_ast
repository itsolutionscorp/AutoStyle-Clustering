s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:iter, s(:call, s(:const, :Hash), :new), s(:args, :h, :k), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :k), s(:call, s(:const, :Hash), :new, s(:lit, 0))))), s(:call, nil, :print, s(:str, "=== words ===\n")), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:call, nil, :print, s(:dstr, "", s(:evstr, s(:lvar, :w)), s(:str, "\n--"))), s(:call, nil, :print, s(:dstr, "", s(:evstr, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join)), s(:str, "\n"))), s(:op_asgn1, s(:call, s(:lvar, :anagrams), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join)), s(:arglist, s(:lvar, :w)), :+, s(:lit, 1)))), s(:call, nil, :print, s(:str, "=== anagrams ===\n")), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :x), s(:call, nil, :print, s(:dstr, "", s(:evstr, s(:lvar, :x)), s(:str, "\n")))), s(:call, nil, :print, s(:str, "=== combined ===\n")), s(:lasgn, :combined, s(:array)), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :k, :v), s(:call, s(:lvar, :combined), :push, s(:call, s(:lvar, :v), :keys))), s(:lvar, :combined)))