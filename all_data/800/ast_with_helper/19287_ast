s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagramsGroup, s(:array)), s(:iter, s(:call, s(:call, s(:lvar, :words), :length), :times), s(:args, :i), s(:block, s(:lasgn, :anagrams, s(:array)), s(:if, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :empty?), nil, s(:call, s(:lvar, :anagrams), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:iter, s(:call, s(:call, s(:lvar, :words), :length), :times), s(:args, :j), s(:if, s(:and, s(:call, s(:lvar, :i), :!=, s(:lvar, :j)), s(:and, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :!=, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :j)), :downcase)), s(:and, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :j)), :!=, s(:str, "")), s(:call, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :==, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :j)), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join))))), s(:block, s(:call, s(:lvar, :anagrams), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:attrasgn, s(:lvar, :words), :[]=, s(:lvar, :j), s(:str, ""))), nil)), s(:if, s(:call, s(:lvar, :anagrams), :empty?), nil, s(:call, s(:lvar, :anagramsGroup), :<<, s(:lvar, :anagrams))))), s(:return, s(:lvar, :anagramsGroup))))