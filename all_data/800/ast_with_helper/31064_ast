s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:array)), s(:lasgn, :indexes, s(:call, s(:const, :Hash), :new)), s(:lasgn, :fmtd_words, s(:iter, s(:call, s(:lvar, :words), :collect), s(:args, :w), s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :split, s(:str, "")), :sort), :join, s(:str, "")), :downcase))), s(:iter, s(:call, s(:lvar, :fmtd_words), :each_index), s(:args, :i), s(:block, s(:lasgn, :word, s(:call, s(:lvar, :fmtd_words), :[], s(:lvar, :i))), s(:if, s(:call, s(:lvar, :indexes), :[], s(:lvar, :word)), s(:call, s(:call, s(:lvar, :indexes), :[], s(:lvar, :word)), :<<, s(:lvar, :i)), s(:attrasgn, s(:lvar, :indexes), :[]=, s(:lvar, :word), s(:array, s(:lvar, :i)))), s(:call, nil, :print, s(:call, s(:lvar, :indexes), :[], s(:call, s(:lvar, :fmtd_words), :[], s(:lvar, :i))), s(:call, s(:lvar, :fmtd_words), :[], s(:lvar, :i)), s(:lvar, :i), s(:str, "\n")))), s(:call, nil, :print, s(:lvar, :indexes), s(:str, "\n")), s(:iter, s(:call, s(:lvar, :indexes), :each), s(:args, :_, :value), s(:call, s(:lvar, :anagrams), :<<, s(:iter, s(:call, s(:lvar, :value), :collect), s(:args, :i), s(:call, s(:lvar, :words), :[], s(:lvar, :i))))), s(:return, s(:lvar, :anagrams))))