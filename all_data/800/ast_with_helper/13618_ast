s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sorted, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :w), s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort))), s(:lasgn, :known, s(:array)), s(:lasgn, :result, s(:array)), s(:lasgn, :n, s(:call, s(:lvar, :words), :length)), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :known), :index, s(:lvar, :i)), :==, s(:nil)), s(:block, s(:lasgn, :palindroms, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:call, s(:lvar, :known), :push, s(:lvar, :i)), s(:for, s(:dot2, s(:call, s(:lvar, :i), :+, s(:lit, 1)), s(:lvar, :n)), s(:lasgn, :j), s(:if, s(:and, s(:call, s(:call, s(:lvar, :known), :index, s(:lvar, :j)), :==, s(:nil)), s(:call, s(:call, s(:lvar, :sorted), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :sorted), :[], s(:lvar, :j)))), s(:block, s(:call, s(:lvar, :palindroms), :push, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:call, s(:lvar, :known), :push, s(:lvar, :j))), nil)), s(:call, s(:lvar, :result), :push, s(:lvar, :palindroms))), nil)), s(:return, s(:lvar, :result))))