s(:block, s(:defn, :chars, s(:args), s(:iter, s(:call, s(:call, s(:self), :split, s(:str, "")), :each), s(:args, :char), s(:yield, s(:lvar, :char)))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sortedWord, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :word), :chars), s(:args, :char), s(:call, s(:lvar, :sortedWord), :<<, s(:lvar, :char))), s(:lasgn, :key, s(:call, s(:call, s(:lvar, :sortedWord), :sort), :join)), s(:call, s(:lvar, :key), :lower!), s(:if, s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :key)), :!), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lvar, :key), s(:call, s(:const, :Array), :new)), nil), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :key)), :<<, s(:lvar, :word)))), s(:lasgn, :returnArray, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :anagrams), :each), s(:args, :x, :y), s(:call, s(:lvar, :returnArray), :<<, s(:lvar, :y))), s(:return, s(:lvar, :returnArray))))