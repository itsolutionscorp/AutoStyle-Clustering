s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagram_groups, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:call, nil, :pp, s(:lvar, :word)), s(:if, s(:call, s(:call, s(:lvar, :anagram_groups), :length), :==, s(:lit, 0)), s(:block, s(:call, s(:lvar, :anagram_groups), :push, s(:array, s(:lvar, :word))), s(:next)), nil), s(:lasgn, :is_word_added, s(:false)), s(:iter, s(:call, s(:lvar, :anagram_groups), :each), s(:args, :group), s(:if, s(:and, s(:call, s(:lvar, :group), :is_a?, s(:const, :Array)), s(:call, s(:call, s(:call, s(:lvar, :group), :first), :length), :==, s(:call, s(:lvar, :word), :length))), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :group), :first), :downcase), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort)), s(:block, s(:call, s(:lvar, :group), :push, s(:lvar, :word)), s(:lasgn, :is_word_added, s(:true)), s(:break)), nil), nil)), s(:if, s(:lvar, :is_word_added), nil, s(:call, s(:lvar, :anagram_groups), :push, s(:array, s(:lvar, :word)))))), s(:call, nil, :pp, s(:lvar, :anagram_groups))))