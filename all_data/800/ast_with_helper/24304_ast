s(:block, s(:defn, :ordenar_cadena, s(:args, :cadena, :cases), s(:if, s(:call, s(:lvar, :cases), :==, s(:lit, 0)), s(:lasgn, :cadena, s(:call, s(:call, s(:call, s(:lvar, :cadena), :chars), :sort), :join)), s(:lasgn, :cadena, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :cadena), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join))), s(:lvar, :cadena)), s(:defn, :combine_anagrams, s(:args, :palabras), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :k, s(:lit, 0)), s(:lasgn, :l, s(:lit, 0)), s(:lasgn, :j, s(:lit, 0)), s(:lasgn, :arreglo, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :arreglo), :[]=, s(:lvar, :l), s(:call, s(:const, :Array), :new)), s(:if, s(:call, s(:call, s(:lvar, :palabras), :length), :==, s(:lit, 0)), s(:return, s(:lvar, :palabras)), nil), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :palabras), :length)), s(:block, s(:lasgn, :palabraInicial, s(:call, nil, :ordenar_cadena, s(:call, s(:lvar, :palabras), :[], s(:lvar, :i)), s(:lit, 1))), s(:lasgn, :palabraComparar, s(:call, nil, :ordenar_cadena, s(:call, s(:lvar, :palabras), :[], s(:lvar, :k)), s(:lit, 1))), s(:if, s(:call, s(:call, s(:lvar, :palabraInicial), :casecmp, s(:lvar, :palabraComparar)), :==, s(:lit, 0)), s(:block, s(:attrasgn, s(:call, s(:lvar, :arreglo), :[], s(:lvar, :l)), :[]=, s(:lvar, :j), s(:call, s(:lvar, :palabras), :[], s(:lvar, :k))), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1)))), nil), s(:lasgn, :k, s(:call, s(:lvar, :k), :+, s(:lit, 1))), s(:if, s(:call, s(:lvar, :k), :==, s(:call, s(:lvar, :palabras), :length)), s(:block, s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))), s(:lasgn, :k, s(:lit, 0)), s(:lasgn, :l, s(:call, s(:lvar, :l), :+, s(:lit, 1))), s(:lasgn, :j, s(:lit, 0)), s(:if, s(:call, s(:lvar, :i), :!=, s(:call, s(:lvar, :palabras), :length)), s(:attrasgn, s(:lvar, :arreglo), :[]=, s(:lvar, :l), s(:call, s(:const, :Array), :new)), nil)), nil)), true), s(:return, s(:call, s(:lvar, :arreglo), :uniq))))