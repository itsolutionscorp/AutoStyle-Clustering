s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_one, :strand_two), s(:lasgn, :shortest_string_length, s(:call, s(:array, s(:call, s(:lvar, :strand_one), :length), s(:call, s(:lvar, :strand_two), :length)), :min)), s(:iasgn, :@hamming_distance_count, s(:lit, 0)), s(:iasgn, :@string_position, s(:lit, 0)), s(:while, s(:call, s(:ivar, :@string_position), :<, s(:lvar, :shortest_string_length)), s(:block, s(:if, s(:call, s(:call, s(:call, s(:lvar, :strand_one), :chars), :[], s(:ivar, :@string_position)), :!=, s(:call, s(:call, s(:lvar, :strand_two), :chars), :[], s(:ivar, :@string_position))), s(:iasgn, :@hamming_distance_count, s(:call, s(:ivar, :@hamming_distance_count), :+, s(:lit, 1))), nil), s(:iasgn, :@string_position, s(:call, s(:ivar, :@string_position), :+, s(:lit, 1)))), true), s(:return, s(:ivar, :@hamming_distance_count))))