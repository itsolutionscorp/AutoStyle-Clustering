s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:call, s(:lvar, :strand1), :size), :!=, s(:call, s(:lvar, :strand2), :size)), s(:call, nil, :raise, s(:str, "Can't compute hamming distance for strands of unequal length")), nil), s(:call, s(:lvar, :strand1), :upcase!), s(:call, s(:lvar, :strand2), :upcase!), s(:lasgn, :distance, s(:lit, 0)), s(:iter, s(:call, s(:call, s(:lvar, :strand1), :size), :times), s(:args, :index), s(:if, s(:call, s(:call, s(:lvar, :strand1), :[], s(:lvar, :index)), :eql?, s(:call, s(:lvar, :strand2), :[], s(:lvar, :index))), nil, s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))))), s(:lvar, :distance)))