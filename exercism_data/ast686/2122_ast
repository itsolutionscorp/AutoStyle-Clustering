s(:class, :Hamming, nil, s(:defs, s(:const, :Hamming), :compute, s(:args, :string1, :string2), s(:if, s(:or, s(:call, s(:lit, /^[^ACGT]$/), :match, s(:lvar, :string1)), s(:call, s(:lit, /^[^ACGT]$/), :match, s(:lvar, :string2))), s(:str, "Invalid arguments given."), nil), s(:case, s(:call, s(:call, s(:lvar, :string1), :length), :<=>, s(:call, s(:lvar, :string2), :length)), s(:when, s(:array, s(:lit, -1), s(:lit, 0)), s(:lasgn, :str, s(:lvar, :string1))), s(:when, s(:array, s(:lit, 1)), s(:lasgn, :str, s(:lvar, :string2))), nil), s(:lasgn, :hamming, s(:lit, 0)), s(:for, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :str), :length)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :string1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :string2), :[], s(:lvar, :i))), s(:lasgn, :hamming, s(:call, s(:lvar, :hamming), :+, s(:lit, 1))), nil)), s(:lvar, :hamming)))