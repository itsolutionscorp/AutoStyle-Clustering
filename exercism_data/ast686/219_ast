s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_one, :strand_two), s(:lasgn, :comparison, s(:array)), s(:if, s(:call, s(:call, s(:lvar, :strand_one), :length), :>, s(:call, s(:lvar, :strand_two), :length)), s(:lasgn, :strand_one, s(:call, s(:lvar, :strand_one), :[], s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :strand_two), :length), :-, s(:lit, 1))))), nil), s(:masgn, s(:array, s(:lasgn, :strand_one_bases), s(:lasgn, :strand_two_bases)), s(:array, s(:call, s(:lvar, :strand_one), :chars), s(:call, s(:lvar, :strand_two), :chars))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :strand_one), :length), :-, s(:lit, 1))), s(:lasgn, :x), s(:call, s(:lvar, :comparison), :<<, s(:call, s(:call, s(:lvar, :strand_one_bases), :[], s(:lvar, :x)), :==, s(:call, s(:lvar, :strand_two_bases), :[], s(:lvar, :x))))), s(:call, s(:lvar, :comparison), :count, s(:false))))