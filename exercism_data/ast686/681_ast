s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_1, :strand_2), s(:lasgn, :distance, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :strand_1), :length), :!=, s(:call, s(:lvar, :strand_2), :length)), s(:return), nil), s(:lasgn, :strand_1_ntides, s(:call, s(:lvar, :strand_1), :chars)), s(:lasgn, :strand_2_ntides, s(:call, s(:lvar, :strand_2), :chars)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :strand_1_ntides), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :strand_1_ntides), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand_2_ntides), :[], s(:lvar, :i))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:lvar, :distance)))