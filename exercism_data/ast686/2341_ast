s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :entry1, :entry2), s(:if, s(:call, s(:lvar, :entry1), :==, s(:lvar, :entry2)), s(:return, s(:lit, 0)), nil), s(:if, s(:call, s(:call, s(:lvar, :entry1), :length), :>, s(:call, s(:lvar, :entry2), :length)), s(:lasgn, :len, s(:call, s(:lvar, :entry2), :length)), s(:lasgn, :len, s(:call, s(:lvar, :entry1), :length))), s(:lasgn, :diff, s(:lit, 0)), s(:lasgn, :entry1, s(:call, s(:lvar, :entry1), :split, s(:str, ""))), s(:lasgn, :entry2, s(:call, s(:lvar, :entry2), :split, s(:str, ""))), s(:lasgn, :i, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:lvar, :len)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :entry1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :entry2), :[], s(:lvar, :i))), s(:lasgn, :diff, s(:call, s(:lvar, :diff), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :diff))))