s(:class, :Hamming, nil, s(:sclass, s(:self), s(:defn, :compute, s(:args, :strand_a, :strand_b), s(:lasgn, :a, s(:call, s(:lvar, :strand_a), :chars)), s(:lasgn, :b, s(:call, s(:lvar, :strand_b), :chars)), s(:if, s(:call, s(:call, s(:lvar, :a), :size), :<, s(:call, s(:lvar, :b), :size)), s(:lasgn, :b, s(:call, s(:lvar, :b), :drop, s(:call, s(:call, s(:call, s(:lvar, :b), :size), :-, s(:call, s(:lvar, :a), :size)), :+, s(:lit, 1)))), s(:if, s(:call, s(:call, s(:lvar, :a), :size), :>, s(:call, s(:lvar, :b), :size)), s(:lasgn, :a, s(:call, s(:lvar, :a), :drop, s(:call, s(:call, s(:call, s(:lvar, :a), :size), :-, s(:call, s(:lvar, :b), :size)), :+, s(:lit, 1)))), nil)), s(:call, s(:iter, s(:call, s(:call, s(:lvar, :a), :zip, s(:lvar, :b)), :reject), s(:args, :x, :y), s(:call, s(:lvar, :x), :==, s(:lvar, :y))), :size))))