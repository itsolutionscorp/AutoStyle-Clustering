s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:lvar, :strand1), :==, s(:lvar, :strand2)), s(:return, s(:lit, 0)), nil), s(:lasgn, :strand1, s(:call, s(:lvar, :strand1), :split, s(:str, ""))), s(:lasgn, :strand2, s(:call, s(:lvar, :strand2), :split, s(:str, ""))), s(:lasgn, :comparisonlength, s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :>, s(:call, s(:lvar, :strand2), :length)), s(:call, s(:lvar, :strand2), :length), s(:call, s(:lvar, :strand1), :length))), s(:lasgn, :x, s(:lit, 0)), s(:lasgn, :score, s(:lit, 0)), s(:while, s(:call, s(:lvar, :x), :<, s(:lvar, :comparisonlength)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :strand1), :[], s(:lvar, :x)), :!=, s(:call, s(:lvar, :strand2), :[], s(:lvar, :x))), s(:lasgn, :score, s(:call, s(:lvar, :score), :+, s(:lit, 1))), nil), s(:lasgn, :x, s(:call, s(:lvar, :x), :+, s(:lit, 1)))), true), s(:lvar, :score)))