s(:defn, :compute, s(:args, :s, :t), s(:lasgn, :s_array, s(:call, s(:lvar, :s), :chars)), s(:lasgn, :t_array, s(:call, s(:lvar, :t), :chars)), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, nil, :loop), s(:args), s(:block, s(:lasgn, :s_item, s(:call, s(:lvar, :s_array), :[], s(:lvar, :i))), s(:lasgn, :t_item, s(:call, s(:lvar, :t_array), :[], s(:lvar, :i))), s(:if, s(:call, s(:call, s(:lvar, :s_array), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :t_array), :[], s(:lvar, :i))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))), s(:if, s(:or, s(:call, s(:lvar, :i), :>=, s(:call, s(:lvar, :s_array), :size)), s(:or, s(:call, s(:lvar, :i), :>=, s(:call, s(:lvar, :t_array), :size)), s(:call, s(:lvar, :i), :>=, s(:call, s(:lvar, :s_array), :size)))), s(:break), nil))), s(:return, s(:lvar, :hamming_distance)))