s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :sequence1, :sequence2), s(:lasgn, :minlength, s(:call, s(:array, s(:call, s(:lvar, :sequence1), :length), s(:call, s(:lvar, :sequence2), :length)), :min)), s(:lasgn, :differential, s(:lit, 0)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :minlength), :-, s(:lit, 1))), :each), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :sequence1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :sequence2), :[], s(:lvar, :i))), s(:lasgn, :differential, s(:call, s(:lvar, :differential), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :differential))))