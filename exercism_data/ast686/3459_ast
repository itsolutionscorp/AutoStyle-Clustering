s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :str1, :str2), s(:lasgn, :size1, s(:call, s(:lvar, :str1), :length)), s(:lasgn, :size2, s(:call, s(:lvar, :str2), :length)), s(:lasgn, :total, s(:str, "")), s(:if, s(:call, s(:lvar, :size1), :>, s(:lvar, :size2)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :size2), :-, s(:lit, 1))), :each), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :str1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :str2), :[], s(:lvar, :i))), s(:call, s(:lvar, :total), :<<, s(:call, s(:lit, 1), :to_s)), nil)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :size1), :-, s(:lit, 1))), :each), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :str1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :str2), :[], s(:lvar, :i))), s(:call, s(:lvar, :total), :<<, s(:call, s(:lit, 1), :to_s)), nil))), s(:call, s(:lvar, :total), :count, s(:str, "1"))))