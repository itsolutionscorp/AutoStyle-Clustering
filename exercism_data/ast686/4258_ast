s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :count, s(:call, s(:lvar, :strand1), :length)), s(:lasgn, :strand1, s(:call, s(:call, s(:lvar, :strand1), :chars), :to_a)), s(:lasgn, :strand2, s(:call, s(:call, s(:lvar, :strand2), :chars), :to_a)), s(:lasgn, :differences, s(:lit, 0)), s(:lasgn, :length, s(:lit, 0)), s(:until, s(:call, s(:lvar, :length), :==, s(:lvar, :count)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :strand1), :[], s(:lvar, :length)), :!=, s(:call, s(:lvar, :strand2), :[], s(:lvar, :length))), s(:lasgn, :differences, s(:call, s(:lvar, :differences), :+, s(:lit, 1))), nil), s(:lasgn, :length, s(:call, s(:lvar, :length), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :differences))))