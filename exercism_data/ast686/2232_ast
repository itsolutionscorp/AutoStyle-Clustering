s(:block, s(:class, :Hamming, nil, s(:call, nil, :attr_reader, s(:lit, :source), s(:lit, :dest)), s(:defn, :compute, s(:args, :source, :dest), s(:iasgn, :@count, s(:lit, 0)), s(:iasgn, :@source, s(:lvar, :source)), s(:iasgn, :@dest, s(:lvar, :dest)), s(:if, s(:call, s(:call, s(:ivar, :@source), :length), :<, s(:call, s(:ivar, :@dest), :length)), s(:iasgn, :@lesser_length, s(:call, s(:ivar, :@source), :length)), s(:iasgn, :@lesser_length, s(:call, s(:ivar, :@dest), :length))), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:ivar, :@lesser_length), :-, s(:lit, 1))), s(:args, :x), s(:if, s(:call, s(:call, s(:ivar, :@source), :[], s(:lvar, :x)), :!=, s(:call, s(:ivar, :@dest), :[], s(:lvar, :x))), s(:iasgn, :@count, s(:call, s(:ivar, :@count), :+, s(:lit, 1))), nil)), s(:return, s(:ivar, :@count)))), s(:lasgn, :source, s(:str, "GAGCCTACTAACGGGAT")), s(:lasgn, :dest, s(:str, "CATCGTAATGACGGCCT")), s(:call, nil, :puts), s(:call, nil, :puts, s(:lvar, :source)), s(:call, nil, :puts, s(:lvar, :dest)), s(:lasgn, :distance, s(:call, s(:const, :Hamming), :compute, s(:lvar, :source), s(:lvar, :dest))), s(:call, nil, :puts, s(:dstr, "Hamming distance of the above strings is: ", s(:evstr, s(:lvar, :distance)))), s(:call, nil, :puts))