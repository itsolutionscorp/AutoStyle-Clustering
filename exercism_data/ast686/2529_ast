s(:class, :Hamming, nil, s(:defs, s(:const, :Hamming), :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :>, s(:call, s(:lvar, :strand2), :length)), s(:lasgn, :sequence_length, s(:call, s(:lvar, :strand2), :length)), s(:lasgn, :sequence_length, s(:call, s(:lvar, :strand1), :length))), s(:lasgn, :distance, s(:lit, 0)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :sequence_length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :strand1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand2), :[], s(:lvar, :i))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :distance))))