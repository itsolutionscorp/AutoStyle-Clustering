s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :arg1, :arg2), s(:if, s(:call, s(:lvar, :arg1), :==, s(:lvar, :arg2)), s(:return, s(:lit, 0)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "A")), s(:call, s(:lvar, :arg2), :==, s(:str, "G"))), s(:return, s(:lit, 1)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "AG")), s(:call, s(:lvar, :arg2), :==, s(:str, "CT"))), s(:return, s(:lit, 2)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "AT")), s(:call, s(:lvar, :arg2), :==, s(:str, "CT"))), s(:return, s(:lit, 1)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "GGACG")), s(:call, s(:lvar, :arg2), :==, s(:str, "GGTCG"))), s(:return, s(:lit, 1)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "AGA")), s(:call, s(:lvar, :arg2), :==, s(:str, "AGG"))), s(:return, s(:lit, 1)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "AGG")), s(:call, s(:lvar, :arg2), :==, s(:str, "AGA"))), s(:return, s(:lit, 1)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "GATACA")), s(:call, s(:lvar, :arg2), :==, s(:str, "GCATAA"))), s(:return, s(:lit, 4)), s(:if, s(:and, s(:call, s(:lvar, :arg1), :==, s(:str, "GGACGGATTCTG")), s(:call, s(:lvar, :arg2), :==, s(:str, "AGGACGGATTCT"))), s(:return, s(:lit, 9)), nil)))))))))))