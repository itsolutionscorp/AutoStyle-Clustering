s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :firstrand, :secondstrand), s(:if, s(:call, s(:call, s(:lvar, :firstrand), :length), :>, s(:call, s(:lvar, :secondstrand), :length)), s(:lasgn, :strandlength, s(:call, s(:lvar, :secondstrand), :length)), s(:lasgn, :strandlength, s(:call, s(:lvar, :firstrand), :length))), s(:lasgn, :hdistance, s(:lit, 0)), s(:lasgn, :i, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:lvar, :strandlength)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :firstrand), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :secondstrand), :[], s(:lvar, :i))), s(:lasgn, :hdistance, s(:call, s(:lvar, :hdistance), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :hdistance))))