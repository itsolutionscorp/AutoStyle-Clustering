s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :strand1, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :strand2, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:lasgn, :count, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :==, s(:call, s(:lvar, :strand2), :length)), s(:block, s(:lasgn, :small, s(:lvar, :strand1)), s(:lasgn, :big, s(:lvar, :strand2))), s(:block, s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :<, s(:call, s(:lvar, :strand2), :length)), s(:lasgn, :small, s(:lvar, :strand1)), s(:lasgn, :small, s(:lvar, :strand2))), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :>, s(:call, s(:lvar, :strand2), :length)), s(:lasgn, :big, s(:lvar, :strand1)), s(:lasgn, :big, s(:lvar, :strand2))))), s(:iter, s(:call, s(:lvar, :small), :each_with_index), s(:args, :ele, :ind), s(:if, s(:call, s(:call, s(:lvar, :small), :[], s(:lvar, :ind)), :==, s(:call, s(:lvar, :big), :[], s(:lvar, :ind))), s(:lvar, :count), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))))), s(:lvar, :count)))