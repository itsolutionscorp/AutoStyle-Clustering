s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :a, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :b, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:lasgn, :cntr, s(:call, s(:array, s(:call, s(:lvar, :a), :length), s(:call, s(:lvar, :b), :length)), :min)), s(:lasgn, :a, s(:call, s(:lvar, :a), :[], s(:dot2, s(:lit, 0), s(:call, s(:lvar, :cntr), :-, s(:lit, 1))))), s(:lasgn, :b, s(:call, s(:lvar, :b), :[], s(:dot2, s(:lit, 0), s(:call, s(:lvar, :cntr), :-, s(:lit, 1))))), s(:return, s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :cntr), :-, s(:lit, 1))), :inject, s(:lit, 0)), s(:args, :enum, :i), s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :i))), s(:call, s(:lvar, :enum), :+, s(:lit, 1)), s(:lvar, :enum))))))