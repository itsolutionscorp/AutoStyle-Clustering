s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :first_strand, :second_strand), s(:if, s(:or, s(:call, s(:lvar, :first_strand), :nil?), s(:call, s(:lvar, :second_strand), :nil?)), s(:call, nil, :raise, s(:str, "Both strand strings must be non-null")), nil), s(:lasgn, :distance, s(:lit, 0)), s(:lasgn, :first_strand_array, s(:call, s(:lvar, :first_strand), :split, s(:lit, //))), s(:lasgn, :second_strand_array, s(:call, s(:lvar, :second_strand), :split, s(:lit, //))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:array, s(:call, s(:lvar, :first_strand_array), :length), s(:call, s(:lvar, :second_strand_array), :length)), :min), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :first_strand_array), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :second_strand_array), :[], s(:lvar, :i))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:lvar, :distance)))