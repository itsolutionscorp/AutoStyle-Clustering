s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :s1, :s2), s(:lasgn, :s1_chars, s(:call, s(:lvar, :s1), :chars)), s(:lasgn, :s2_chars, s(:call, s(:lvar, :s2), :chars)), s(:lasgn, :hamming, s(:lit, 0)), s(:lasgn, :len, s(:if, s(:call, s(:call, s(:lvar, :s1_chars), :length), :>, s(:call, s(:lvar, :s2_chars), :length)), s(:call, s(:lvar, :s2_chars), :length), s(:call, s(:lvar, :s1_chars), :length))), s(:lasgn, :len, s(:call, s(:lvar, :len), :-, s(:lit, 1))), s(:for, s(:dot2, s(:lit, 0), s(:lvar, :len)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :s1_chars), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :s2_chars), :[], s(:lvar, :i))), s(:lasgn, :hamming, s(:call, s(:lvar, :hamming), :+, s(:lit, 1))), nil)), s(:lvar, :hamming)))