s(:block, s(:class, :Phrase, nil, s(:defn, :initialize, s(:args, :words), s(:iasgn, :@words, s(:lvar, :words)), s(:iasgn, :@words1, s(:call, s(:call, s(:call, s(:call, s(:call, s(:ivar, :@words), :gsub, s(:lit, /,/), s(:str, " ")), :gsub, s(:lit, /!!\&\@\$%\^&/), s(:str, "")), :gsub, s(:lit, /:/), s(:str, "")), :downcase), :gsub, s(:lit, /\./), s(:str, ""))), s(:iasgn, :@words2, s(:call, s(:ivar, :@words1), :split)), s(:ivar, :@words2)), s(:defn, :word_count, s(:args), s(:lasgn, :counts, s(:call, s(:const, :Hash), :new, s(:lit, 0))), s(:iter, s(:call, s(:ivar, :@words2), :each), s(:args, :word), s(:op_asgn1, s(:lvar, :counts), s(:arglist, s(:lvar, :word)), :+, s(:lit, 1))), s(:lvar, :counts))), s(:lasgn, :phrase, s(:call, s(:const, :Phrase), :new, s(:str, "how','much,wood,could,a,wood,chuck,chuck if a wood chuck could chuck wood"))))