s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :base1, s(:call, s(:lvar, :strand1), :split, s(:lit, //))), s(:lasgn, :base2, s(:call, s(:lvar, :strand2), :split, s(:lit, //))), s(:lasgn, :distance, s(:lit, 0)), s(:iter, s(:call, s(:call, s(:lvar, :base1), :count), :times), s(:args, :b), s(:if, s(:and, s(:call, s(:call, s(:lvar, :base1), :count), :==, s(:call, s(:lvar, :base2), :count)), s(:call, s(:call, s(:lvar, :base1), :[], s(:lvar, :b)), :!=, s(:call, s(:lvar, :base2), :[], s(:lvar, :b)))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :distance)))