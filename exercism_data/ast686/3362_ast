s(:defn, :compute, s(:args, :dna1, :dna2), s(:if, s(:call, s(:call, s(:lvar, :dna1), :size), :>, s(:call, s(:lvar, :dna2), :size)), s(:lasgn, :dna1, s(:call, s(:lvar, :dna1), :slice, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :dna2), :size)))), nil), s(:if, s(:call, s(:call, s(:lvar, :dna2), :size), :>, s(:call, s(:lvar, :dna1), :size)), s(:lasgn, :dna2, s(:call, s(:lvar, :dna2), :slice, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :dna1), :size)))), nil), s(:if, s(:and, s(:call, s(:lvar, :dna1), :==, s(:lvar, :dna2)), s(:call, s(:call, s(:lvar, :dna1), :size), :==, s(:lit, 1))), s(:return, s(:lit, 0)), nil), s(:if, s(:call, s(:call, s(:lvar, :dna1), :size), :==, s(:lit, 1)), s(:return, s(:lit, 1)), nil), s(:if, s(:call, s(:call, s(:lvar, :dna1), :[], s(:lit, 0)), :==, s(:call, s(:lvar, :dna2), :[], s(:lit, 0))), s(:return, s(:call, nil, :compute, s(:call, s(:lvar, :dna1), :[], s(:lit, 1..-1)), s(:call, s(:lvar, :dna2), :[], s(:lit, 1..-1)))), s(:return, s(:call, s(:lit, 1), :+, s(:call, nil, :compute, s(:call, s(:lvar, :dna1), :[], s(:lit, 1..-1)), s(:call, s(:lvar, :dna2), :[], s(:lit, 1..-1)))))))