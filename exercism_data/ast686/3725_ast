s(:class, :Hamming, nil, s(:defs, s(:const, :Hamming), :compute, s(:args, :strand1, :strand2), s(:lasgn, :strand1_array, s(:call, s(:const, :Array), :new)), s(:lasgn, :strand2_array, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :strand1), :each_char), s(:args, :i), s(:call, s(:lvar, :strand1_array), :push, s(:lvar, :i))), s(:iter, s(:call, s(:lvar, :strand2), :each_char), s(:args, :i), s(:call, s(:lvar, :strand2_array), :push, s(:lvar, :i))), s(:lasgn, :aggregate_array, s(:array, s(:lvar, :strand1_array), s(:lvar, :strand2_array))), s(:if, s(:and, s(:call, s(:call, s(:lvar, :strand1_array), :count), :==, s(:lit, 1)), s(:and, s(:call, s(:call, s(:lvar, :strand2_array), :count), :==, s(:lit, 1)), s(:call, s(:call, s(:lvar, :aggregate_array), :[], s(:lit, 0)), :==, s(:call, s(:lvar, :aggregate_array), :[], s(:lit, 1))))), s(:return, s(:lit, 0)), s(:if, s(:and, s(:call, s(:call, s(:lvar, :strand1_array), :count), :==, s(:lit, 1)), s(:and, s(:call, s(:call, s(:lvar, :strand2_array), :count), :==, s(:lit, 1)), s(:call, s(:call, s(:lvar, :aggregate_array), :[], s(:lit, 0)), :!=, s(:call, s(:lvar, :aggregate_array), :[], s(:lit, 1))))), s(:return, s(:lit, 1)), s(:block, s(:lasgn, :mutations, s(:call, s(:const, :Array), :new)), s(:if, s(:call, s(:call, s(:lvar, :strand1_array), :count), :!=, s(:call, s(:lvar, :strand2_array), :count)), s(:return, s(:lit, 0)), s(:block, s(:iter, s(:call, s(:call, s(:lvar, :aggregate_array), :transpose), :each), s(:args, :k, :v), s(:if, s(:call, s(:lvar, :k), :!=, s(:lvar, :v)), s(:call, s(:lvar, :mutations), :push, s(:lvar, :k)), nil)), s(:return, s(:call, s(:lvar, :mutations), :count)))))))))