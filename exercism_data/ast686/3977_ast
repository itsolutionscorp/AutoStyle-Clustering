s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :expected, :mutation), s(:lasgn, :counter, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :expected), :length), :>=, s(:call, s(:lvar, :mutation), :length)), s(:block, s(:lasgn, :longest, s(:lvar, :expected)), s(:lasgn, :shortest, s(:lvar, :mutation))), s(:block, s(:lasgn, :longest, s(:lvar, :mutation)), s(:lasgn, :shortest, s(:lvar, :expected)))), s(:iter, s(:call, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :shortest), :length)), :each), s(:args, :index), s(:if, s(:call, s(:call, s(:lvar, :shortest), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :longest), :[], s(:lvar, :index))), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :counter))))