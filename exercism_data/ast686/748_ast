s(:block, s(:call, nil, :require, s(:str, "set")), s(:class, :Phrase, nil, s(:cdecl, :IGNORE, s(:lit, /[.:!@$%^&]/)), s(:cdecl, :REPLACE, s(:lit, /\,/)), s(:cdecl, :SPACE, s(:str, " ")), s(:cdecl, :EMPTY, s(:str, "")), s(:defn, :initialize, s(:args, :phrase), s(:iasgn, :@words, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :phrase), :strip), :gsub, s(:const, :IGNORE), s(:const, :EMPTY)), :gsub, s(:const, :REPLACE), s(:const, :SPACE)), :downcase), :split)), s(:iasgn, :@word_set, s(:call, s(:const, :Set), :new, s(:ivar, :@words)))), s(:defn, :word_count, s(:args), s(:lasgn, :counted, s(:array)), s(:iter, s(:call, s(:ivar, :@word_set), :each), s(:args, :word), s(:call, s(:lvar, :counted), :<<, s(:call, s(:ivar, :@words), :count, s(:lvar, :word)))), s(:call, s(:const, :Hash), :[], s(:call, s(:ivar, :@word_set), :zip, s(:lvar, :counted))))))