s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :dna1, :dna2), s(:lasgn, :strand1, s(:call, s(:lvar, :dna1), :chars)), s(:lasgn, :strand2, s(:call, s(:lvar, :dna2), :chars)), s(:lasgn, :distance, s(:lit, 0)), s(:lasgn, :count, s(:lit, 0)), s(:while, s(:call, s(:lvar, :count), :<, s(:call, s(:lvar, :strand1), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :strand1), :[], s(:lvar, :count)), :==, s(:call, s(:lvar, :strand2), :[], s(:lvar, :count))), nil, s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1)))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1)))), true), s(:lvar, :distance)))