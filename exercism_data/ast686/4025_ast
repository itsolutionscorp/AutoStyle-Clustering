s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :first, :second), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :hamming_score, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :first), :length), :>, s(:call, s(:lvar, :second), :length)), s(:lasgn, :fewest, s(:call, s(:lvar, :second), :length)), s(:lasgn, :fewest, s(:call, s(:lvar, :first), :length))), s(:iter, s(:call, s(:lvar, :fewest), :times), s(:args), s(:block, s(:lasgn, :first_array, s(:call, s(:lvar, :first), :split, s(:str, ""))), s(:lasgn, :second_array, s(:call, s(:lvar, :second), :split, s(:str, ""))), s(:if, s(:call, s(:call, s(:lvar, :first_array), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :second_array), :[], s(:lvar, :i))), s(:lvar, :hamming_score), s(:lasgn, :hamming_score, s(:call, s(:lvar, :hamming_score), :+, s(:lit, 1)))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), s(:return, s(:lvar, :hamming_score))))