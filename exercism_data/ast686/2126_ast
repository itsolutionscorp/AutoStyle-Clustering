s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_1, :strand_2), s(:lasgn, :dissimilarity_count, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :strand_1), :length), :>, s(:call, s(:lvar, :strand_2), :length)), s(:lasgn, :smallest_string_length, s(:call, s(:lvar, :strand_2), :length)), s(:if, s(:call, s(:call, s(:lvar, :strand_1), :length), :<, s(:call, s(:lvar, :strand_2), :length)), s(:lasgn, :smallest_string_length, s(:call, s(:lvar, :strand_1), :length)), s(:lasgn, :smallest_string_length, s(:call, s(:lvar, :strand_1), :length)))), s(:iter, s(:call, s(:lvar, :smallest_string_length), :times), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :strand_1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand_2), :[], s(:lvar, :i))), s(:lasgn, :dissimilarity_count, s(:call, s(:lvar, :dissimilarity_count), :+, s(:lit, 1))), nil)), s(:lvar, :dissimilarity_count)))