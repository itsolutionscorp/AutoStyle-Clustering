s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :original, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :other, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:until, s(:call, s(:call, s(:lvar, :original), :size), :==, s(:call, s(:lvar, :other), :size)), s(:if, s(:call, s(:call, s(:lvar, :original), :size), :>, s(:call, s(:lvar, :other), :size)), s(:call, s(:lvar, :original), :pop), s(:if, s(:call, s(:call, s(:lvar, :other), :size), :>, s(:call, s(:lvar, :original), :size)), s(:call, s(:lvar, :other), :pop), nil)), true), s(:lasgn, :count, s(:lit, 0)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :original), :length), :-, s(:lit, 1))), :each), s(:args, :na), s(:if, s(:call, s(:call, s(:lvar, :original), :[], s(:lvar, :na)), :!=, s(:call, s(:lvar, :other), :[], s(:lvar, :na))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:lvar, :count))