s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :lists_as_pairs, s(:call, s(:call, s(:lvar, :a), :chars), :zip, s(:call, s(:lvar, :b), :chars))), s(:lasgn, :actual_pairs, s(:iter, s(:call, s(:lvar, :lists_as_pairs), :reject), s(:args, :pair), s(:call, s(:lvar, :pair), :include?, s(:nil)))), s(:lasgn, :nonidentical_pairs, s(:iter, s(:call, s(:lvar, :actual_pairs), :reject), s(:args, :pair), s(:call, s(:call, s(:lvar, :pair), :first), :==, s(:call, s(:lvar, :pair), :last)))), s(:lasgn, :distance, s(:call, s(:lvar, :nonidentical_pairs), :size)))