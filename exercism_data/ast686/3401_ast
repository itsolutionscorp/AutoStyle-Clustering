s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :short, s(:if, s(:call, s(:call, s(:lvar, :a), :length), :<=, s(:call, s(:lvar, :b), :length)), s(:lvar, :a), s(:lvar, :b))), s(:lasgn, :long, s(:if, s(:call, s(:lvar, :short), :==, s(:lvar, :a)), s(:lvar, :b), s(:lvar, :a))), s(:lasgn, :short, s(:call, s(:lvar, :short), :scan, s(:lit, /./))), s(:lasgn, :long, s(:call, s(:lvar, :long), :scan, s(:lit, /./))), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:iter, s(:call, s(:call, s(:lvar, :short), :zip, s(:lvar, :long)), :each), s(:args, :base1, :base2), s(:if, s(:call, s(:lvar, :base1), :!=, s(:lvar, :base2)), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :hamming_distance))))