s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :seq1, :seq2), s(:iasgn, :@count, s(:lit, 0)), s(:masgn, s(:array, s(:lasgn, :seq1), s(:lasgn, :seq2)), s(:array, s(:call, s(:lvar, :seq1), :upcase), s(:call, s(:lvar, :seq2), :upcase))), s(:lasgn, :min, s(:call, s(:array, s(:call, s(:lvar, :seq1), :length), s(:call, s(:lvar, :seq2), :length)), :min)), s(:if, s(:call, s(:lvar, :min), :>, s(:lit, 0)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :min), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:call, s(:call, s(:lvar, :seq1), :[], s(:lvar, :j)), :!=, s(:call, s(:lvar, :seq2), :[], s(:lvar, :j))), s(:iasgn, :@count, s(:call, s(:ivar, :@count), :+, s(:lit, 1))), nil)), nil), s(:return, s(:ivar, :@count))))