s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :strand1_array, s(:call, s(:call, s(:lvar, :strand1), :chars), :to_a)), s(:lasgn, :strand2_array, s(:call, s(:call, s(:lvar, :strand2), :chars), :to_a)), s(:lasgn, :distance, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :strand1_array), :length), :<=, s(:call, s(:lvar, :strand2_array), :length)), s(:lasgn, :length, s(:call, s(:lvar, :strand1_array), :length)), s(:lasgn, :length, s(:call, s(:lvar, :strand2_array), :length))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :strand1_array), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand2_array), :[], s(:lvar, :i))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :distance)))