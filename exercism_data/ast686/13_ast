s(:class, :Phrase, nil, s(:defn, :initialize, s(:args, :str), s(:iasgn, :@words, s(:lvar, :str))), s(:defn, :word_count, s(:args), s(:lasgn, :ans, s(:hash)), s(:lasgn, :arr, s(:call, s(:ivar, :@words), :scan, s(:lit, /\w+[']?\w+/))), s(:iter, s(:call, s(:call, s(:ivar, :@words), :scan, s(:lit, /[\d+]/)), :each), s(:args, :x), s(:call, s(:lvar, :arr), :<<, s(:lvar, :x))), s(:iter, s(:call, s(:lvar, :arr), :map!), s(:args, :word), s(:call, s(:lvar, :word), :downcase)), s(:iter, s(:call, s(:lvar, :arr), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:lvar, :word), :empty?), s(:next), nil), s(:attrasgn, s(:lvar, :ans), :[]=, s(:lvar, :word), s(:call, s(:lvar, :arr), :count, s(:lvar, :word))))), s(:return, s(:lvar, :ans))))