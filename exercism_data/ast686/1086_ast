s(:defn, :compute, s(:args, :dna1, :dna2), s(:lasgn, :min_length, s(:call, s(:array, s(:call, s(:call, s(:lvar, :dna1), :chars), :length), s(:call, s(:call, s(:lvar, :dna2), :chars), :length)), :min)), s(:lasgn, :dna1, s(:call, s(:call, s(:lvar, :dna1), :chars), :[], s(:lit, 0), s(:lvar, :min_length))), s(:lasgn, :dna2, s(:call, s(:call, s(:lvar, :dna2), :chars), :[], s(:lit, 0), s(:lvar, :min_length))), s(:lasgn, :comp_array, s(:call, s(:lvar, :dna1), :+, s(:lvar, :dna2))), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :comp_array), :each_index), s(:args, :i), s(:if, s(:and, s(:call, s(:lvar, :comp_array), :[], s(:call, s(:lvar, :i), :+, s(:lvar, :min_length))), s(:call, s(:call, s(:lvar, :comp_array), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :comp_array), :[], s(:call, s(:lvar, :i), :+, s(:lvar, :min_length))))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil)), s(:lvar, :hamming_distance))