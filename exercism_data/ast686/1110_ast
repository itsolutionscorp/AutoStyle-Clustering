s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_a, :strand_b), s(:lasgn, :difference_count, s(:lit, 0)), s(:lasgn, :strand_a_array, s(:call, s(:lvar, :strand_a), :split, s(:str, ""))), s(:lasgn, :strand_b_array, s(:call, s(:lvar, :strand_b), :split, s(:str, ""))), s(:lasgn, :smaller_array, s(:lvar, :strand_a_array)), s(:lasgn, :comparison_array, s(:lvar, :strand_b_array)), s(:if, s(:call, s(:call, s(:lvar, :strand_b_array), :size), :<, s(:call, s(:lvar, :strand_a_array), :size)), s(:block, s(:lasgn, :smaller_array, s(:lvar, :strand_b_array)), s(:lasgn, :comparison_array, s(:lvar, :strand_a_array))), nil), s(:lasgn, :iteration_count, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :smaller_array), :each), s(:args, :base), s(:block, s(:if, s(:call, s(:lvar, :base), :!=, s(:call, s(:lvar, :comparison_array), :[], s(:lvar, :iteration_count))), s(:lasgn, :difference_count, s(:call, s(:lvar, :difference_count), :+, s(:lit, 1))), nil), s(:lasgn, :iteration_count, s(:call, s(:lvar, :iteration_count), :+, s(:lit, 1))))), s(:lvar, :difference_count)))