s(:defn, :compute, s(:args, :strand_a, :strand_b), s(:lasgn, :diff, s(:lit, 0)), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :a, s(:call, s(:call, s(:lvar, :strand_a), :split, s(:str, "")), :map, s(:block_pass, s(:lit, :to_s)))), s(:lasgn, :b, s(:call, s(:call, s(:lvar, :strand_b), :split, s(:str, "")), :map, s(:block_pass, s(:lit, :to_s)))), s(:if, s(:call, s(:call, s(:lvar, :strand_a), :length), :>, s(:call, s(:lvar, :strand_b), :length)), s(:lasgn, :max, s(:call, s(:lvar, :strand_b), :length)), s(:lasgn, :max, s(:call, s(:lvar, :strand_a), :length))), s(:while, s(:call, s(:lvar, :count), :<, s(:lvar, :max)), s(:block, s(:if, s(:call, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :count)), :to_s), :!=, s(:call, s(:call, s(:lvar, :b), :[], s(:lvar, :count)), :to_s)), s(:lasgn, :diff, s(:call, s(:lvar, :diff), :+, s(:lit, 1))), nil), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :diff)))