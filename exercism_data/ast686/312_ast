s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :al, s(:call, s(:lvar, :a), :length)), s(:lasgn, :bl, s(:call, s(:lvar, :b), :length)), s(:if, s(:call, s(:lvar, :al), :>, s(:lvar, :bl)), s(:lasgn, :a, s(:call, s(:lvar, :a), :slice!, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :bl), :-, s(:lit, 1))))), s(:if, s(:call, s(:lvar, :al), :<, s(:lvar, :bl)), s(:lasgn, :b, s(:call, s(:lvar, :b), :slice!, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :al), :-, s(:lit, 1))))), nil)), s(:lasgn, :asplit, s(:call, s(:lvar, :a), :chars)), s(:lasgn, :bsplit, s(:call, s(:lvar, :b), :chars)), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :hammy, s(:iter, s(:call, s(:lvar, :asplit), :each_with_index), s(:args, :item, :index), s(:if, s(:call, s(:call, s(:lvar, :asplit), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :bsplit), :[], s(:lvar, :index))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil))), s(:return, s(:lvar, :count))))