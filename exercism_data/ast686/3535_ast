s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:lvar, :strand1), :==, s(:lvar, :strand2)), s(:return, s(:lit, 0)), nil), s(:lasgn, :strand_arr1, s(:call, s(:lvar, :strand1), :split, s(:str, ""))), s(:lasgn, :strand_arr2, s(:call, s(:lvar, :strand2), :split, s(:str, ""))), s(:lasgn, :differences, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :strand_arr1), :each_index), s(:args, :index), s(:block, s(:lasgn, :nucleotide1, s(:call, s(:lvar, :strand_arr1), :[], s(:lvar, :index))), s(:lasgn, :nucleotide2, s(:call, s(:lvar, :strand_arr2), :[], s(:lvar, :index))), s(:if, s(:and, s(:lvar, :nucleotide1), s(:lvar, :nucleotide2)), nil, s(:return, s(:lvar, :differences))), s(:if, s(:call, s(:lvar, :nucleotide2), :!=, s(:lvar, :nucleotide1)), s(:lasgn, :differences, s(:call, s(:lvar, :differences), :+, s(:lit, 1))), nil))), s(:lvar, :differences)))