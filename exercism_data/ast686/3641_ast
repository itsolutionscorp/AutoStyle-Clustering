s(:defn, :compute, s(:args, :string_a, :string_b), s(:masgn, s(:array, s(:lasgn, :up_string_a), s(:lasgn, :up_string_b)), s(:array, s(:call, s(:lvar, :string_a), :upcase), s(:call, s(:lvar, :string_b), :upcase))), s(:lasgn, :array_1, s(:call, s(:lvar, :up_string_a), :split, s(:lit, //))), s(:lasgn, :array_2, s(:call, s(:lvar, :up_string_b), :split, s(:lit, //))), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :index, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :array_1), :each), s(:args, :x), s(:block, s(:if, s(:call, s(:call, s(:lvar, :x), :eql?, s(:call, s(:lvar, :array_2), :[], s(:lvar, :index))), :!), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:if, s(:call, s(:call, s(:lvar, :index), :+, s(:lit, 1)), :==, s(:call, s(:lvar, :array_2), :length)), s(:break), nil), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1))))), s(:return, s(:lvar, :hamming_distance)))