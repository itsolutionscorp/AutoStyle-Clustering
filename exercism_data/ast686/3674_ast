s(:defn, :compute, s(:args, :strand_1, :strand_2), s(:lasgn, :strands_merged, s(:call, s(:call, s(:call, s(:lvar, :strand_1), :split, s(:lit, //)), :zip, s(:call, s(:lvar, :strand_2), :split, s(:lit, //))), :flatten)), s(:if, s(:call, s(:call, s(:lvar, :strands_merged), :[], s(:lit, -1)), :==, s(:nil)), s(:call, s(:lvar, :strands_merged), :pop, s(:lit, 2)), nil), s(:lasgn, :dna_pairs, s(:array)), s(:while, s(:call, s(:call, s(:lvar, :strands_merged), :size), :>, s(:lit, 0)), s(:call, s(:lvar, :dna_pairs), :<<, s(:call, s(:lvar, :strands_merged), :slice!, s(:lit, 0), s(:lit, 2))), true), s(:lasgn, :counter, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :dna_pairs), :select), s(:args, :nucleotide), s(:if, s(:call, s(:call, s(:lvar, :nucleotide), :[], s(:lit, 0)), :!=, s(:call, s(:lvar, :nucleotide), :[], s(:lit, 1))), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))), nil)), s(:call, nil, :p, s(:lvar, :counter)))