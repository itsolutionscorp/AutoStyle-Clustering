s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :sample1, :sample2), s(:lasgn, :result, s(:lit, 0)), s(:lasgn, :s1, s(:call, s(:lvar, :sample1), :chars)), s(:lasgn, :s2, s(:call, s(:lvar, :sample2), :chars)), s(:lasgn, :i, s(:call, s(:lvar, :s1), :length)), s(:if, s(:call, s(:call, s(:lvar, :s1), :length), :>, s(:call, s(:lvar, :s2), :length)), s(:lasgn, :i, s(:call, s(:lvar, :s2), :length)), nil), s(:until, s(:call, s(:lvar, :i), :==, s(:lit, 0)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :s1), :[], s(:call, s(:lvar, :i), :-, s(:lit, 1))), :!=, s(:call, s(:lvar, :s2), :[], s(:call, s(:lvar, :i), :-, s(:lit, 1)))), s(:lasgn, :result, s(:call, s(:lvar, :result), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :-, s(:lit, 1)))), true), s(:lvar, :result)))