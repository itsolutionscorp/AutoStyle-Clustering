s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :index, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :b), :length), :<, s(:call, s(:lvar, :a), :length)), s(:masgn, s(:array, s(:lasgn, :a), s(:lasgn, :b)), s(:array, s(:lvar, :b), s(:lvar, :a))), nil), s(:lasgn, :strandA, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :strandB, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:iter, s(:call, s(:lvar, :strandA), :each), s(:args, :nucleotide), s(:block, s(:if, s(:call, s(:lvar, :nucleotide), :!=, s(:call, s(:lvar, :strandB), :[], s(:lvar, :index))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1))))), s(:return, s(:lvar, :count))))