s(:defn, :compute, s(:args, :s, :t), s(:lasgn, :s, s(:call, s(:lvar, :s), :upcase)), s(:lasgn, :t, s(:call, s(:lvar, :t), :upcase)), s(:lasgn, :s_splitted, s(:call, s(:lvar, :s), :chars)), s(:lasgn, :t_splitted, s(:call, s(:lvar, :t), :chars)), s(:lasgn, :min_length, s(:call, s(:lvar, :s), :length)), s(:if, s(:call, s(:call, s(:lvar, :t), :length), :<, s(:call, s(:lvar, :s), :length)), s(:lasgn, :min_length, s(:call, s(:lvar, :t), :length)), nil), s(:lasgn, :count, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :min_length), :times), s(:args, :num), s(:if, s(:call, s(:call, s(:call, s(:lvar, :s_splitted), :[], s(:lvar, :num)), :eql?, s(:call, s(:lvar, :t_splitted), :[], s(:lvar, :num))), :!), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :count)))