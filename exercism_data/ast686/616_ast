s(:module, :Hamming, s(:call, nil, :extend, s(:self)), s(:defn, :compute, s(:args, :a, :b), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:masgn, s(:array, s(:lasgn, :a), s(:lasgn, :b)), s(:array, s(:lvar, :b), s(:lvar, :a))), nil), s(:lasgn, :a, s(:call, s(:lvar, :a), :chars)), s(:lasgn, :b, s(:call, s(:lvar, :b), :chars)), s(:lasgn, :c, s(:lit, 0)), s(:while, s(:call, s(:call, s(:lvar, :a), :length), :!=, s(:lit, 0)), s(:block, s(:lasgn, :ca, s(:call, s(:lvar, :a), :shift)), s(:lasgn, :cb, s(:call, s(:lvar, :b), :shift)), s(:if, s(:call, s(:lvar, :ca), :!=, s(:lvar, :cb)), s(:lasgn, :c, s(:call, s(:lvar, :c), :+, s(:lit, 1))), nil)), true), s(:lvar, :c)))