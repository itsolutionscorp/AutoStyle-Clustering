s(:defn, :compute, s(:args, :dna_1, :dna_2), s(:lasgn, :dna_1_array, s(:call, s(:lvar, :dna_1), :split, s(:lit, //))), s(:lasgn, :dna_2_array, s(:call, s(:lvar, :dna_2), :split, s(:lit, //))), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :x, s(:lit, 0)), s(:lasgn, :dna_1_array_count, s(:call, s(:lvar, :dna_1_array), :count)), s(:lasgn, :dna_2_array_count, s(:call, s(:lvar, :dna_2_array), :count)), s(:if, s(:call, s(:lvar, :dna_1_array_count), :<, s(:lvar, :dna_2_array_count)), s(:lasgn, :smaller_array, s(:lvar, :dna_1_array)), s(:block, s(:call, s(:lvar, :dna_1_array_count), :>, s(:lvar, :dna_2_array_count)), s(:lasgn, :smaller_array, s(:lvar, :dna_2_array)))), s(:iter, s(:call, s(:lvar, :smaller_array), :each), s(:args, :i), s(:block, s(:if, s(:call, s(:call, s(:lvar, :dna_1_array), :[], s(:lvar, :x)), :!=, s(:call, s(:lvar, :dna_2_array), :[], s(:lvar, :x))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:lasgn, :x, s(:call, s(:lvar, :x), :+, s(:lit, 1))))), s(:lvar, :hamming_distance))