s(:block, s(:defn, :hamming_distance, s(:args, :stranda, :strandb), s(:lasgn, :counter, s(:lit, 0)), s(:while, s(:call, s(:call, s(:lvar, :stranda), :length), :<, s(:call, s(:lvar, :strandb), :length)), s(:call, s(:lvar, :strandb), :chop!), true), s(:while, s(:call, s(:call, s(:lvar, :strandb), :length), :<, s(:call, s(:lvar, :stranda), :length)), s(:call, s(:lvar, :stranda), :chop!), true), s(:lasgn, :strand1, s(:call, s(:lvar, :stranda), :split, s(:lit, //))), s(:lasgn, :strand2, s(:call, s(:lvar, :strandb), :split, s(:lit, //))), s(:iter, s(:call, s(:lvar, :strand1), :zip, s(:lvar, :strand2)), s(:args, :x, :y), s(:if, s(:call, s(:lvar, :x), :!=, s(:lvar, :y)), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))), nil)), s(:call, nil, :puts, s(:dstr, "Hamming Distance is ", s(:evstr, s(:lvar, :counter)), s(:str, ".")))), s(:call, nil, :hamming_distance, s(:str, "A"), s(:str, "A")), s(:call, nil, :hamming_distance, s(:str, "A"), s(:str, "G")), s(:call, nil, :hamming_distance, s(:str, "AG"), s(:str, "CT")), s(:call, nil, :hamming_distance, s(:str, "AT"), s(:str, "CT")), s(:call, nil, :hamming_distance, s(:str, "GGACG"), s(:str, "GGTCG")), s(:call, nil, :hamming_distance, s(:str, "AGAGACTTA"), s(:str, "AAA")), s(:call, nil, :hamming_distance, s(:str, "AGG"), s(:str, "AAAACTGACCCACCCCAGG")), s(:call, nil, :hamming_distance, s(:str, "GATACA"), s(:str, "GCATAA")), s(:call, nil, :hamming_distance, s(:str, "GGACGGATTCTG"), s(:str, "AGGACGGATTCT")))