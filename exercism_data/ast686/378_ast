s(:class, :Hamming, nil, s(:call, nil, :attr_reader, s(:lit, :s1), s(:lit, :s2)), s(:defn, :compute, s(:args, :s1, :s2), s(:iasgn, :@count, s(:lit, 0)), s(:iasgn, :@s1, s(:lvar, :s1)), s(:iasgn, :@s2, s(:lvar, :s2)), s(:if, s(:call, s(:call, s(:ivar, :@s1), :length), :<, s(:call, s(:ivar, :@s2), :length)), s(:iasgn, :@shorter, s(:call, s(:ivar, :@s1), :length)), s(:iasgn, :@shorter, s(:call, s(:ivar, :@s2), :length))), s(:if, s(:call, s(:call, s(:ivar, :@s1), :length), :<, s(:call, s(:ivar, :@s2), :length)), s(:iasgn, :@shorter, s(:call, s(:ivar, :@s1), :length)), s(:iasgn, :@shorter, s(:call, s(:ivar, :@s2), :length))), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:ivar, :@shorter), :-, s(:lit, 1))), s(:args, :x), s(:if, s(:call, s(:call, s(:ivar, :@s1), :[], s(:lvar, :x)), :!=, s(:call, s(:ivar, :@s2), :[], s(:lvar, :x))), s(:iasgn, :@count, s(:call, s(:ivar, :@count), :+, s(:lit, 1))), nil)), s(:return, s(:ivar, :@count))))