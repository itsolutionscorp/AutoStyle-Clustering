s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :hamming, s(:lit, 0)), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :shortest_length, s(:if, s(:call, s(:call, s(:lvar, :a), :length), :<, s(:call, s(:lvar, :b), :length)), s(:call, s(:lvar, :a), :length), s(:call, s(:lvar, :b), :length))), s(:while, s(:call, s(:lvar, :i), :<=, s(:call, s(:lvar, :shortest_length), :-, s(:lit, 1))), s(:block, s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :i))), s(:lasgn, :hamming, s(:call, s(:lvar, :hamming), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:lvar, :hamming)))