s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :cad, :cad2), s(:lasgn, :retorno, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :cad), :length), :==, s(:call, s(:lvar, :cad2), :length)), s(:block, s(:lasgn, :i, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :cad), :length)), s(:block, s(:if, s(:call, s(:call, s(:call, s(:lvar, :cad), :[], s(:lvar, :i)), :eql?, s(:call, s(:lvar, :cad2), :[], s(:lvar, :i))), :!), s(:lasgn, :retorno, s(:call, s(:lvar, :retorno), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true)), nil), s(:return, s(:lvar, :retorno))))