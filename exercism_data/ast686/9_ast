s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :array_a, s(:call, s(:call, s(:lvar, :a), :each_char), :to_a)), s(:lasgn, :size_a, s(:call, s(:lvar, :array_a), :size)), s(:lasgn, :array_b, s(:call, s(:call, s(:lvar, :b), :each_char), :to_a)), s(:lasgn, :size_b, s(:call, s(:lvar, :array_b), :size)), s(:lasgn, :min, s(:if, s(:call, s(:lvar, :size_a), :>, s(:lvar, :size_b)), s(:lvar, :size_b), s(:lvar, :size_a))), s(:lasgn, :min, s(:call, s(:lvar, :min), :-, s(:lit, 1))), s(:lasgn, :hamming, s(:lit, 0)), s(:lasgn, :i, s(:lit, 0)), s(:until, s(:call, s(:lvar, :i), :>, s(:lvar, :min)), s(:if, s(:call, s(:call, s(:lvar, :array_a), :[], s(:lvar, :i)), :eql?, s(:call, s(:lvar, :array_b), :[], s(:lvar, :i))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))), s(:block, s(:lasgn, :hamming, s(:call, s(:lvar, :hamming), :+, s(:lit, 1))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), true), s(:lvar, :hamming))