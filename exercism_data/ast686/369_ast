s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :a, s(:call, s(:lvar, :strand1), :chars)), s(:lasgn, :b, s(:call, s(:lvar, :strand2), :chars)), s(:lasgn, :max, s(:if, s(:call, s(:call, s(:lvar, :a), :count), :<, s(:call, s(:lvar, :b), :count)), s(:call, s(:lvar, :a), :count), s(:call, s(:lvar, :b), :count))), s(:lasgn, :a, s(:call, s(:lvar, :a), :[], s(:lit, 0), s(:lvar, :max))), s(:lasgn, :b, s(:call, s(:lvar, :b), :[], s(:lit, 0), s(:lvar, :max))), s(:lasgn, :z, s(:call, s(:lvar, :a), :zip, s(:lvar, :b))), s(:iter, s(:call, s(:lvar, :z), :inject, s(:lit, 0)), s(:args, :ret, :e), s(:block, s(:if, s(:call, s(:call, s(:lvar, :e), :first), :!=, s(:call, s(:lvar, :e), :last)), s(:lasgn, :ret, s(:call, s(:lvar, :ret), :+, s(:lit, 1))), nil), s(:lvar, :ret)))))