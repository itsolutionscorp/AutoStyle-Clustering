s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :short_strand, s(:str, "")), s(:lasgn, :long_strand, s(:str, "")), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:if, s(:call, s(:lvar, :strand1), :==, s(:lvar, :strand2)), s(:return, s(:lvar, :hamming_distance)), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :<=, s(:call, s(:lvar, :strand2), :length)), s(:block, s(:lasgn, :short_strand, s(:lvar, :strand1)), s(:lasgn, :long_strand, s(:lvar, :strand2))), s(:block, s(:lasgn, :short_strand, s(:lvar, :strand2)), s(:lasgn, :long_strand, s(:lvar, :strand1))))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :short_strand), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :short_strand), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :long_strand), :[], s(:lvar, :i))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :hamming_distance)))