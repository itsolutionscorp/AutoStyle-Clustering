s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:lvar, :strand1), :==, s(:lvar, :strand2)), s(:return, s(:lit, 0)), nil), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :!=, s(:call, s(:lvar, :strand2), :length)), s(:block, s(:call, nil, :puts, s(:str, "Hamming cannot be computed on strands of different lengths")), s(:return, s(:lit, -1))), nil), s(:lasgn, :hamming, s(:lit, 0)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :strand1), :length), :-, s(:lit, 1))), :each), s(:args, :p), s(:if, s(:call, s(:call, s(:lvar, :strand1), :[], s(:lvar, :p)), :==, s(:call, s(:lvar, :strand2), :[], s(:lvar, :p))), nil, s(:lasgn, :hamming, s(:call, s(:lvar, :hamming), :+, s(:lit, 1))))), s(:lvar, :hamming)))