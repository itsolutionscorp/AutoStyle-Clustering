s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :count, s(:lit, 0)), s(:for, s(:dot3, s(:lit, 0), s(:if, s(:call, s(:call, s(:call, s(:lvar, :a), :chars), :length), :>, s(:call, s(:call, s(:lvar, :b), :chars), :length)), s(:call, s(:call, s(:lvar, :b), :chars), :length), s(:call, s(:call, s(:lvar, :a), :chars), :length))), s(:lasgn, :index), s(:if, s(:call, s(:call, s(:call, s(:lvar, :a), :chars), :[], s(:lvar, :index)), :!=, s(:call, s(:call, s(:lvar, :b), :chars), :[], s(:lvar, :index))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :count))))