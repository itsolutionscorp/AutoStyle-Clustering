s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :a, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :b, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:lasgn, :strandLen, s(:call, s(:lvar, :b), :length)), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :<, s(:call, s(:lvar, :b), :length)), s(:lasgn, :strandLen, s(:call, s(:lvar, :a), :length)), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :==, s(:call, s(:lvar, :b), :length)), s(:lasgn, :strandLen, s(:call, s(:lvar, :a), :length)), nil))), s(:iter, s(:call, s(:lvar, :strandLen), :times), s(:args, :x), s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :x)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :x))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:lvar, :count)))