s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :aa, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :ba, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:lasgn, :h, s(:lit, 0)), s(:lasgn, :index_range, s(:dot2, s(:lit, 0), s(:call, s(:if, s(:call, s(:call, s(:lvar, :aa), :length), :>, s(:call, s(:lvar, :ba), :length)), s(:call, s(:lvar, :ba), :length), s(:call, s(:lvar, :aa), :length)), :-, s(:lit, 1)))), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:if, s(:call, s(:call, s(:lvar, :aa), :length), :>, s(:call, s(:lvar, :ba), :length)), s(:call, s(:lvar, :ba), :length), s(:call, s(:lvar, :aa), :length)), :-, s(:lit, 1))), :each), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :ba), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :aa), :[], s(:lvar, :i))), s(:lasgn, :h, s(:call, s(:lvar, :h), :+, s(:lit, 1))), s(:next))), s(:return, s(:lvar, :h))))