s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :x, :y), s(:if, s(:call, s(:lvar, :x), :==, s(:lvar, :y)), s(:lit, 0), s(:block, s(:lasgn, :first, s(:call, s(:lvar, :x), :split, s(:str, ""))), s(:lasgn, :second, s(:call, s(:lvar, :y), :split, s(:str, ""))), s(:lasgn, :sequence_length, s(:call, s(:lvar, :first), :length)), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :discrepencies, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:lvar, :sequence_length)), s(:block, s(:call, nil, :puts, s(:call, s(:lvar, :first), :[], s(:lvar, :i))), s(:call, nil, :puts, s(:call, s(:lvar, :second), :[], s(:lvar, :i))), s(:if, s(:call, s(:call, s(:lvar, :first), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :second), :[], s(:lvar, :i))), nil, s(:lasgn, :discrepencies, s(:call, s(:lvar, :discrepencies), :+, s(:lit, 1)))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :discrepencies))))))