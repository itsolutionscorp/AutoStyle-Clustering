s(:module, :Hamming, s(:defn, :compute, s(:args, :a, :b), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:lasgn, :a, s(:call, s(:lvar, :a), :slice, s(:lit, 0), s(:call, s(:lvar, :b), :length))), nil), s(:if, s(:call, s(:call, s(:lvar, :b), :length), :>, s(:call, s(:lvar, :a), :length)), s(:lasgn, :b, s(:call, s(:lvar, :b), :slice, s(:lit, 0), s(:call, s(:lvar, :a), :length))), nil), s(:lasgn, :c, s(:call, s(:call, s(:lvar, :a), :chars), :zip, s(:call, s(:lvar, :b), :chars))), s(:call, s(:iter, s(:call, s(:lvar, :c), :map), s(:args, :d, :e), s(:if, s(:call, s(:lvar, :d), :==, s(:lvar, :e)), s(:lit, 0), s(:lit, 1))), :inject, s(:lit, :+))))