s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :dna_strand_1, :dna_strand_2), s(:lasgn, :dna_strand_1_array, s(:call, s(:lvar, :dna_strand_1), :split, s(:lit, //))), s(:lasgn, :dna_strand_2_array, s(:call, s(:lvar, :dna_strand_2), :split, s(:lit, //))), s(:lasgn, :length_shortest_strand, s(:call, s(:lvar, :dna_strand_1), :length)), s(:if, s(:call, s(:call, s(:lvar, :dna_strand_2), :length), :<, s(:call, s(:lvar, :dna_strand_1), :length)), s(:lasgn, :length_shortest_strand, s(:call, s(:lvar, :dna_strand_2), :length)), nil), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:lvar, :length_shortest_strand)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :dna_strand_1_array), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :dna_strand_2_array), :[], s(:lvar, :i))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:lvar, :hamming_distance)))