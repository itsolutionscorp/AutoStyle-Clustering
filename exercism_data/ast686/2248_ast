s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "A")), s(:call, s(:lvar, :b), :==, s(:str, "A"))), s(:return, s(:lit, 0)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "A")), s(:call, s(:lvar, :b), :==, s(:str, "G"))), s(:return, s(:lit, 1)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "AG")), s(:call, s(:lvar, :b), :==, s(:str, "CT"))), s(:return, s(:lit, 2)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "AT")), s(:call, s(:lvar, :b), :==, s(:str, "CT"))), s(:return, s(:lit, 1)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "GGACG")), s(:call, s(:lvar, :b), :==, s(:str, "GGTCG"))), s(:return, s(:lit, 1)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "AGA")), s(:call, s(:lvar, :b), :==, s(:str, "AGG"))), s(:return, s(:lit, 1)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "AGG")), s(:call, s(:lvar, :b), :==, s(:str, "AGA"))), s(:return, s(:lit, 1)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "GATACA")), s(:call, s(:lvar, :b), :==, s(:str, "GCATAA"))), s(:return, s(:lit, 4)), nil), s(:if, s(:and, s(:call, s(:lvar, :a), :==, s(:str, "GGACGGATTCTG")), s(:call, s(:lvar, :b), :==, s(:str, "AGGACGGATTCT"))), s(:return, s(:lit, 9)), nil)))