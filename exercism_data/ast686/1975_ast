s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :strand1_parts, s(:call, s(:lvar, :strand1), :split, s(:str, ""))), s(:lasgn, :strand2_parts, s(:call, s(:lvar, :strand2), :split, s(:str, ""))), s(:lasgn, :shortest_length, s(:if, s(:call, s(:call, s(:lvar, :strand1_parts), :length), :<, s(:call, s(:lvar, :strand2_parts), :length)), s(:call, s(:lvar, :strand1_parts), :length), s(:call, s(:lvar, :strand2_parts), :length))), s(:lasgn, :strand1_parts, s(:call, s(:lvar, :strand1_parts), :slice, s(:lit, 0), s(:lvar, :shortest_length))), s(:lasgn, :strand2_parts, s(:call, s(:lvar, :strand2_parts), :slice, s(:lit, 0), s(:lvar, :shortest_length))), s(:lasgn, :count, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :strand1_parts), :each_with_index), s(:args, :part_one, :i), s(:if, s(:call, s(:call, s(:lvar, :strand1_parts), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand2_parts), :[], s(:lvar, :i))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:lvar, :count))