s(:class, :Hamming, nil, s(:defs, s(:const, :Hamming), :compute, s(:args, :strandA, :strandB), s(:lasgn, :strandA, s(:call, s(:lvar, :strandA), :split, s(:lit, //))), s(:lasgn, :strandB, s(:call, s(:lvar, :strandB), :split, s(:lit, //))), s(:lasgn, :distance, s(:lit, 0)), s(:lasgn, :length, s(:call, s(:call, s(:array, s(:call, s(:lvar, :strandA), :length), s(:call, s(:lvar, :strandB), :length)), :min), :-, s(:lit, 1))), s(:for, s(:dot2, s(:lit, 0), s(:lvar, :length)), s(:lasgn, :locus), s(:block, s(:lasgn, :nucleotideA, s(:call, s(:lvar, :strandA), :[], s(:lvar, :locus))), s(:lasgn, :nucleotideB, s(:call, s(:lvar, :strandB), :[], s(:lvar, :locus))), s(:if, s(:call, s(:lvar, :nucleotideA), :==, s(:lvar, :nucleotideB)), nil, s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1)))))), s(:lvar, :distance)))