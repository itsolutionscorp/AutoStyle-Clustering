s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :one, :other), s(:lasgn, :strings_as_chars, s(:iter, s(:call, s(:array, s(:lvar, :one), s(:lvar, :other)), :map), s(:args, :string), s(:call, s(:call, s(:lvar, :string), :chars), :to_a))), s(:lasgn, :min_length, s(:call, s(:call, s(:lvar, :strings_as_chars), :map, s(:block_pass, s(:lit, :length))), :min)), s(:lasgn, :stripped_chars, s(:iter, s(:call, s(:lvar, :strings_as_chars), :map), s(:args, :chars), s(:call, s(:lvar, :chars), :first, s(:lvar, :min_length)))), s(:lasgn, :char_pairs, s(:call, s(:lvar, :stripped_chars), :transpose)), s(:call, s(:iter, s(:call, s(:lvar, :char_pairs), :map), s(:args, :one_char, :other_char), s(:call, s(:lvar, :one_char), :==, s(:lvar, :other_char))), :count, s(:false))))