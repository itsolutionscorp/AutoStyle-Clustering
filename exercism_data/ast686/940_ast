s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_1, :strand_2), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :strand_1), :size), :>, s(:call, s(:lvar, :strand_2), :size)), s(:lasgn, :strand_1, s(:call, s(:lvar, :strand_1), :[], s(:dot3, s(:lit, 0), s(:call, s(:lvar, :strand_2), :size)))), s(:lasgn, :strand_2, s(:call, s(:lvar, :strand_2), :[], s(:dot3, s(:lit, 0), s(:call, s(:lvar, :strand_1), :size))))), s(:iter, s(:call, s(:call, s(:call, s(:lvar, :strand_1), :chars), :zip, s(:call, s(:lvar, :strand_2), :chars)), :each), s(:args, :strand_1_char, :strand_2_char), s(:if, s(:call, s(:lvar, :strand_1_char), :!=, s(:lvar, :strand_2_char)), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil)), s(:lvar, :hamming_distance)))