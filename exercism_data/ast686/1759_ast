s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :origin_strand, :other_strand), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :counts, s(:lit, 0)), s(:lasgn, :other_strand_arr, s(:call, s(:lvar, :other_strand), :chars)), s(:iter, s(:call, s(:call, s(:lvar, :origin_strand), :chars), :each), s(:args, :x), s(:block, s(:if, s(:call, s(:call, s(:lvar, :other_strand_arr), :[], s(:lvar, :i)), :nil?), s(:break), s(:if, s(:call, s(:call, s(:lvar, :other_strand_arr), :[], s(:lvar, :i)), :!=, s(:lvar, :x)), s(:lasgn, :counts, s(:call, s(:lvar, :counts), :+, s(:lit, 1))), nil)), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))))), s(:lvar, :counts)))