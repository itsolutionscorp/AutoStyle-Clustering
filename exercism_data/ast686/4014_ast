s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :sequence_1, :sequence_2), s(:lasgn, :array1, s(:call, s(:lvar, :sequence_1), :split, s(:lit, //))), s(:lasgn, :array2, s(:call, s(:lvar, :sequence_2), :split, s(:lit, //))), s(:lasgn, :differences, s(:lit, 0)), s(:lasgn, :counter, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :array1), :length), :==, s(:call, s(:lvar, :array2), :length)), nil, s(:call, s(:lvar, :array1), :pop)), s(:iter, s(:call, s(:lvar, :array1), :each), s(:args, :i), s(:block, s(:if, s(:call, s(:lvar, :i), :==, s(:call, s(:lvar, :array2), :[], s(:lvar, :counter))), nil, s(:lasgn, :differences, s(:call, s(:lvar, :differences), :+, s(:lit, 1)))), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))))), s(:lvar, :differences)))