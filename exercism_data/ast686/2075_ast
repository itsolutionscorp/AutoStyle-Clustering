s(:defn, :compute, s(:args, :a, :b), s(:if, s(:call, s(:lvar, :a), :==, s(:lvar, :b)), s(:return, s(:lit, 0)), s(:block, s(:lasgn, :a_split, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :array1, s(:array)), s(:for, s(:lvar, :a_split), s(:lasgn, :x), s(:call, s(:lvar, :array1), :<<, s(:lvar, :x))), s(:lasgn, :b_split, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:lasgn, :array2, s(:array)), s(:for, s(:lvar, :b_split), s(:lasgn, :x), s(:call, s(:lvar, :array2), :<<, s(:lvar, :x))), s(:lasgn, :counter, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:iter, s(:call, s(:lvar, :array2), :each_index), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :array1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :array2), :[], s(:lvar, :i))), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))), nil)), s(:iter, s(:call, s(:lvar, :array1), :each_index), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :array1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :array2), :[], s(:lvar, :i))), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))), nil))), s(:return, s(:lvar, :counter)))))