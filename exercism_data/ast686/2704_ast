s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_a, :strand_B), s(:if, s(:call, s(:lvar, :strand_a), :eql?, s(:lvar, :strand_B)), s(:return, s(:lit, 0)), nil), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :checks_to_do, s(:if, s(:call, s(:call, s(:lvar, :strand_a), :length), :<, s(:call, s(:lvar, :strand_B), :length)), s(:call, s(:lvar, :strand_a), :length), s(:call, s(:lvar, :strand_B), :length))), s(:iter, s(:call, s(:lvar, :checks_to_do), :times), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :strand_a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand_B), :[], s(:lvar, :i))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:lvar, :count)))