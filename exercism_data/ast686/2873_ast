s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :index, s(:lit, 0)), s(:lasgn, :hamming_dist, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:while, s(:call, s(:lvar, :index), :<, s(:call, s(:lvar, :a), :length)), s(:block, s(:if, s(:and, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :index))), s(:call, s(:call, s(:lvar, :b), :[], s(:lvar, :index)), :!=, s(:nil))), s(:lasgn, :hamming_dist, s(:call, s(:lvar, :hamming_dist), :+, s(:lit, 1))), nil), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1)))), true), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :<, s(:call, s(:lvar, :b), :length)), s(:while, s(:call, s(:lvar, :index), :<, s(:call, s(:lvar, :b), :length)), s(:block, s(:if, s(:and, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :index))), s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :index)), :!=, s(:nil))), s(:lasgn, :hamming_dist, s(:call, s(:lvar, :hamming_dist), :+, s(:lit, 1))), nil), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1)))), true), nil)), s(:lvar, :hamming_dist))