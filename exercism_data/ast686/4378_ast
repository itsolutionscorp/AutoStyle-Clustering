s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :one, :two), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :length, s(:if, s(:call, s(:call, s(:lvar, :one), :length), :>, s(:call, s(:lvar, :two), :length)), s(:call, s(:lvar, :one), :length), s(:call, s(:lvar, :two), :length))), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:lvar, :length)), :each), s(:args, :i), s(:block, s(:if, s(:or, s(:call, s(:call, s(:lvar, :one), :[], s(:lvar, :i)), :==, s(:nil)), s(:call, s(:call, s(:lvar, :two), :[], s(:lvar, :i)), :==, s(:nil))), s(:break), nil), s(:if, s(:call, s(:call, s(:lvar, :one), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :two), :[], s(:lvar, :i))), nil, s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1)))))), s(:return, s(:lvar, :count))))