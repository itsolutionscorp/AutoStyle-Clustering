s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :x, :y), s(:lasgn, :mismatch, s(:lit, 0)), s(:if, s(:call, s(:lvar, :x), :!=, s(:lvar, :y)), s(:if, s(:call, s(:call, s(:lvar, :x), :length), :==, s(:call, s(:lvar, :y), :length)), s(:block, s(:lasgn, :xArray, s(:call, s(:lvar, :x), :split, s(:str, ""))), s(:lasgn, :yArray, s(:call, s(:lvar, :y), :split, s(:str, ""))), s(:lasgn, :c, s(:lit, 0)), s(:while, s(:call, s(:lvar, :c), :<, s(:call, s(:lvar, :x), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :xArray), :[], s(:lvar, :c)), :!=, s(:call, s(:lvar, :yArray), :[], s(:lvar, :c))), s(:lasgn, :mismatch, s(:call, s(:lvar, :mismatch), :+, s(:lit, 1))), nil), s(:lasgn, :c, s(:call, s(:lvar, :c), :+, s(:lit, 1)))), true)), s(:block, s(:call, nil, :puts, s(:str, "Error! String length mismatch!")), s(:return, s(:lit, 1)))), nil), s(:call, nil, :puts, s(:lvar, :mismatch)), s(:return, s(:lvar, :mismatch))))