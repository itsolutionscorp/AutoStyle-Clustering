s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :alpha, :beta), s(:lasgn, :zeta, s(:if, s(:call, s(:call, s(:lvar, :alpha), :length), :<, s(:call, s(:lvar, :beta), :length)), s(:lvar, :alpha), s(:lvar, :beta))), s(:lasgn, :diff, s(:iter, s(:call, s(:call, s(:lit, 0), :upto, s(:call, s(:call, s(:lvar, :zeta), :length), :-, s(:lit, 1))), :map), s(:args, :index), s(:if, s(:call, s(:call, s(:lvar, :alpha), :[], s(:lvar, :index)), :==, s(:call, s(:lvar, :beta), :[], s(:lvar, :index))), s(:lit, 0), s(:lit, 1)))), s(:call, s(:lvar, :diff), :inject, s(:lit, 0), s(:lit, :+))))