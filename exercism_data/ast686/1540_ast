s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :distance, s(:lit, 0)), s(:if, s(:call, s(:lvar, :strand1), :==, s(:lvar, :strand2)), s(:return, s(:lvar, :distance)), nil), s(:lasgn, :length_to_slice, s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :>, s(:call, s(:lvar, :strand2), :length)), s(:call, s(:lvar, :strand2), :length), s(:call, s(:lvar, :strand1), :length))), s(:lasgn, :strand1, s(:call, s(:lvar, :strand1), :[], s(:lit, 0), s(:lvar, :length_to_slice))), s(:lasgn, :strand2, s(:call, s(:lvar, :strand2), :[], s(:lit, 0), s(:lvar, :length_to_slice))), s(:iter, s(:call, s(:call, s(:lvar, :strand1), :chars), :each_with_index), s(:args, :base, :i), s(:if, s(:call, s(:lvar, :base), :!=, s(:call, s(:lvar, :strand2), :[], s(:lvar, :i))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :distance))))