s(:defn, :Hamming, s(:args, :string_a, :string_b), s(:lasgn, :distance, s(:lit, 0)), s(:if, s(:or, s(:call, s(:call, s(:lvar, :string_a), :length), :<, s(:call, s(:lvar, :string_b), :length)), s(:call, s(:call, s(:lvar, :string_a), :length), :==, s(:call, s(:lvar, :string_b), :length))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :string_a), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :string_a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :string_b), :[], s(:lvar, :i))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :string_b), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :string_a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :string_b), :[], s(:lvar, :i))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil))), s(:lvar, :distance))