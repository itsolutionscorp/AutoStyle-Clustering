s(:module, :Hamming, s(:defs, s(:const, :Hamming), :compute, s(:args, :a, :b, s(:lasgn, :c, s(:lit, 0))), s(:if, s(:or, s(:call, s(:call, s(:lvar, :a), :length), :==, s(:lit, 0)), s(:call, s(:call, s(:lvar, :b), :length), :==, s(:lit, 0))), s(:return, s(:lvar, :c)), nil), s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lit, 0)), :==, s(:call, s(:lvar, :b), :[], s(:lit, 0))), s(:return, s(:call, nil, :compute, s(:call, s(:lvar, :a), :[], s(:lit, 1..-1)), s(:call, s(:lvar, :b), :[], s(:lit, 1..-1)), s(:lvar, :c))), nil), s(:return, s(:call, nil, :compute, s(:call, s(:lvar, :a), :[], s(:lit, 1..-1)), s(:call, s(:lvar, :b), :[], s(:lit, 1..-1)), s(:call, s(:lvar, :c), :+, s(:lit, 1))))))