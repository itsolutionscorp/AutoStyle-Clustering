s(:class, :Phrase, nil, s(:defn, :initialize, s(:args, :subPhrase), s(:iasgn, :@words, s(:call, s(:lvar, :subPhrase), :split, s(:lit, /[\s,]+/))), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:ivar, :@words), :length), :-, s(:lit, 1))), :each), s(:args, :i), s(:attrasgn, s(:ivar, :@words), :[]=, s(:lvar, :i), s(:call, s(:call, s(:call, s(:ivar, :@words), :[], s(:lvar, :i)), :downcase), :gsub, s(:lit, /[^a-z0-9'\s]/i), s(:str, "")))), s(:iter, s(:call, s(:ivar, :@words), :delete_if), s(:args, :content), s(:call, s(:lvar, :content), :==, s(:str, "")))), s(:defn, :word_count, s(:args), s(:lasgn, :wordCount, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:ivar, :@words), :each), s(:args, :w), s(:if, s(:call, s(:call, s(:lvar, :wordCount), :[], s(:lvar, :w)), :nil?), s(:attrasgn, s(:lvar, :wordCount), :[]=, s(:lvar, :w), s(:lit, 1)), s(:attrasgn, s(:lvar, :wordCount), :[]=, s(:lvar, :w), s(:call, s(:call, s(:lvar, :wordCount), :[], s(:lvar, :w)), :+, s(:lit, 1))))), s(:return, s(:lvar, :wordCount))))