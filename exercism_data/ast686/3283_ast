s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :inputA, :inputB), s(:lasgn, :difference_counter, s(:lit, 0)), s(:lasgn, :inputA, s(:call, s(:lvar, :inputA), :slice, s(:lit, 0), s(:call, s(:lvar, :inputB), :length))), s(:lasgn, :inputA_array, s(:call, s(:lvar, :inputA), :chars)), s(:lasgn, :inputB_array, s(:call, s(:lvar, :inputB), :chars)), s(:iter, s(:call, s(:lvar, :inputA_array), :each_index), s(:args, :index_num), s(:if, s(:call, s(:call, s(:lvar, :inputA_array), :[], s(:lvar, :index_num)), :!=, s(:call, s(:lvar, :inputB_array), :[], s(:lvar, :index_num))), s(:lasgn, :difference_counter, s(:call, s(:lvar, :difference_counter), :+, s(:lit, 1))), nil)), s(:lvar, :difference_counter)))