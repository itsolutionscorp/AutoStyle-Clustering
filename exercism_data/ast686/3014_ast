s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :joined_strings, s(:array, s(:lvar, :a), s(:lvar, :b))), s(:lasgn, :length, s(:call, s(:iter, s(:call, s(:lvar, :joined_strings), :min), s(:args, :a, :b), s(:call, s(:call, s(:lvar, :a), :length), :<=>, s(:call, s(:lvar, :b), :length))), :length)), s(:lasgn, :array_a, s(:call, s(:call, s(:lvar, :a), :chars), :take, s(:lvar, :length))), s(:lasgn, :array_b, s(:call, s(:call, s(:lvar, :b), :chars), :take, s(:lvar, :length))), s(:lasgn, :array_c, s(:call, s(:lvar, :array_a), :zip, s(:lvar, :array_b))), s(:lasgn, :array_d, s(:iter, s(:call, s(:lvar, :array_c), :each), s(:args, :pair), s(:call, s(:lvar, :pair), :uniq!))), s(:lasgn, :array_e, s(:iter, s(:call, s(:lvar, :array_d), :map), s(:args, :x), s(:call, s(:lvar, :x), :count))), s(:iter, s(:call, s(:lvar, :array_e), :delete_if), s(:args, :i), s(:call, s(:lvar, :i), :<, s(:lit, 2))), s(:call, s(:lvar, :array_e), :count)))