s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :errorcount, s(:lit, 0)), s(:lasgn, :testlength, s(:lit, 0)), s(:lasgn, :testlength, s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:call, s(:lvar, :b), :length), s(:call, s(:lvar, :a), :length))), s(:iter, s(:call, s(:call, s(:lvar, :testlength), :times), :each), s(:args, :index), s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :index))), s(:lasgn, :errorcount, s(:call, s(:lvar, :errorcount), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :errorcount))))