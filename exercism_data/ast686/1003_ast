s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :strand1, s(:call, s(:lvar, :a), :split, s(:str, ""))), s(:lasgn, :strand2, s(:call, s(:lvar, :b), :split, s(:str, ""))), s(:lasgn, :shortest_strand, s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :>, s(:call, s(:lvar, :strand2), :length)), s(:lvar, :strand2), s(:lvar, :strand1))), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :count, s(:lit, 0)), s(:while, s(:call, s(:lvar, :count), :<, s(:call, s(:lvar, :shortest_strand), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :strand1), :[], s(:lvar, :count)), :!=, s(:call, s(:lvar, :strand2), :[], s(:lvar, :count))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1)))), true), s(:call, nil, :puts, s(:dstr, "The hamming distance of these two DNA strands is: ", s(:evstr, s(:lvar, :hamming_distance)))), s(:return, s(:lvar, :hamming_distance))))