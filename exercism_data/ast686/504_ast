s(:class, :Phrase, nil, s(:call, nil, :attr_accessor, s(:lit, :new)), s(:defn, :initialize, s(:args, s(:lasgn, :new, s(:str, ""))), s(:iasgn, :@new, s(:lvar, :new))), s(:defn, :word_count, s(:args), s(:lasgn, :newWord, s(:call, s(:call, s(:ivar, :@new), :downcase), :gsub, s(:lit, /[^a-z0-9' ]/), s(:str, " "))), s(:lasgn, :tab, s(:call, s(:lvar, :newWord), :split)), s(:lasgn, :tabOfWords, s(:array)), s(:lasgn, :countWords, s(:hash)), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:call, s(:lvar, :tab), :size), :-, s(:lit, 1))), s(:args, :element), s(:if, s(:call, s(:call, s(:lvar, :tabOfWords), :include?, s(:call, s(:lvar, :tab), :[], s(:lvar, :element))), :!), s(:call, s(:lvar, :tabOfWords), :<<, s(:call, s(:lvar, :tab), :[], s(:lvar, :element))), nil)), s(:for, s(:lvar, :tabOfWords), s(:lasgn, :word), s(:block, s(:lasgn, :num, s(:call, s(:lvar, :tab), :count, s(:lvar, :word))), s(:attrasgn, s(:lvar, :countWords), :[]=, s(:lvar, :word), s(:lvar, :num)))), s(:lvar, :countWords)))