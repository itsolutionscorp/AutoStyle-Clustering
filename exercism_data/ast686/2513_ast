s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :dna1, :dna2), s(:call, s(:lvar, :dna1), :upcase!), s(:call, s(:lvar, :dna2), :upcase!), s(:lasgn, :length, s(:if, s(:call, s(:call, s(:lvar, :dna1), :length), :<=, s(:call, s(:lvar, :dna2), :length)), s(:call, s(:lvar, :dna1), :length), s(:call, s(:lvar, :dna2), :length))), s(:lasgn, :distance, s(:lit, 0)), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:lvar, :length), :-, s(:lit, 1))), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :dna1), :slice, s(:lvar, :i), s(:lit, 1)), :!=, s(:call, s(:lvar, :dna2), :slice, s(:lvar, :i), s(:lit, 1))), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :distance))))