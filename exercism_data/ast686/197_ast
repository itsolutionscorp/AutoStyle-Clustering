s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :"*strands"), s(:lasgn, :smallest_strand_length, s(:call, s(:call, s(:call, s(:lvar, :strands), :min), :size), :to_i)), s(:iter, s(:call, s(:lvar, :strands), :map!), s(:args, :strand), s(:call, s(:call, s(:lvar, :strand), :split, s(:str, "")), :slice, s(:dot2, s(:lit, 0), s(:lvar, :smallest_strand_length)))), s(:lasgn, :zipped_strands, s(:call, s(:call, s(:lvar, :strands), :[], s(:lit, 0)), :zip, s(:call, s(:lvar, :strands), :[], s(:lit, 1)))), s(:iter, s(:call, s(:lvar, :zipped_strands), :delete_if), s(:args, :strand), s(:or, s(:call, s(:call, s(:lvar, :strand), :[], s(:lit, 0)), :==, s(:call, s(:lvar, :strand), :[], s(:lit, 1))), s(:call, s(:lvar, :strand), :include?, s(:nil)))), s(:call, s(:lvar, :zipped_strands), :size)))