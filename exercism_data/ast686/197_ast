s(:class, :Phrase, nil, s(:defn, :initialize, s(:args, :word), s(:iasgn, :@word, s(:lvar, :word))), s(:defn, :word_count, s(:args), s(:lasgn, :result, s(:call, s(:const, :Hash), :new, s(:lit, 0))), s(:if, s(:call, s(:ivar, :@word), :include?, s(:str, " ")), s(:block, s(:call, s(:ivar, :@word), :gsub!, s(:lit, /[^\w\s']/), s(:str, "")), s(:iter, s(:call, s(:call, s(:call, s(:ivar, :@word), :downcase), :split, s(:str, " ")), :each), s(:args, :words), s(:op_asgn1, s(:lvar, :result), s(:arglist, s(:lvar, :words)), :+, s(:lit, 1))), s(:call, nil, :p, s(:lvar, :result))), s(:block, s(:call, s(:ivar, :@word), :gsub!, s(:lit, /[^\w\s',]/), s(:str, "")), s(:iter, s(:call, s(:call, s(:call, s(:ivar, :@word), :downcase), :split, s(:str, ",")), :each), s(:args, :words), s(:op_asgn1, s(:lvar, :result), s(:arglist, s(:lvar, :words)), :+, s(:lit, 1))), s(:call, nil, :p, s(:lvar, :result))))))