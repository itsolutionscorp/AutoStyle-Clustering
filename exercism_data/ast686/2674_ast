s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_a, :strand_b), s(:if, s(:call, s(:lvar, :strand_a), :eql?, s(:lvar, :strand_b)), s(:return, s(:lit, 0)), nil), s(:lasgn, :min, s(:if, s(:call, s(:call, s(:lvar, :strand_a), :length), :<, s(:call, s(:lvar, :strand_b), :length)), s(:lvar, :strand_a), s(:lvar, :strand_b))), s(:lasgn, :count, s(:lit, 0)), s(:for, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :min), :length)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :strand_a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand_b), :[], s(:lvar, :i))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :count))))