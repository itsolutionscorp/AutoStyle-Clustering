s(:defn, :compute, s(:args, :firstStrand, :secondStrand), s(:lasgn, :hammingDistance, s(:lit, 0)), s(:lasgn, :lengthMinStrand, s(:lit, 0)), s(:lasgn, :counter, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :firstStrand), :length), :<, s(:call, s(:lvar, :secondStrand), :length)), s(:lasgn, :lengthMinStrand, s(:call, s(:lvar, :firstStrand), :length)), s(:lasgn, :lengthMinStrand, s(:call, s(:lvar, :secondStrand), :length))), s(:while, s(:call, s(:lvar, :counter), :<, s(:lvar, :lengthMinStrand)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :firstStrand), :[], s(:lvar, :counter)), :!=, s(:call, s(:lvar, :secondStrand), :[], s(:lvar, :counter))), s(:lasgn, :hammingDistance, s(:call, s(:lvar, :hammingDistance), :+, s(:lit, 1))), nil), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :hammingDistance)))