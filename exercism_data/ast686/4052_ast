s(:module, :Hamming, s(:defn, :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:lvar, :strand1), :==, s(:lvar, :strand2)), s(:return, s(:lit, 0)), nil), s(:lasgn, :sequence1, s(:call, s(:lvar, :strand1), :split, s(:lit, //))), s(:lasgn, :sequence2, s(:call, s(:lvar, :strand2), :split, s(:lit, //))), s(:if, s(:call, s(:call, s(:lvar, :sequence2), :length), :<, s(:call, s(:lvar, :sequence1), :length)), s(:masgn, s(:array, s(:lasgn, :sequence1), s(:lasgn, :sequence2)), s(:array, s(:lvar, :sequence2), s(:lvar, :sequence1))), nil), s(:lasgn, :pairs, s(:call, s(:lvar, :sequence1), :zip, s(:lvar, :sequence2))), s(:iter, s(:call, s(:lvar, :pairs), :count), s(:args, :s1, :s2), s(:call, s(:lvar, :s1), :!=, s(:lvar, :s2)))))