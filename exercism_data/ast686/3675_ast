s(:defn, :hamming, s(:args, :strand_1, :strand_2), s(:lasgn, :strand_1_arry, s(:call, s(:lvar, :strand_1), :split, s(:str, ""))), s(:lasgn, :strand_2_arry, s(:call, s(:lvar, :strand_2), :split, s(:str, ""))), s(:if, s(:and, s(:call, s(:call, s(:lvar, :strand_1), :length), :==, s(:call, s(:lvar, :strand_2), :length)), s(:call, s(:lvar, :strand_1), :!=, s(:lvar, :strand_2))), s(:block, s(:lasgn, :hamm, s(:array)), s(:lasgn, :hamm, s(:call, s(:lvar, :strand_1_arry), :-, s(:lvar, :strand_2_arry))), s(:if, s(:call, s(:call, s(:lvar, :strand_1_arry), :-, s(:lvar, :strand_2_arry)), :==, s(:lvar, :strand_1_arry)), s(:call, s(:lvar, :strand_1), :length), s(:call, s(:lvar, :hamm), :length))), s(:if, s(:call, s(:call, s(:call, s(:lvar, :strand_1), :length), :-, s(:call, s(:lvar, :strand_2), :length)), :>=, s(:lit, 0)), s(:block, s(:lasgn, :pop_diff, s(:call, s(:call, s(:lvar, :strand_1), :length), :-, s(:call, s(:lvar, :strand_2), :length))), s(:call, s(:lvar, :strand_1_arry), :pop, s(:lvar, :pop_diff)), s(:lasgn, :hamm, s(:call, s(:lvar, :strand_1_arry), :-, s(:lvar, :strand_2_arry))), s(:call, s(:lvar, :hamm), :length)), s(:if, s(:call, s(:call, s(:call, s(:lvar, :strand_2), :length), :-, s(:call, s(:lvar, :strand_1), :length)), :>=, s(:lit, 0)), s(:block, s(:lasgn, :pop_diff, s(:call, s(:call, s(:lvar, :strand_2), :length), :-, s(:call, s(:lvar, :strand_1), :length))), s(:call, s(:lvar, :strand_2_arry), :pop, s(:lvar, :pop_diff)), s(:lasgn, :hamm, s(:call, s(:lvar, :strand_2_arry), :-, s(:lvar, :strand_1_arry))), s(:call, s(:lvar, :hamm), :length)), nil))))