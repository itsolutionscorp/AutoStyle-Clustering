s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :chain1, :chain2), s(:lasgn, :hamming, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :chain1), :length), :>, s(:call, s(:lvar, :chain2), :length)), s(:lasgn, :chain1, s(:call, s(:lvar, :chain1), :[], s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :chain2), :length), :-, s(:lit, 1))))), s(:if, s(:call, s(:call, s(:lvar, :chain1), :length), :<, s(:call, s(:lvar, :chain2), :length)), s(:lasgn, :chain2, s(:call, s(:lvar, :chain2), :[], s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :chain1), :length), :-, s(:lit, 1))))), nil)), s(:iter, s(:call, s(:call, s(:lvar, :chain1), :split, s(:str, "")), :each_with_index), s(:args, :char, :i), s(:if, s(:and, s(:call, s(:lvar, :char), :!=, s(:call, s(:lvar, :chain2), :[], s(:lvar, :i))), s(:call, s(:call, s(:lvar, :chain2), :[], s(:lvar, :i)), :!=, s(:str, ""))), s(:lasgn, :hamming, s(:call, s(:lvar, :hamming), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :hamming))))