s(:defn, :compute, s(:args, :seq1, :seq2), s(:lasgn, :seq1Arr, s(:call, s(:lvar, :seq1), :split, s(:str, ""))), s(:lasgn, :seq2Arr, s(:call, s(:lvar, :seq2), :split, s(:str, ""))), s(:lasgn, :seq1Arrsize, s(:call, s(:lvar, :seq1Arr), :size)), s(:lasgn, :seq2Arrsize, s(:call, s(:lvar, :seq2Arr), :size)), s(:masgn, s(:array, s(:lasgn, :position), s(:lasgn, :hamming)), s(:array, s(:lit, 0), s(:lit, 0))), s(:while, s(:or, s(:call, s(:lvar, :position), :<, s(:lvar, :seq1Arrsize)), s(:call, s(:lvar, :position), :<, s(:lvar, :seq2Arrsize))), s(:block, s(:if, s(:or, s(:call, s(:call, s(:lvar, :seq1Arr), :[], s(:lvar, :position)), :nil?), s(:call, s(:call, s(:lvar, :seq2Arr), :[], s(:lvar, :position)), :nil?)), s(:break), nil), s(:if, s(:call, s(:call, s(:lvar, :seq1Arr), :[], s(:lvar, :position)), :!=, s(:call, s(:lvar, :seq2Arr), :[], s(:lvar, :position))), s(:lasgn, :hamming, s(:call, s(:lvar, :hamming), :+, s(:lit, 1))), nil), s(:lasgn, :position, s(:call, s(:lvar, :position), :+, s(:lit, 1)))), true), s(:lvar, :hamming))