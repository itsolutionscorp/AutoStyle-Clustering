s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:iasgn, :@strand1, s(:call, s(:lvar, :strand1), :chars)), s(:iasgn, :@strand2, s(:call, s(:lvar, :strand2), :chars)), s(:lasgn, :distance, s(:lit, 0)), s(:if, s(:call, s(:call, s(:ivar, :@strand1), :length), :>, s(:call, s(:ivar, :@strand2), :length)), s(:iasgn, :@strand1, s(:call, s(:ivar, :@strand1), :[], s(:lit, 0), s(:call, s(:lvar, :strand2), :length))), s(:if, s(:call, s(:call, s(:ivar, :@strand2), :length), :>, s(:call, s(:ivar, :@strand1), :length)), s(:iasgn, :@strand2, s(:call, s(:ivar, :@strand2), :[], s(:lit, 0), s(:call, s(:lvar, :strand2), :length))), nil)), s(:iter, s(:call, s(:ivar, :@strand1), :each_with_index), s(:args, :strand1_char, :index), s(:block, s(:iasgn, :@strand2_char, s(:call, s(:lvar, :strand2), :[], s(:lvar, :index))), s(:if, s(:call, s(:ivar, :@strand2_char), :!=, s(:lvar, :strand1_char)), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil))), s(:return, s(:lvar, :distance))))