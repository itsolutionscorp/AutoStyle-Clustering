s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :count, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :==, s(:call, s(:lvar, :b), :length)), s(:iter, s(:call, s(:call, s(:lvar, :a), :split, s(:str, "")), :each_with_index), s(:args, :char, :index), s(:if, s(:call, s(:lvar, :char), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :index))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:block, s(:call, s(:lvar, :a), :slice!, s(:call, s(:lvar, :b), :length), s(:call, s(:lvar, :a), :length)), s(:iter, s(:call, s(:call, s(:lvar, :a), :split, s(:str, "")), :each_with_index), s(:args, :char, :index), s(:if, s(:call, s(:lvar, :char), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :index))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil))), s(:block, s(:call, s(:lvar, :b), :slice!, s(:call, s(:lvar, :a), :length), s(:call, s(:lvar, :b), :length)), s(:iter, s(:call, s(:call, s(:lvar, :b), :split, s(:str, "")), :each_with_index), s(:args, :char, :index), s(:if, s(:call, s(:lvar, :char), :!=, s(:call, s(:lvar, :a), :[], s(:lvar, :index))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil))))), s(:lvar, :count))