s(:class, :Phrase, nil, s(:call, nil, :attr_reader, s(:lit, :phrase)), s(:defn, :initialize, s(:args, :phrase), s(:iasgn, :@phrase, s(:call, s(:lvar, :phrase), :downcase))), s(:defn, :word_count, s(:args), s(:lasgn, :word_count_hash, s(:hash)), s(:call, s(:call, nil, :phrase), :gsub!, s(:lit, /[^\w\d\s,']/), s(:str, "")), s(:lasgn, :words, s(:if, s(:call, s(:call, s(:call, nil, :phrase), :include?, s(:str, " ")), :!), s(:call, s(:call, nil, :phrase), :split, s(:str, ",")), s(:call, s(:call, s(:call, nil, :phrase), :delete, s(:str, ",")), :split))), s(:lasgn, :words_unique, s(:call, s(:lvar, :words), :uniq)), s(:lasgn, :word_counts, s(:iter, s(:call, s(:lvar, :words_unique), :map), s(:args, :word), s(:call, s(:lvar, :words), :count, s(:lvar, :word)))), s(:iter, s(:call, s(:lvar, :words_unique), :each_with_index), s(:args, :word, :i), s(:attrasgn, s(:lvar, :word_count_hash), :[]=, s(:lvar, :word), s(:call, s(:lvar, :word_counts), :[], s(:lvar, :i)))), s(:lvar, :word_count_hash)))