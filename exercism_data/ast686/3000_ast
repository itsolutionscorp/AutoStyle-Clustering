s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :"*args"), s(:lasgn, :arg_length, s(:call, s(:call, s(:lvar, :args), :[], s(:lit, 0)), :length)), s(:lasgn, :loop_count, s(:lit, 0)), s(:lasgn, :assert_count, s(:lit, 0)), s(:while, s(:call, s(:lvar, :loop_count), :<=, s(:lvar, :arg_length)), s(:block, s(:lasgn, :loop_count, s(:call, s(:lvar, :loop_count), :+, s(:lit, 1))), s(:lasgn, :array_number, s(:call, s(:lvar, :loop_count), :-, s(:lit, 1))), s(:if, s(:call, s(:call, s(:call, s(:lvar, :args), :[], s(:lit, 0)), :[], s(:lvar, :array_number)), :!=, s(:call, s(:call, s(:lvar, :args), :[], s(:lit, 1)), :[], s(:lvar, :array_number))), s(:lasgn, :assert_count, s(:call, s(:lvar, :assert_count), :+, s(:lit, 1))), nil)), true), s(:return, s(:lvar, :assert_count))))