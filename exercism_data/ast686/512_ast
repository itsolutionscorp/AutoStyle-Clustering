s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:masgn, s(:array, s(:lasgn, :shorter), s(:lasgn, :longer)), s(:array, s(:lvar, :a), s(:lvar, :b))), s(:if, s(:call, s(:call, s(:lvar, :b), :length), :<, s(:call, s(:lvar, :a), :length)), s(:masgn, s(:array, s(:lasgn, :shorter), s(:lasgn, :longer)), s(:array, s(:lvar, :b), s(:lvar, :a))), nil), s(:lasgn, :other_chars, s(:call, s(:call, s(:lvar, :longer), :each_char), :to_a)), s(:lasgn, :index, s(:lit, -1)), s(:iter, s(:call, s(:call, s(:lvar, :shorter), :chars), :inject, s(:lit, 0)), s(:args, :hamming, :current), s(:block, s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1))), s(:if, s(:call, s(:lvar, :current), :!=, s(:call, s(:lvar, :other_chars), :[], s(:lvar, :index))), s(:call, s(:lvar, :hamming), :+, s(:lit, 1)), s(:lvar, :hamming))))))