s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :"*args"), s(:lasgn, :total, s(:lit, 0)), s(:masgn, s(:array, s(:lasgn, :x), s(:lasgn, :y)), s(:to_ary, s(:lvar, :args))), s(:lasgn, :x, s(:call, s(:lvar, :x), :scan, s(:lit, /\w/))), s(:lasgn, :y, s(:call, s(:lvar, :y), :scan, s(:lit, /\w/))), s(:if, s(:call, s(:call, s(:lvar, :x), :length), :>=, s(:call, s(:lvar, :y), :length)), s(:call, s(:lvar, :x), :pop, s(:call, s(:call, s(:lvar, :x), :length), :-, s(:call, s(:lvar, :y), :length))), s(:call, s(:lvar, :y), :pop, s(:call, s(:call, s(:lvar, :y), :length), :-, s(:call, s(:lvar, :x), :length)))), s(:lasgn, :new_array, s(:iter, s(:call, s(:call, s(:lvar, :x), :zip, s(:lvar, :y)), :map), s(:args, :a, :b), s(:call, s(:lvar, :a), :==, s(:lvar, :b)))), s(:iter, s(:call, s(:lvar, :new_array), :map), s(:args, :x), s(:if, s(:call, s(:lvar, :x), :==, s(:false)), s(:lasgn, :total, s(:call, s(:lvar, :total), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :total))))