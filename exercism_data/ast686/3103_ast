s(:class, :Hamming, nil, s(:sclass, s(:self), s(:defn, :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :>, s(:call, s(:lvar, :strand2), :length)), s(:lasgn, :strand1, s(:call, s(:lvar, :strand1), :[], s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :strand2), :length), :-, s(:lit, 1))))), nil), s(:if, s(:call, s(:call, s(:lvar, :strand2), :length), :>, s(:call, s(:lvar, :strand1), :length)), s(:lasgn, :strand2, s(:call, s(:lvar, :strand2), :[], s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :strand1), :length), :-, s(:lit, 1))))), nil), s(:lasgn, :strand1, s(:call, s(:lvar, :strand1), :split, s(:lit, //))), s(:lasgn, :strand2, s(:call, s(:lvar, :strand2), :split, s(:lit, //))), s(:lasgn, :cnt, s(:lit, 0)), s(:iter, s(:call, s(:call, s(:lvar, :strand1), :zip, s(:lvar, :strand2)), :each), s(:args, :strand1, :strand2), s(:if, s(:call, s(:lvar, :strand1), :!=, s(:lvar, :strand2)), s(:lasgn, :cnt, s(:call, s(:lvar, :cnt), :+, s(:lit, 1))), nil)), s(:lvar, :cnt))))