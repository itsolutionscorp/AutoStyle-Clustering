s(:module, :Hamming, s(:cdecl, :LEFTOVER_CHARS, s(:iter, s(:call, nil, :lambda), s(:args, :pair), s(:call, s(:lvar, :pair), :any?, s(:block_pass, s(:lit, :nil?))))), s(:cdecl, :DIFFERENT_PAIRS, s(:iter, s(:call, nil, :lambda), s(:args, :pair), s(:call, s(:call, s(:lvar, :pair), :[], s(:lit, 0)), :!=, s(:call, s(:lvar, :pair), :[], s(:lit, 1))))), s(:defn, :compute, s(:args, :first, :second), s(:call, s(:call, s(:call, s(:call, s(:lvar, :first), :chars), :zip, s(:call, s(:lvar, :second), :chars)), :reject, s(:block_pass, s(:const, :LEFTOVER_CHARS))), :count, s(:block_pass, s(:const, :DIFFERENT_PAIRS)))))