s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :first, :second), s(:lasgn, :count, s(:lit, 0)), s(:iter, s(:call, s(:call, s(:call, s(:lvar, :first), :scan, s(:lit, /./)), :zip, s(:call, s(:lvar, :second), :scan, s(:lit, /./))), :each), s(:args, :match), s(:if, s(:and, s(:call, s(:call, s(:call, s(:lvar, :match), :[], s(:lit, 0)), :nil?), :!), s(:and, s(:call, s(:call, s(:call, s(:lvar, :match), :[], s(:lit, 1)), :nil?), :!), s(:call, s(:call, s(:lvar, :match), :[], s(:lit, 0)), :!=, s(:call, s(:lvar, :match), :[], s(:lit, 1))))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:lvar, :count)))