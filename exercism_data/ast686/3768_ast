s(:defn, :compute, s(:args, :s, :t), s(:if, s(:call, s(:lvar, :s), :===, s(:lvar, :t)), s(:return, s(:lit, 0)), nil), s(:lasgn, :seq_one, s(:call, s(:lvar, :s), :scan, s(:lit, /\w/))), s(:lasgn, :seq_two, s(:call, s(:lvar, :t), :scan, s(:lit, /\w/))), s(:lasgn, :differences, s(:lit, 0)), s(:lasgn, :character_count, s(:if, s(:call, s(:call, s(:lvar, :seq_one), :size), :<, s(:call, s(:lvar, :seq_two), :size)), s(:call, s(:lvar, :seq_one), :size), s(:call, s(:lvar, :seq_two), :size))), s(:while, s(:call, s(:lvar, :character_count), :>, s(:lit, 0)), s(:block, s(:lasgn, :tmp_one, s(:call, s(:lvar, :seq_one), :shift)), s(:lasgn, :tmp_two, s(:call, s(:lvar, :seq_two), :shift)), s(:if, s(:call, s(:lvar, :tmp_one), :!=, s(:lvar, :tmp_two)), s(:lasgn, :differences, s(:call, s(:lvar, :differences), :+, s(:lit, 1))), nil), s(:lasgn, :character_count, s(:call, s(:lvar, :character_count), :-, s(:lit, 1)))), true), s(:lvar, :differences))