s(:block, s(:call, nil, :require, s(:str, "pry")), s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :dna_array1, s(:call, s(:lvar, :strand1), :split, s(:str, ""))), s(:lasgn, :dna_array2, s(:call, s(:lvar, :strand2), :split, s(:str, ""))), s(:if, s(:call, s(:call, s(:lvar, :dna_array2), :length), :>, s(:call, s(:lvar, :dna_array1), :length)), s(:lasgn, :min, s(:call, s(:lvar, :dna_array1), :length)), s(:lasgn, :min, s(:call, s(:lvar, :dna_array2), :length))), s(:lasgn, :assert_equal, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :dna_array1), :each_with_index), s(:args, :genome, :i), s(:if, s(:call, s(:lvar, :genome), :==, s(:call, s(:lvar, :dna_array2), :[], s(:lvar, :i))), s(:lasgn, :assert_equal, s(:lvar, :assert_equal)), s(:if, s(:call, s(:call, s(:lvar, :dna_array2), :[], s(:lvar, :i)), :nil?), s(:lasgn, :assert_equal, s(:lvar, :assert_equal)), s(:lasgn, :assert_equal, s(:call, s(:lvar, :assert_equal), :+, s(:lit, 1)))))), s(:return, s(:lvar, :assert_equal)))))