s(:class, :Hamming, nil, s(:defs, s(:const, :Hamming), :compute, s(:args, :strandA, :strandB), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :end_point, s(:call, s(:lvar, :strandA), :length)), s(:lasgn, :length_difference, s(:call, s(:call, s(:lvar, :strandA), :length), :-, s(:call, s(:lvar, :strandB), :length))), s(:if, s(:call, s(:lvar, :length_difference), :>, s(:lit, 0)), s(:lasgn, :end_point, s(:call, s(:lvar, :strandB), :length)), nil), s(:lasgn, :end_point, s(:call, s(:lvar, :end_point), :-, s(:lit, 1))), s(:for, s(:dot2, s(:lit, 0), s(:lvar, :end_point)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :strandA), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strandB), :[], s(:lvar, :i))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :hamming_distance))))