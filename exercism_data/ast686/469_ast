s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_a, :strand_b), s(:if, s(:or, s(:call, s(:call, s(:lvar, :strand_a), :length), :==, s(:lit, 0)), s(:call, s(:call, s(:lvar, :strand_b), :length), :==, s(:lit, 0))), s(:return, s(:lit, 0)), nil), s(:lasgn, :min_length, s(:call, s(:call, s(:array, s(:call, s(:lvar, :strand_a), :length), s(:call, s(:lvar, :strand_b), :length)), :min), :-, s(:lit, 1))), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:lvar, :min_length)), :inject, s(:lit, 0)), s(:args, :diff_count, :i), s(:if, s(:call, s(:call, s(:lvar, :strand_a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :strand_b), :[], s(:lvar, :i))), s(:call, s(:lvar, :diff_count), :+, s(:lit, 1)), s(:lvar, :diff_count)))))