s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :string, :other_string), s(:lasgn, :string, s(:call, s(:lvar, :string), :scan, s(:lit, /\w/))), s(:lasgn, :other_string, s(:call, s(:lvar, :other_string), :scan, s(:lit, /\w/))), s(:if, s(:call, s(:call, s(:lvar, :string), :length), :>, s(:call, s(:lvar, :other_string), :length)), s(:lasgn, :string, s(:call, s(:lvar, :string), :slice, s(:lit, 0), s(:call, s(:lvar, :other_string), :length))), s(:if, s(:call, s(:call, s(:lvar, :other_string), :length), :>, s(:call, s(:lvar, :string), :length)), s(:lasgn, :other_string, s(:call, s(:lvar, :other_string), :slice, s(:lit, 0), s(:call, s(:lvar, :string), :length))), nil)), s(:lasgn, :distance, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :string), :zip, s(:lvar, :other_string)), :map), s(:args, :a, :b), s(:if, s(:call, s(:lvar, :a), :!=, s(:lvar, :b)), s(:lit, 1), s(:lit, 0))), :inject, s(:lit, :+))), s(:lvar, :distance)))