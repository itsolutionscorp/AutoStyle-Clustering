s(:defn, :compute, s(:args, :string_1, :string_2), s(:lasgn, :length_comparison, s(:call, s(:call, s(:lvar, :string_1), :length), :<=>, s(:call, s(:lvar, :string_2), :length))), s(:if, s(:call, s(:lvar, :length_comparison), :==, s(:lit, 1)), s(:lasgn, :string_1, s(:call, s(:lvar, :string_1), :[], s(:dot3, s(:lit, 0), s(:call, s(:lvar, :string_2), :length)))), nil), s(:if, s(:call, s(:lvar, :length_comparison), :==, s(:lit, -1)), s(:lasgn, :string_2, s(:call, s(:lvar, :string_2), :[], s(:dot3, s(:lit, 0), s(:call, s(:lvar, :string_1), :length)))), nil), s(:lasgn, :hamming_count, s(:lit, 0)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :string_1), :length)), :each), s(:args, :n), s(:if, s(:call, s(:call, s(:lvar, :string_1), :[], s(:lvar, :n)), :!=, s(:call, s(:lvar, :string_2), :[], s(:lvar, :n))), s(:lasgn, :hamming_count, s(:call, s(:lvar, :hamming_count), :+, s(:lit, 1))), nil)), s(:lvar, :hamming_count))