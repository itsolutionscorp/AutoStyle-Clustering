s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :x, :y), s(:if, s(:call, s(:lvar, :x), :==, s(:lvar, :y)), s(:lasgn, :counter, s(:lit, 0)), s(:block, s(:lasgn, :first_string, s(:call, s(:lvar, :x), :split, s(:lit, //))), s(:lasgn, :second_string, s(:call, s(:lvar, :y), :split, s(:lit, //))), s(:lasgn, :counter, s(:lit, 0)), s(:lasgn, :index, s(:lit, 0)), s(:while, s(:call, s(:lvar, :index), :<, s(:call, s(:array, s(:call, s(:lvar, :first_string), :count), s(:call, s(:lvar, :second_string), :count)), :min)), s(:if, s(:call, s(:call, s(:lvar, :first_string), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :second_string), :[], s(:lvar, :index))), s(:block, s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1)))), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1)))), true))), s(:call, nil, :p, s(:lvar, :counter))))