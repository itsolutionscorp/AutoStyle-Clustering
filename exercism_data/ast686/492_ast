s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :x, :y), s(:if, s(:call, s(:call, s(:lvar, :x), :length), :==, s(:call, s(:lvar, :y), :length)), s(:block, s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :sum, s(:lit, 0)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :x), :length)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :x), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :y), :[], s(:lvar, :i))), s(:block, s(:lasgn, :sum, s(:call, s(:lvar, :sum), :+, s(:lit, 0))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), s(:block, s(:lasgn, :sum, s(:call, s(:lvar, :sum), :+, s(:lit, 1))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))))), s(:return, s(:lvar, :sum))), s(:block, s(:call, nil, :puts, s(:str, "strings are not equal length")), s(:call, nil, :exit)))))