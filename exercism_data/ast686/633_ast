s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:lasgn, :a, s(:call, s(:lvar, :a), :[], s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :b), :length), :-, s(:lit, 1))))), s(:lasgn, :b, s(:call, s(:lvar, :b), :[], s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :a), :length), :-, s(:lit, 1)))))), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :count, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :a), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :i))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :count))))