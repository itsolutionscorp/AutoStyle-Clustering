s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :dna1, :dna2), s(:lasgn, :dna1, s(:call, s(:lvar, :dna1), :split, s(:str, ""))), s(:lasgn, :dna2, s(:call, s(:lvar, :dna2), :split, s(:str, ""))), s(:if, s(:call, s(:call, s(:lvar, :dna1), :length), :>, s(:call, s(:lvar, :dna2), :length)), s(:lasgn, :length, s(:call, s(:lvar, :dna2), :length)), s(:lasgn, :length, s(:call, s(:lvar, :dna1), :length))), s(:lasgn, :array1, s(:array)), s(:lasgn, :array2, s(:array)), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :hamming_dist, s(:lit, 0)), s(:while, s(:call, s(:lvar, :i), :<, s(:lvar, :length)), s(:block, s(:iter, s(:call, s(:lvar, :dna1), :each), s(:args, :letter1), s(:call, s(:lvar, :array1), :<<, s(:lvar, :letter1))), s(:iter, s(:call, s(:lvar, :dna2), :each), s(:args, :letter2), s(:call, s(:lvar, :array2), :<<, s(:lvar, :letter2))), s(:if, s(:call, s(:call, s(:lvar, :array1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :array2), :[], s(:lvar, :i))), s(:lasgn, :hamming_dist, s(:call, s(:lvar, :hamming_dist), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :hamming_dist))))