s(:defn, :compute, s(:args, :first_strand, :second_strand), s(:lasgn, :first_strand_arr, s(:call, s(:call, s(:lvar, :first_strand), :upcase), :chars)), s(:lasgn, :second_strand_arr, s(:call, s(:call, s(:lvar, :second_strand), :upcase), :chars)), s(:lasgn, :index, s(:lit, 0)), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :number_of_nucleotides, s(:if, s(:call, s(:call, s(:lvar, :first_strand), :size), :>, s(:call, s(:lvar, :second_strand), :size)), s(:call, s(:lvar, :second_strand), :size), s(:call, s(:lvar, :first_strand), :size))), s(:until, s(:call, s(:lvar, :index), :>=, s(:lvar, :number_of_nucleotides)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :first_strand_arr), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :second_strand_arr), :[], s(:lvar, :index))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :hamming_distance)))