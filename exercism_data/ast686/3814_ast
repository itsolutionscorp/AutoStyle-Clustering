s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :counter, s(:lit, 0)), s(:lasgn, :hammingDistance, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :a), :eql?, s(:lvar, :b)), :!), s(:while, s(:and, s(:call, s(:lvar, :counter), :<, s(:call, s(:lvar, :a), :length)), s(:call, s(:lvar, :counter), :<, s(:call, s(:lvar, :b), :length))), s(:block, s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :counter)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :counter))), s(:lasgn, :hammingDistance, s(:call, s(:lvar, :hammingDistance), :+, s(:lit, 1))), nil), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1)))), true), nil), s(:lvar, :hammingDistance))