s(:defn, :compute, s(:args, :strand1, :strand2), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :strand1, s(:call, s(:lvar, :strand1), :chars)), s(:lasgn, :strand2, s(:call, s(:lvar, :strand2), :chars)), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :>, s(:call, s(:lvar, :strand2), :length)), s(:lasgn, :strand1, s(:call, s(:lvar, :strand1), :slice, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :strand2), :length)))), s(:if, s(:call, s(:call, s(:lvar, :strand2), :length), :>, s(:call, s(:lvar, :strand1), :length)), s(:lasgn, :strand2, s(:call, s(:lvar, :strand2), :slice, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :strand1), :length)))), nil)), s(:iter, s(:call, s(:lvar, :strand1), :each_with_index), s(:args, :char, :idx), s(:if, s(:call, s(:lvar, :char), :!=, s(:call, s(:lvar, :strand2), :[], s(:lvar, :idx))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :hamming_distance)))