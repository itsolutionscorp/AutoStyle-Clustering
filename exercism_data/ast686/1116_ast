s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :code1, :code2), s(:lasgn, :code1, s(:iter, s(:call, s(:const, :Array), :new, s(:call, s(:array, s(:call, s(:lvar, :code1), :size), s(:call, s(:lvar, :code2), :size)), :max)), s(:args, :i), s(:call, s(:lvar, :code1), :[], s(:lvar, :i)))), s(:lasgn, :code2, s(:iter, s(:call, s(:const, :Array), :new, s(:call, s(:array, s(:call, s(:lvar, :code1), :size), s(:call, s(:lvar, :code2), :size)), :max)), s(:args, :i), s(:call, s(:lvar, :code2), :[], s(:lvar, :i)))), s(:lasgn, :res, s(:iter, s(:call, s(:call, s(:lvar, :code1), :zip, s(:lvar, :code2)), :reduce, s(:lit, 0)), s(:args, :acc, :item), s(:block, s(:if, s(:and, s(:call, s(:call, s(:lvar, :item), :[], s(:lit, 0)), :!=, s(:call, s(:lvar, :item), :[], s(:lit, 1))), s(:and, s(:call, s(:call, s(:call, s(:lvar, :item), :[], s(:lit, 0)), :nil?), :!), s(:call, s(:call, s(:call, s(:lvar, :item), :[], s(:lit, 1)), :nil?), :!))), s(:lasgn, :acc, s(:call, s(:lvar, :acc), :+, s(:lit, 1))), nil), s(:lvar, :acc))))))