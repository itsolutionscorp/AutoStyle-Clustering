s(:defn, :compute, s(:args, :x, :y), s(:lasgn, :result, s(:lit, 0)), s(:if, s(:call, s(:lvar, :x), :eql?, s(:lvar, :y)), s(:lvar, :result), s(:block, s(:lasgn, :strandx, s(:call, s(:lvar, :x), :scan, s(:lit, /./))), s(:lasgn, :strandy, s(:call, s(:lvar, :y), :scan, s(:lit, /./))), s(:if, s(:call, s(:call, s(:lvar, :x), :length), :>, s(:call, s(:lvar, :y), :length)), s(:lasgn, :strandx, s(:call, s(:lvar, :strandx), :first, s(:call, s(:lvar, :strandy), :length))), s(:if, s(:call, s(:call, s(:lvar, :x), :length), :<, s(:call, s(:lvar, :y), :length)), s(:lasgn, :strandy, s(:call, s(:lvar, :strandy), :first, s(:call, s(:lvar, :strandx), :length))), s(:block, s(:call, s(:call, s(:lvar, :x), :length), :==, s(:call, s(:lvar, :y), :length)), s(:lvar, :strandx), s(:lvar, :strandy)))), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :hamming_diff, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :strandx), :each), s(:args, :strand), s(:block, s(:if, s(:call, s(:lvar, :strand), :==, s(:call, s(:lvar, :strandy), :[], s(:lvar, :count))), s(:lasgn, :hamming_diff, s(:call, s(:lvar, :hamming_diff), :+, s(:lit, 0))), s(:block, s(:call, s(:lvar, :strand), :!=, s(:call, s(:lvar, :strandy), :[], s(:lvar, :count))), s(:lasgn, :hamming_diff, s(:call, s(:lvar, :hamming_diff), :+, s(:lit, 1))), s(:lasgn, :result, s(:lvar, :hamming_diff)))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))))))), s(:lvar, :result))