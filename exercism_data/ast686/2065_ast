s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :x, :y), s(:masgn, s(:array, s(:lasgn, :x), s(:lasgn, :y)), s(:array, s(:call, s(:lvar, :x), :split, s(:str, "")), s(:call, s(:lvar, :y), :split, s(:str, "")))), s(:if, s(:call, s(:call, s(:lvar, :x), :length), :>, s(:call, s(:lvar, :y), :length)), s(:lasgn, :x, s(:call, s(:lvar, :x), :slice, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:call, s(:call, s(:lvar, :x), :length), :-, s(:call, s(:lvar, :y), :length)), :+, s(:lit, 1)), :-@)))), s(:if, s(:call, s(:call, s(:lvar, :x), :length), :<, s(:call, s(:lvar, :y), :length)), s(:lasgn, :y, s(:call, s(:lvar, :y), :slice, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:call, s(:call, s(:lvar, :y), :length), :-, s(:call, s(:lvar, :y), :length)), :+, s(:lit, 1)), :-@)))), nil)), s(:lasgn, :differences_count, s(:lit, 0)), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :x), :length), :-, s(:lit, 1))), :each), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :x), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :y), :[], s(:lvar, :i))), s(:lasgn, :differences_count, s(:call, s(:lvar, :differences_count), :+, s(:lit, 1))), nil)), s(:lvar, :differences_count)))