s(:defn, :compute, s(:args, :dna_one, :dna_two), s(:lasgn, :x, s(:lit, 0)), s(:lasgn, :count, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :dna_one), :length), :<, s(:call, s(:lvar, :dna_two), :length)), s(:block, s(:lasgn, :shortest_string, s(:lvar, :dna_one)), s(:lasgn, :other_string, s(:lvar, :dna_two))), s(:block, s(:lasgn, :shortest_string, s(:lvar, :dna_two)), s(:lasgn, :other_string, s(:lvar, :dna_one)))), s(:while, s(:call, s(:lvar, :x), :<, s(:call, s(:lvar, :shortest_string), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :shortest_string), :[], s(:lvar, :x)), :!=, s(:call, s(:lvar, :other_string), :[], s(:lvar, :x))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil), s(:lasgn, :x, s(:call, s(:lvar, :x), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :count)))