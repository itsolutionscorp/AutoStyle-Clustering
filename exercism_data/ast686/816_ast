s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand_1, :strand_2), s(:lasgn, :strand_1, s(:call, s(:lvar, :strand_1), :chars)), s(:lasgn, :strand_2, s(:call, s(:lvar, :strand_2), :chars)), s(:lasgn, :min, s(:if, s(:call, s(:call, s(:lvar, :strand_1), :length), :<, s(:call, s(:lvar, :strand_2), :length)), s(:call, s(:lvar, :strand_1), :length), s(:call, s(:lvar, :strand_2), :length))), s(:lasgn, :strand_1, s(:call, s(:lvar, :strand_1), :take, s(:lvar, :min))), s(:lasgn, :strand_2, s(:call, s(:lvar, :strand_2), :take, s(:lvar, :min))), s(:lasgn, :hamm, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :strand_1), :each_index), s(:args, :index), s(:if, s(:call, s(:call, s(:lvar, :strand_1), :[], s(:lvar, :index)), :!=, s(:call, s(:lvar, :strand_2), :[], s(:lvar, :index))), s(:lasgn, :hamm, s(:call, s(:lvar, :hamm), :+, s(:lit, 1))), nil)), s(:lvar, :hamm)))