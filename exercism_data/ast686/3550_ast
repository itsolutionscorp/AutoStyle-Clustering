s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :string1, :string2), s(:lasgn, :seq1, s(:call, s(:call, s(:lvar, :string1), :chars), :to_a)), s(:lasgn, :seq2, s(:call, s(:call, s(:lvar, :string2), :chars), :to_a)), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :counter, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :seq2), :length), :<, s(:call, s(:lvar, :seq1), :length)), s(:iter, s(:call, s(:lvar, :seq2), :each), s(:args, :x), s(:block, s(:if, s(:call, s(:lvar, :x), :!=, s(:call, s(:lvar, :seq1), :[], s(:lvar, :counter))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1))))), s(:iter, s(:call, s(:lvar, :seq1), :each), s(:args, :x), s(:block, s(:if, s(:call, s(:lvar, :x), :!=, s(:call, s(:lvar, :seq2), :[], s(:lvar, :counter))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil), s(:lasgn, :counter, s(:call, s(:lvar, :counter), :+, s(:lit, 1)))))), s(:return, s(:lvar, :hamming_distance))))