s(:defn, :compute, s(:args, :geneOne, :geneTwo), s(:lasgn, :hammingDistance, s(:lit, 0)), s(:lasgn, :gene1, s(:call, s(:lvar, :geneOne), :size)), s(:lasgn, :gene2, s(:call, s(:lvar, :geneTwo), :size)), s(:lasgn, :gene, s(:call, s(:call, s(:array, s(:lvar, :gene1), s(:lvar, :gene2)), :min), :-, s(:lit, 1))), s(:iter, s(:call, s(:lit, 0), :upto, s(:lvar, :gene)), s(:args, :g), s(:if, s(:call, s(:call, s(:lvar, :geneOne), :[], s(:lvar, :g)), :!=, s(:call, s(:lvar, :geneTwo), :[], s(:lvar, :g))), s(:lasgn, :hammingDistance, s(:call, s(:lvar, :hammingDistance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :hammingDistance)))