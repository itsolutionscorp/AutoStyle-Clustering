s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :var1, :var2), s(:lasgn, :sz_a, s(:call, s(:lvar, :var1), :size)), s(:lasgn, :sz_b, s(:call, s(:lvar, :var2), :size)), s(:lasgn, :max, s(:lit, 0)), s(:if, s(:call, s(:lvar, :sz_a), :==, s(:lvar, :sz_b)), s(:lasgn, :max, s(:lvar, :sz_a)), s(:if, s(:call, s(:lvar, :sz_a), :>, s(:lvar, :sz_b)), s(:lasgn, :max, s(:lvar, :sz_b)), s(:lasgn, :max, s(:lvar, :sz_a)))), s(:lasgn, :count, s(:lit, 0)), s(:lasgn, :max, s(:call, s(:lvar, :max), :-, s(:lit, 1))), s(:for, s(:dot2, s(:lit, 0), s(:lvar, :max)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :var1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :var2), :[], s(:lvar, :i))), s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :count))))