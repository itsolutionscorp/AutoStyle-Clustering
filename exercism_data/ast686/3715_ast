s(:module, :Hamming, s(:defn, :compute, s(:args, :first, :second), s(:lasgn, :distance, s(:lit, 0)), s(:if, s(:call, s(:lvar, :first), :==, s(:lvar, :second)), s(:return, s(:lvar, :distance)), nil), s(:lasgn, :first, s(:call, s(:lvar, :first), :split, s(:lit, //))), s(:lasgn, :second, s(:call, s(:lvar, :second), :split, s(:lit, //))), s(:while, s(:and, s(:call, s(:call, s(:lvar, :first), :empty?), :!), s(:call, s(:call, s(:lvar, :second), :empty?), :!)), s(:if, s(:call, s(:call, s(:lvar, :first), :shift), :!=, s(:call, s(:lvar, :second), :shift)), s(:lasgn, :distance, s(:call, s(:lvar, :distance), :+, s(:lit, 1))), nil), true), s(:lvar, :distance)))