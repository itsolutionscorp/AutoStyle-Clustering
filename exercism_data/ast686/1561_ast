s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strand1, :strand2), s(:if, s(:call, s(:call, s(:lvar, :strand1), :length), :!=, s(:call, s(:lvar, :strand2), :length)), s(:call, nil, :raise, s(:str, "Strands must be of equal length")), nil), s(:lasgn, :arr1, s(:call, s(:lvar, :strand1), :split, s(:str, ""))), s(:lasgn, :arr2, s(:call, s(:lvar, :strand2), :split, s(:str, ""))), s(:lasgn, :tuples, s(:call, s(:lvar, :arr1), :zip, s(:lvar, :arr2))), s(:lasgn, :sum, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :tuples), :each), s(:args, :tuple), s(:if, s(:call, s(:call, s(:lvar, :tuple), :[], s(:lit, 0)), :!=, s(:call, s(:lvar, :tuple), :[], s(:lit, 1))), s(:lasgn, :sum, s(:call, s(:lvar, :sum), :+, s(:lit, 1))), nil)), s(:lvar, :sum)))