s(:class, :Phrase, nil, s(:defn, :initialize, s(:args, :word), s(:iasgn, :@w, s(:lvar, :word))), s(:defn, :word_count, s(:args), s(:lasgn, :w, s(:call, s(:ivar, :@w), :gsub, s(:lit, /[,]/), s(:str, " "))), s(:lasgn, :w, s(:call, s(:lvar, :w), :gsub, s(:lit, /[^a-zA-Z0-9 ']/), s(:str, ""))), s(:iter, s(:call, s(:call, s(:lvar, :w), :split, s(:str, " ")), :inject, s(:hash)), s(:args, :d, :w), s(:block, s(:lasgn, :k, s(:call, s(:lvar, :w), :downcase)), s(:if, s(:call, s(:call, s(:lvar, :d), :[], s(:lvar, :k)), :nil?), s(:attrasgn, s(:lvar, :d), :[]=, s(:lvar, :k), s(:lit, 0)), nil), s(:attrasgn, s(:lvar, :d), :[]=, s(:lvar, :k), s(:call, s(:call, s(:lvar, :d), :[], s(:lvar, :k)), :+, s(:lit, 1))), s(:lvar, :d)))))