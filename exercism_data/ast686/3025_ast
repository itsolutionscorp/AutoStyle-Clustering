s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :nucleotide1, :nucleotide2), s(:lasgn, :i, s(:lit, 0)), s(:lasgn, :hammingCount, s(:lit, 0)), s(:lasgn, :baseString, s(:if, s(:call, s(:call, s(:lvar, :nucleotide1), :length), :<=, s(:call, s(:lvar, :nucleotide2), :length)), s(:lvar, :nucleotide1), s(:lvar, :nucleotide2))), s(:while, s(:call, s(:lvar, :i), :<, s(:call, s(:lvar, :baseString), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :nucleotide1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :nucleotide2), :[], s(:lvar, :i))), s(:lasgn, :hammingCount, s(:call, s(:lvar, :hammingCount), :+, s(:lit, 1))), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:lvar, :hammingCount)))