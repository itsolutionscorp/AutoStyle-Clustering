s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :longest, s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:call, s(:lvar, :a), :length), s(:call, s(:lvar, :b), :length))), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :longest), :-, s(:lit, 1))), :each), s(:args, :i), s(:block, s(:if, s(:or, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :i)), :nil?), s(:call, s(:call, s(:lvar, :b), :[], s(:lvar, :i)), :nil?)), s(:next), nil), s(:if, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :b), :[], s(:lvar, :i))), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil))), s(:lvar, :hamming_distance)))