s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :dna1, :dna2), s(:lasgn, :count, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :dna1), :length), :>, s(:call, s(:lvar, :dna2), :length)), s(:for, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :dna2), :length)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :dna1), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :dna2), :[], s(:lvar, :i))), nil, s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1))))), s(:for, s(:dot3, s(:lit, 0), s(:call, s(:lvar, :dna1), :length)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :dna1), :[], s(:lvar, :i)), :==, s(:call, s(:lvar, :dna2), :[], s(:lvar, :i))), nil, s(:lasgn, :count, s(:call, s(:lvar, :count), :+, s(:lit, 1)))))), s(:return, s(:lvar, :count))))