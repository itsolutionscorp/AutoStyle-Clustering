s(:module, :Hamming, s(:call, nil, :extend, s(:self)), s(:defn, :compute, s(:args, :sequence1, :sequence2), s(:lasgn, :hi_index, s(:call, s(:if, s(:call, s(:lasgn, :l1, s(:call, s(:lvar, :sequence1), :length)), :<, s(:lasgn, :l2, s(:call, s(:lvar, :sequence2), :length))), s(:lvar, :l1), s(:lvar, :l2)), :-, s(:lit, 1))), s(:iter, s(:call, s(:dot2, s(:lit, 0), s(:lvar, :hi_index)), :reduce, s(:lit, 0)), s(:args, :distance, :index), s(:if, s(:call, s(:call, s(:lvar, :sequence1), :[], s(:lvar, :index)), :==, s(:call, s(:lvar, :sequence2), :[], s(:lvar, :index))), s(:lvar, :distance), s(:call, s(:lvar, :distance), :+, s(:lit, 1))))))