s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :a, :b), s(:lasgn, :diff_count, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :>, s(:call, s(:lvar, :b), :length)), s(:lasgn, :a, s(:call, s(:lvar, :a), :[], s(:lit, 0), s(:call, s(:call, s(:lvar, :b), :length), :-, s(:lit, 1)))), nil), s(:if, s(:call, s(:call, s(:lvar, :a), :length), :<, s(:call, s(:lvar, :b), :length)), s(:lasgn, :b, s(:call, s(:lvar, :b), :[], s(:lit, 0), s(:call, s(:call, s(:lvar, :a), :length), :-, s(:lit, 1)))), nil), s(:lasgn, :a, s(:call, s(:lvar, :a), :split, s(:lit, //))), s(:lasgn, :b, s(:call, s(:lvar, :b), :split, s(:lit, //))), s(:iter, s(:call, s(:lvar, :a), :zip, s(:lvar, :b)), s(:args, :x, :y), s(:if, s(:call, s(:lvar, :x), :==, s(:lvar, :y)), nil, s(:lasgn, :diff_count, s(:call, s(:lvar, :diff_count), :+, s(:lit, 1))))), s(:lvar, :diff_count)))