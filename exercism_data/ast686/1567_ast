s(:class, :Hamming, nil, s(:defn, :compute, s(:args, :strandA, :strandB), s(:if, s(:call, s(:call, s(:lvar, :strandA), :length), :==, s(:call, s(:lvar, :strandB), :length)), s(:lasgn, :length, s(:call, s(:lvar, :strandA), :length)), s(:lasgn, :length, s(:call, s(:array, s(:call, s(:lvar, :strandA), :length), s(:call, s(:lvar, :strandB), :length)), :min))), s(:lasgn, :penalty, s(:lit, 0)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :length), :-, s(:lit, 1))), s(:lasgn, :index), s(:block, s(:lasgn, :cond, s(:call, s(:call, s(:lvar, :strandA), :[], s(:lvar, :index)), :==, s(:call, s(:lvar, :strandB), :[], s(:lvar, :index)))), s(:if, s(:call, s(:lvar, :cond), :!), s(:lasgn, :penalty, s(:call, s(:lvar, :penalty), :+, s(:lit, 1))), nil))), s(:return, s(:lvar, :penalty))))