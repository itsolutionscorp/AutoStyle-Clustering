s(:block, s(:defn, :compute, s(:args, :dna_seq_1, :dna_seq_2), s(:lasgn, :hamming_distance, s(:lit, 0)), s(:lasgn, :min_length, s(:if, s(:call, s(:call, s(:lvar, :dna_seq_1), :length), :<=, s(:call, s(:lvar, :dna_seq_2), :length)), s(:call, s(:lvar, :dna_seq_1), :length), s(:call, s(:lvar, :dna_seq_2), :length))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :min_length), :-, s(:lit, 1))), s(:lasgn, :pos), s(:if, s(:call, s(:call, s(:call, s(:call, s(:lvar, :dna_seq_1), :[], s(:lvar, :pos)), :chr), :==, s(:call, s(:call, s(:lvar, :dna_seq_2), :[], s(:lvar, :pos)), :chr)), :!), s(:lasgn, :hamming_distance, s(:call, s(:lvar, :hamming_distance), :+, s(:lit, 1))), nil)), s(:return, s(:lvar, :hamming_distance))), s(:if, s(:call, s(:str, "(string)"), :==, s(:gvar, :$0)), s(:call, nil, :puts, s(:call, s(:const, :Hamming), :compute, s(:str, "AG"), s(:str, "A"))), nil))