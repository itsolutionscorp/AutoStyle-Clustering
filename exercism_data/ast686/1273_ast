s(:defn, :compute, s(:args, :string_one, :string_two), s(:lasgn, :array_of_letters_one, s(:call, s(:lvar, :string_one), :split, s(:lit, //))), s(:lasgn, :array_of_letters_two, s(:call, s(:lvar, :string_two), :split, s(:lit, //))), s(:if, s(:call, s(:call, s(:lvar, :array_of_letters_one), :length), :>, s(:call, s(:lvar, :array_of_letters_two), :length)), s(:lasgn, :array_of_letters_one, s(:call, s(:lvar, :array_of_letters_one), :slice, s(:lit, 0..-2))), s(:if, s(:call, s(:call, s(:lvar, :array_of_letters_two), :length), :>, s(:call, s(:lvar, :array_of_letters_one), :length)), s(:lasgn, :array_of_letters_two, s(:call, s(:lvar, :array_of_letters_two), :slice, s(:lit, 0..-2))), nil)), s(:lvar, :array_of_letters_one), s(:lvar, :array_of_letters_two), s(:lasgn, :zipped_letters, s(:call, s(:lvar, :array_of_letters_one), :zip, s(:lvar, :array_of_letters_two))), s(:lasgn, :hamming_difference, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :zipped_letters), :each), s(:args, :pair), s(:if, s(:call, s(:call, s(:lvar, :pair), :[], s(:lit, 0)), :!=, s(:call, s(:lvar, :pair), :[], s(:lit, 1))), s(:lasgn, :hamming_difference, s(:call, s(:lvar, :hamming_difference), :+, s(:lit, 1))), nil)), s(:lvar, :hamming_difference))