s(:defn, :compute, s(:args, :input1, :input2), s(:call, nil, :attr_accessor, s(:lit, :hamming_distance), s(:lit, :max_length)), s(:iasgn, :@hamming_distance, s(:lit, 0)), s(:iasgn, :@dna1, s(:call, s(:lvar, :input1), :split, s(:str, ""))), s(:iasgn, :@dna1_length, s(:call, s(:ivar, :@dna1), :length)), s(:iasgn, :@dna2, s(:call, s(:lvar, :input2), :split, s(:str, ""))), s(:iasgn, :@dna2_length, s(:call, s(:ivar, :@dna2), :length)), s(:rescue, s(:if, s(:call, s(:ivar, :@dna1_length), :==, s(:ivar, :@dna2_length)), s(:iasgn, :@max_length, s(:ivar, :@dna1_length)), s(:call, nil, :raise)), s(:resbody, s(:array), s(:call, nil, :puts, s(:str, "The DNA used for the hamming test below are not the same length.")), s(:if, s(:call, s(:ivar, :@dna1_length), :<, s(:ivar, :@dna2_length)), s(:iasgn, :@max_length, s(:ivar, :@dna1_length)), s(:iasgn, :@max_length, s(:ivar, :@dna2_length))))), s(:iter, s(:call, s(:dot3, s(:lit, 0), s(:ivar, :@max_length)), :each), s(:args, :i), s(:if, s(:call, s(:call, s(:ivar, :@dna1), :[], s(:lvar, :i)), :!=, s(:call, s(:ivar, :@dna2), :[], s(:lvar, :i))), s(:iasgn, :@hamming_distance, s(:call, s(:ivar, :@hamming_distance), :+, s(:lit, 1))), nil)), s(:ivar, :@hamming_distance))