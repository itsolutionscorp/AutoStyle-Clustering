s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :tempword, s(:call, s(:lvar, :word), :downcase)), s(:lasgn, :tempword, s(:call, nil, :sortletters, s(:lvar, :tempword))), s(:if, s(:call, s(:lvar, :h), :key?, s(:lvar, :tempword)), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :tempword)), :<<, s(:lvar, :word)), s(:block, s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :tempword), s(:call, s(:const, :Array), :new)), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :tempword)), :<<, s(:lvar, :word)))))), s(:lasgn, :grouparray, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:call, s(:lvar, :h), :keys), :each), s(:args, :group), s(:call, s(:lvar, :grouparray), :<<, s(:call, s(:lvar, :h), :[], s(:lvar, :group)))), s(:return, s(:lvar, :grouparray))), s(:defn, :sortletters, s(:args, :word), s(:lasgn, :charray, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :word), :each_char), s(:args, :cha), s(:call, s(:lvar, :charray), :<<, s(:lvar, :cha))), s(:lasgn, :charray, s(:call, s(:lvar, :charray), :sort)), s(:lasgn, :newstr, s(:call, s(:const, :String), :new)), s(:iter, s(:call, s(:lvar, :charray), :each), s(:args, :cha), s(:lasgn, :newstr, s(:call, s(:lvar, :newstr), :+, s(:lvar, :cha)))), s(:return, s(:lvar, :newstr))))