s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagramHash, s(:call, s(:const, :Hash), :new, s(:call, s(:const, :Array), :new))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:call, s(:lvar, :anagramHash), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :chars), :sort), :join), :downcase)), :empty?), s(:attrasgn, s(:lvar, :anagramHash), :[]=, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :chars), :sort), :join), :downcase), s(:call, s(:const, :Array), :new)), nil), s(:call, s(:call, s(:lvar, :anagramHash), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :chars), :sort), :join), :downcase)), :<<, s(:lvar, :word)), s(:call, nil, :puts, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :chars), :sort), :join), :downcase)))), s(:lasgn, :output, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :anagramHash), :each_value), s(:args, :value), s(:call, s(:lvar, :output), :<<, s(:lvar, :value))), s(:return, s(:lvar, :output))))