s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :k, s(:lit, 0)), s(:lasgn, :arr, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:block, s(:attrasgn, s(:lvar, :arr), :[]=, s(:lvar, :k), s(:call, s(:const, :Array), :new)), s(:lasgn, :j, s(:call, s(:lvar, :k), :+, s(:lit, 1))), s(:while, s(:call, s(:lvar, :j), :<, s(:call, s(:lvar, :words), :size)), s(:block, s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :x), :downcase), :chars), :sort), :join), :eql?, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :j)), :downcase), :chars), :sort), :join)), s(:block, s(:call, s(:call, s(:lvar, :arr), :[], s(:lvar, :k)), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), s(:call, s(:lvar, :words), :delete_at, s(:lvar, :j)), s(:lasgn, :j, s(:lvar, :k))), nil), s(:lasgn, :j, s(:call, s(:lvar, :j), :+, s(:lit, 1)))), true), s(:call, s(:call, s(:lvar, :arr), :[], s(:lvar, :k)), :<<, s(:lvar, :x)), s(:lasgn, :k, s(:call, s(:lvar, :k), :+, s(:lit, 1))))), s(:lasgn, :arr, s(:call, s(:lvar, :arr), :each, s(:block_pass, s(:lit, :compact!)))), s(:return, s(:lvar, :arr))))