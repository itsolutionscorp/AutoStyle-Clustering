s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :temp, s(:lvar, :words)), s(:lasgn, :p, s(:call, s(:const, :Array), :new)), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :temp), :each), s(:args, :word), s(:lasgn, :h, s(:call, nil, :makeHash, s(:lvar, :h), s(:lvar, :word)))), s(:iter, s(:call, s(:call, s(:lvar, :h), :values), :each), s(:args, :ary), s(:call, s(:lvar, :p), :push, s(:lvar, :ary))), s(:return, s(:lvar, :p))), s(:defn, :makeHash, s(:args, :h, :word), s(:lasgn, :seq, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /\w/)), :sort), :join)), s(:if, s(:call, s(:lvar, :h), :has_key?, s(:lvar, :seq)), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :seq), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :seq)), :push, s(:lvar, :word))), s(:block, s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :seq), s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :seq), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :seq)), :push, s(:lvar, :word))))), s(:return, s(:lvar, :h))))