s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :array_full, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :array, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :array), :<<, s(:lvar, :word)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word_inner), s(:if, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :split, s(:lit, //)), :sort), :join), :===, s(:call, s(:call, s(:call, s(:lvar, :word_inner), :split, s(:lit, //)), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :array), :include?, s(:lvar, :word_inner)), :!), s(:call, s(:lvar, :array), :<<, s(:lvar, :word_inner)), nil), nil)), s(:if, s(:call, s(:call, s(:lvar, :array_full), :include?, s(:call, s(:lvar, :array), :sort)), :!), s(:call, s(:lvar, :array_full), :<<, s(:call, s(:lvar, :array), :sort)), nil))), s(:return, s(:lvar, :array_full))))