s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:defn, :anagrams?, s(:args, :string1, :string2), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :string1), :downcase), :split, s(:lit, //)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :string2), :downcase), :split, s(:lit, //)), :sort)))), s(:lasgn, :groups, s(:array)), s(:until, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:block, s(:lasgn, :word, s(:call, s(:lvar, :words), :pop)), s(:lasgn, :added_flag, s(:false)), s(:iter, s(:call, s(:lvar, :groups), :each), s(:args, :group), s(:if, s(:call, nil, :anagrams?, s(:call, s(:lvar, :group), :[], s(:lit, 0)), s(:lvar, :word)), s(:block, s(:call, s(:lvar, :group), :<<, s(:lvar, :word)), s(:lasgn, :added_flag, s(:true))), nil)), s(:if, s(:call, s(:lvar, :added_flag), :!), s(:call, s(:lvar, :groups), :<<, s(:array, s(:lvar, :word))), nil)), true), s(:return, s(:lvar, :groups))), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "rof"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :to_s)))