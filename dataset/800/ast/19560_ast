s(:block, s(:defn, :palindrome?, s(:args, :string), s(:lasgn, :string, s(:call, s(:call, s(:lvar, :string), :downcase), :gsub, s(:lit, /\W/), s(:str, ""))), s(:if, s(:call, s(:lvar, :string), :==, s(:call, s(:lvar, :string), :reverse)), s(:return, s(:true)), nil), s(:return, s(:false))), s(:defn, :count_words, s(:args, :string), s(:lasgn, :string_hash, s(:hash)), s(:lasgn, :string_array, s(:call, s(:call, s(:call, s(:lvar, :string), :downcase), :gsub, s(:lit, /\W/), s(:str, " ")), :split, s(:str, " "))), s(:iter, s(:call, s(:lvar, :string_array), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :string_hash), :has_key?, s(:lvar, :word)), s(:attrasgn, s(:lvar, :string_hash), :[]=, s(:lvar, :word), s(:call, s(:call, s(:lvar, :string_hash), :[], s(:lvar, :word)), :+, s(:lit, 1))), s(:attrasgn, s(:lvar, :string_hash), :[]=, s(:lvar, :word), s(:lit, 1)))), s(:return, s(:lvar, :string_hash))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :words_hash, s(:hash)), s(:lasgn, :results, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :key, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:lvar, :words_hash), :has_key?, s(:lvar, :key)), s(:call, s(:call, s(:lvar, :words_hash), :[], s(:lvar, :key)), :push, s(:lvar, :word)), s(:attrasgn, s(:lvar, :words_hash), :[]=, s(:lvar, :key), s(:array, s(:lvar, :word)))))), s(:iter, s(:call, s(:lvar, :words_hash), :each), s(:args, :key, :value), s(:call, s(:lvar, :results), :push, s(:lvar, :value))), s(:return, s(:lvar, :results))), s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "For"), s(:str, "pOTatoes"), s(:str, "RAcs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))))