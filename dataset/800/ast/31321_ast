s(:block, s(:defn, :group_anagrams, s(:args, :sorted, :result_arr), s(:lasgn, :w, s(:call, s(:lvar, :sorted), :shift)), s(:lasgn, :anagram_arr, s(:array, s(:call, s(:lvar, :w), :[], s(:lit, 0)))), s(:lasgn, :rest_arr, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :sorted), :each_index), s(:args, :i), s(:if, s(:call, s(:call, s(:lvar, :w), :[], s(:lit, 1)), :==, s(:call, s(:call, s(:lvar, :sorted), :[], s(:lvar, :i)), :[], s(:lit, 1))), s(:call, s(:lvar, :anagram_arr), :<<, s(:call, s(:call, s(:lvar, :sorted), :[], s(:lvar, :i)), :[], s(:lit, 0))), s(:call, s(:lvar, :rest_arr), :<<, s(:call, s(:lvar, :sorted), :[], s(:lvar, :i))))), s(:call, s(:lvar, :result_arr), :<<, s(:lvar, :anagram_arr)), s(:if, s(:call, s(:lvar, :rest_arr), :empty?), s(:return), nil), s(:call, nil, :group_anagrams, s(:lvar, :rest_arr), s(:lvar, :result_arr))), s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:lvar, :words), :empty?), s(:return, s(:array)), nil), s(:lasgn, :sorted, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :i), s(:block, s(:lasgn, :letter_array, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :upcase), :scan, s(:lit, /./))), s(:call, s(:lvar, :letter_array), :sort!), s(:lasgn, :sw, s(:call, s(:lvar, :letter_array), :to_s)), s(:attrasgn, s(:lvar, :sorted), :[]=, s(:lvar, :i), s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), s(:lvar, :sw))))), s(:lasgn, :result_arr, s(:array)), s(:call, nil, :group_anagrams, s(:lvar, :sorted), s(:lvar, :result_arr)), s(:return, s(:lvar, :result_arr))))