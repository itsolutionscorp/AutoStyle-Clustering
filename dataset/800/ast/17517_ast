s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:lvar, :words), :==, s(:nil)), s(:return, s(:lvar, :words)), nil), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:lvar, :words)), nil), s(:lasgn, :swords, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :w), s(:array, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:lit, //)), :sort), :join), s(:lvar, :w)))), s(:lasgn, :owords, s(:call, s(:lvar, :swords), :sort)), s(:lasgn, :road, s(:call, s(:iter, s(:call, s(:lvar, :owords), :map), s(:args, :a, :b), s(:lvar, :a)), :uniq)), s(:lasgn, :ret, s(:array)), s(:lasgn, :temp, s(:array)), s(:lasgn, :prev, s(:call, s(:call, s(:lvar, :owords), :[], s(:lit, 0)), :[], s(:lit, 0))), s(:iter, s(:call, s(:lvar, :owords), :each), s(:args, :a, :b), s(:block, s(:if, s(:call, s(:lvar, :prev), :eql?, s(:lvar, :a)), s(:call, s(:lvar, :temp), :push, s(:lvar, :b)), s(:block, s(:call, s(:lvar, :ret), :push, s(:call, s(:lvar, :temp), :sort)), s(:lasgn, :temp, s(:array)), s(:call, s(:lvar, :temp), :push, s(:lvar, :b)))), s(:lasgn, :prev, s(:lvar, :a)))), s(:call, s(:lvar, :ret), :push, s(:lvar, :temp)), s(:return, s(:lvar, :ret)))