s(:block, s(:class, :Anagrams, nil, s(:defn, :combine_anagrams, s(:args, :givenArray), s(:lasgn, :sortedArray, s(:array)), s(:lasgn, :uniqueArray, s(:array)), s(:lasgn, :finalArrays, s(:array)), s(:iter, s(:call, s(:lvar, :givenArray), :each_with_index), s(:args, :x, :y), s(:attrasgn, s(:lvar, :sortedArray), :[]=, s(:lvar, :y), s(:call, s(:call, s(:call, s(:lvar, :x), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join))), s(:lasgn, :uniqueArray, s(:call, s(:lvar, :sortedArray), :uniq)), s(:iter, s(:call, s(:lvar, :uniqueArray), :each_with_index), s(:args, :i1, :j1), s(:block, s(:call, nil, :puts, s(:call, s(:call, s(:call, s(:lvar, :j1), :to_s), :+, s(:str, " ")), :+, s(:lvar, :i1))), s(:lasgn, :workingArray, s(:array)), s(:lasgn, :idx, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :givenArray), :each_with_index), s(:args, :i2, :j2), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :givenArray), :[], s(:lvar, :j2)), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join), :==, s(:call, s(:lvar, :uniqueArray), :[], s(:lvar, :j1))), s(:block, s(:attrasgn, s(:lvar, :workingArray), :[]=, s(:lvar, :idx), s(:call, s(:lvar, :givenArray), :[], s(:lvar, :j2))), s(:lasgn, :idx, s(:call, s(:lvar, :idx), :+, s(:lit, 1)))), nil)), s(:call, nil, :puts, s(:lvar, :workingArray)), s(:attrasgn, s(:lvar, :finalArrays), :[]=, s(:lvar, :j1), s(:lvar, :workingArray)))), s(:call, nil, :puts), s(:call, nil, :puts, s(:lvar, :finalArrays)), s(:lvar, :finalArrays))), s(:lasgn, :givenArray, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :c, s(:call, s(:const, :Anagrams), :new)), s(:lasgn, :resultArray, s(:call, s(:lvar, :c), :combine_anagrams, s(:lvar, :givenArray))), s(:call, nil, :puts, s(:str, "Results array")), s(:call, nil, :puts, s(:lvar, :resultArray)))