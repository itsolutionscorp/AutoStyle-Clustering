s(:block, s(:defn, :get_anagrams, s(:args, :word, :words), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :str), s(:if, s(:call, s(:lvar, :word), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :str), :downcase), :chars), :sort), :join)), s(:yield, s(:lvar, :str)), nil))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new)), s(:while, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :word, s(:call, s(:lvar, :words), :shift)), s(:call, s(:lvar, :words), :delete, s(:lvar, :word)), s(:lasgn, :each_anagrams, s(:array, s(:lvar, :word))), s(:iter, s(:call, nil, :get_anagrams, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :each_anagrams), :[], s(:lit, 0)), :downcase), :chars), :sort), :join), s(:lvar, :words)), s(:args, :str), s(:block, s(:call, s(:lvar, :each_anagrams), :<<, s(:lvar, :str)), s(:call, s(:lvar, :words), :delete, s(:lvar, :str)))), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :each_anagrams))), true), s(:lvar, :anagrams)))