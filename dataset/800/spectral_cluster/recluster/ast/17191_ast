s(:block, s(:defn, :anagramcmp, s(:args, :w1, :w2), s(:return, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :w1), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :casecmp, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :w2), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join)))), s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:lvar, :words), :empty?), s(:return, s(:lvar, :words)), nil), s(:lasgn, :sorted, s(:iter, s(:call, s(:call, s(:lvar, :words), :each), :sort), s(:args, :w1, :w2), s(:call, nil, :anagramcmp, s(:lvar, :w1), s(:lvar, :w2)))), s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagram, s(:call, s(:lvar, :sorted), :[], s(:lit, 0))), s(:lasgn, :i, s(:lit, 0)), s(:call, s(:lvar, :anagrams), :<<, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:lit, 0), s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :sorted), :each), s(:args, :w), s(:if, s(:call, s(:call, nil, :anagramcmp, s(:lvar, :w), s(:lvar, :anagram)), :==, s(:lit, 0)), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :i)), :<<, s(:lvar, :w)), s(:block, s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))), s(:call, s(:lvar, :anagrams), :<<, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagram, s(:lvar, :w)), s(:call, s(:call, s(:lvar, :anagrams), :[], s(:lvar, :i)), :<<, s(:lvar, :w))))), s(:return, s(:lvar, :anagrams))))