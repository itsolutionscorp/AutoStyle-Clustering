s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sorted, s(:array)), s(:lasgn, :outer, s(:array)), s(:lasgn, :inner, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :sorted), :<<, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join))), s(:lasgn, :outerCount, s(:lit, 0)), s(:lasgn, :innerCount, s(:lit, 0)), s(:lasgn, :hash, s(:hash)), s(:for, s(:lvar, :sorted), s(:lasgn, :matchOuter), s(:block, s(:if, s(:call, s(:call, s(:lvar, :hash), :has_key?, s(:call, s(:lvar, :sorted), :index, s(:lvar, :matchOuter))), :==, s(:false)), s(:block, s(:for, s(:lvar, :sorted), s(:lasgn, :matchInner), s(:block, s(:if, s(:call, s(:call, s(:lvar, :matchOuter), :casecmp, s(:lvar, :matchInner)), :==, s(:lit, 0)), s(:call, s(:lvar, :inner), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :innerCount))), nil), s(:lasgn, :innerCount, s(:call, s(:lvar, :innerCount), :+, s(:lit, 1))))), s(:attrasgn, s(:lvar, :hash), :[]=, s(:call, s(:lvar, :sorted), :index, s(:lvar, :matchOuter)), s(:str, "true")), s(:call, s(:lvar, :outer), :<<, s(:call, s(:lvar, :inner), :uniq)), s(:lasgn, :inner, s(:array)), s(:lasgn, :innerCount, s(:lit, 0))), nil), s(:lasgn, :outerCount, s(:call, s(:lvar, :outerCount), :+, s(:lit, 1))))), s(:return, s(:lvar, :outer))), s(:defn, :combine_anagrams_old, s(:args, :words), s(:lasgn, :sorted, s(:array)), s(:lasgn, :outer, s(:array)), s(:lasgn, :inner, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :sorted), :<<, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join))), s(:lasgn, :outerCount, s(:lit, 0)), s(:lasgn, :innerCount, s(:lit, 0)), s(:lasgn, :hash, s(:hash)), s(:for, s(:lvar, :sorted), s(:lasgn, :matchOuter), s(:block, s(:if, s(:call, s(:call, s(:lvar, :hash), :has_key?, s(:call, s(:lvar, :sorted), :index, s(:lvar, :matchOuter))), :==, s(:false)), s(:block, s(:for, s(:lvar, :sorted), s(:lasgn, :matchInner), s(:block, s(:if, s(:call, s(:call, s(:lvar, :matchOuter), :casecmp, s(:lvar, :matchInner)), :==, s(:lit, 0)), s(:call, s(:lvar, :inner), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :innerCount))), nil), s(:lasgn, :innerCount, s(:call, s(:lvar, :innerCount), :+, s(:lit, 1))))), s(:attrasgn, s(:lvar, :hash), :[]=, s(:call, s(:lvar, :sorted), :index, s(:lvar, :matchOuter)), s(:str, "true")), s(:call, s(:lvar, :outer), :<<, s(:lvar, :inner)), s(:lasgn, :inner, s(:array)), s(:lasgn, :innerCount, s(:lit, 0))), nil), s(:lasgn, :outerCount, s(:call, s(:lvar, :outerCount), :+, s(:lit, 1))))), s(:return, s(:lvar, :outer))))