s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :swords, s(:call, s(:const, :Array), :new)), s(:lasgn, :noDups, s(:call, s(:const, :Array), :new)), s(:lasgn, :groupWords, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagrams, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :swords), :<<, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join))), s(:iter, s(:call, s(:lvar, :swords), :each), s(:args, :word), s(:if, s(:call, s(:call, s(:call, s(:lvar, :noDups), :index, s(:lvar, :word)), :nil?), :!), nil, s(:call, s(:lvar, :noDups), :<<, s(:lvar, :word)))), s(:iter, s(:call, s(:lvar, :noDups), :each), s(:args, :tword), s(:block, s(:lasgn, :groupWords, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :!=, s(:lvar, :tword)), nil, s(:call, s(:lvar, :groupWords), :<<, s(:lvar, :word)))), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :groupWords)))), s(:return, s(:lvar, :anagrams))), s(:lasgn, :w, s(:array, s(:str, "cArs"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :combine_anagrams, s(:lvar, :w)))