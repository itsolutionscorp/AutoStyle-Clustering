s(:block, s(:class, :String, nil, s(:defn, :chars, s(:args), s(:call, s(:self), :split, s(:str, "")))), s(:defn, :count_words, s(:args, :string), s(:lasgn, :h, s(:call, s(:const, :Hash), :new)), s(:attrasgn, s(:lvar, :h), :default=, s(:lit, 0)), s(:iter, s(:call, s(:call, s(:call, s(:lvar, :string), :downcase), :scan, s(:lit, /\w+/)), :each), s(:args, :word), s(:attrasgn, s(:lvar, :h), :[]=, s(:lvar, :word), s(:call, s(:call, s(:lvar, :h), :[], s(:lvar, :word)), :+, s(:lit, 1)))), s(:return, s(:lvar, :h))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :newlist, s(:call, s(:call, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :w), s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :join)), :sort), :join, s(:str, " "))), s(:lasgn, :hash, s(:call, nil, :count_words, s(:lvar, :newlist))), s(:iter, s(:call, s(:lvar, :hash), :each), s(:args, :k, :v), s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :k), s(:call, s(:const, :Array), :[]))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :k, s(:call, s(:iter, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join)), s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :k)), :<<, s(:lvar, :w)))), s(:return, s(:call, s(:lvar, :hash), :values))))