s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :ordered, s(:call, s(:const, :Array), :new, s(:lvar, :words))), s(:lasgn, :anagramArray, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagramMap, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each_index), s(:args, :x), s(:attrasgn, s(:lvar, :ordered), :[]=, s(:lvar, :x), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :x)), :downcase), :unpack, s(:str, "c*")), :sort), :pack, s(:str, "c*")))), s(:iter, s(:call, s(:lvar, :ordered), :each_index), s(:args, :x), s(:block, s(:lasgn, :orderedLetters, s(:call, s(:lvar, :ordered), :[], s(:lvar, :x))), s(:lasgn, :word, s(:call, s(:lvar, :words), :[], s(:lvar, :x))), s(:if, s(:call, s(:lvar, :anagramMap), :has_key?, s(:lvar, :orderedLetters)), s(:attrasgn, s(:lvar, :anagramMap), :[]=, s(:lvar, :orderedLetters), s(:call, s(:call, s(:lvar, :anagramMap), :fetch, s(:lvar, :orderedLetters)), :push, s(:lvar, :word))), s(:block, s(:lasgn, :array, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :array), :[]=, s(:lit, 0), s(:lvar, :word)), s(:attrasgn, s(:lvar, :anagramMap), :[]=, s(:lvar, :orderedLetters), s(:lvar, :array)))))), s(:iter, s(:call, s(:call, s(:lvar, :anagramMap), :keys), :each), s(:args, :x), s(:call, s(:lvar, :anagramArray), :push, s(:call, s(:lvar, :anagramMap), :fetch, s(:lvar, :x)))), s(:return, s(:lvar, :anagramArray))), s(:lasgn, :example, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "racs"), s(:str, "scream"), s(:str, "creams"), s(:str, "scar"))), s(:call, nil, :combine_anagrams, s(:lvar, :example)))