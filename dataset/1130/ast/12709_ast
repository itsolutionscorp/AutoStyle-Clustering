s(:block, s(:defn, :combine_anagrams, s(:args, :wordArray), s(:lasgn, :sortedCharsHash, s(:call, s(:const, :Hash), :new)), s(:lasgn, :groupedArray, s(:call, s(:const, :Array), :new)), s(:lasgn, :n, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :wordArray), :each), s(:args, :word), s(:block, s(:lasgn, :sortedChars, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join)), s(:if, s(:call, s(:lvar, :sortedCharsHash), :[], s(:lvar, :sortedChars)), s(:call, s(:call, s(:lvar, :groupedArray), :[], s(:call, s(:call, s(:lvar, :sortedCharsHash), :[], s(:lvar, :sortedChars)), :to_i)), :<<, s(:lvar, :word)), s(:block, s(:attrasgn, s(:lvar, :sortedCharsHash), :[]=, s(:lvar, :sortedChars), s(:lvar, :n)), s(:lasgn, :n, s(:call, s(:lvar, :n), :+, s(:lit, 1))), s(:call, s(:lvar, :groupedArray), :<<, s(:array, s(:lvar, :word))))))), s(:return, s(:lvar, :groupedArray))), s(:call, nil, :print, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :inspect)))