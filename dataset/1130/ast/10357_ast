s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:lvar, :words), :==, s(:nil)), s(:return, s(:array)), nil), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 1)), s(:return, s(:array, s(:lvar, :words))), nil), s(:lasgn, :sortArray, s(:iter, s(:call, s(:lvar, :words), :collect), s(:args, :item), s(:call, s(:call, s(:call, s(:call, s(:lvar, :item), :downcase), :scan, s(:lit, /./)), :sort), :join))), s(:lasgn, :uniqArray, s(:call, s(:lvar, :sortArray), :uniq)), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :item), s(:iter, s(:call, s(:lvar, :uniqArray), :each_with_index), s(:args, :uniqitem, :index), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :item), :downcase), :scan, s(:lit, /./)), :sort), :join), :==, s(:lvar, :uniqitem)), s(:if, s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :index)), :==, s(:nil)), s(:attrasgn, s(:lvar, :result), :[]=, s(:lvar, :index), s(:array, s(:lvar, :item))), s(:call, s(:call, s(:lvar, :result), :[], s(:lvar, :index)), :<<, s(:lvar, :item))), nil))), s(:return, s(:lvar, :result)))