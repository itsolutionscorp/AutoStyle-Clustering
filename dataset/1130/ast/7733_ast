s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hash, s(:call, s(:const, :Hash), :[])), s(:lasgn, :res, s(:call, s(:const, :Array), :[])), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sorted, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :word), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :downcase)), s(:call, nil, :print, s(:dstr, "SORTED: ", s(:evstr, s(:lvar, :sorted)), s(:str, "\n"))), s(:if, s(:call, s(:lvar, :hash), :has_key?, s(:lvar, :sorted)), s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :sorted)), :concat, s(:array, s(:lvar, :word))), s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :sorted), s(:array, s(:lvar, :word)))), s(:call, nil, :print, s(:dstr, "ADDED: ", s(:evstr, s(:call, s(:lvar, :hash), :[], s(:lvar, :sorted))), s(:str, "\n"))))), s(:call, nil, :print, s(:dstr, "HASH: ", s(:evstr, s(:lvar, :hash)), s(:str, "\n"))), s(:iter, s(:call, s(:lvar, :hash), :each), s(:args, :key, :value), s(:block, s(:call, nil, :print, s(:dstr, "", s(:evstr, s(:lvar, :value)), s(:str, "\n"))), s(:call, s(:lvar, :res), :concat, s(:array, s(:lvar, :value))))), s(:return, s(:lvar, :res))), s(:lasgn, :input, s(:array, s(:str, "HeLLo"), s(:str, "hello"))), s(:lasgn, :output, s(:array, s(:array, s(:str, "HeLLo"), s(:str, "hello")))), s(:lasgn, :output_test, s(:call, nil, :combine_anagrams, s(:lvar, :input))), s(:call, nil, :print, s(:dstr, "OUT 0: ", s(:evstr, s(:call, s(:lvar, :output_test), :at, s(:lit, 0))), s(:str, "\n"))), s(:call, nil, :print, s(:dstr, "OUT ", s(:evstr, s(:lvar, :output_test)), s(:str, "\n"))), s(:call, nil, :print, s(:dstr, "REF ", s(:evstr, s(:lvar, :output)), s(:str, "\n"))), s(:if, s(:call, s(:lvar, :output), :==, s(:lvar, :output_test)), s(:call, nil, :print, s(:str, "OK\n")), s(:call, nil, :print, s(:str, "FAIL\n"))))