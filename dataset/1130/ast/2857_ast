s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :output, s(:hash)), s(:lasgn, :outarray, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :cond, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join)), s(:if, s(:call, s(:lvar, :output), :has_key?, s(:lvar, :cond)), s(:attrasgn, s(:lvar, :output), :[]=, s(:lvar, :cond), s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :cond)), :<<, s(:lvar, :word))), s(:attrasgn, s(:lvar, :output), :[]=, s(:lvar, :cond), s(:call, s(:array), :<<, s(:lvar, :word)))))), s(:iter, s(:call, s(:call, s(:lvar, :output), :keys), :each), s(:args, :s), s(:call, s(:lvar, :outarray), :<<, s(:call, s(:call, s(:lvar, :output), :[], s(:lvar, :s)), :sort))), s(:lvar, :outarray)), s(:array, s(:str, "potS"), s(:str, "STOPS"), s(:str, "spots"), s(:str, "spot"), s(:str, "stop"), s(:str, "tOps"), s(:str, "tops"), s(:str, "sAUsage")))