s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:lasgn, :anag_ar, s(:call, s(:const, :Array), :new)), s(:lasgn, :done_words, s(:call, s(:const, :Array), :new)), s(:for, s(:lvar, :words), s(:lasgn, :i), s(:block, s(:if, s(:call, s(:lvar, :done_words), :include?, s(:lvar, :i)), s(:next), nil), s(:lasgn, :inertm_ar, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :inertm_ar), :push, s(:lvar, :i)), s(:lasgn, :ind, s(:call, s(:call, s(:lvar, :words), :index, s(:lvar, :i)), :+, s(:lit, 1))), s(:lasgn, :comp_ar, s(:call, s(:lvar, :words), :[], s(:lvar, :ind), s(:call, s(:lvar, :words), :length))), s(:lasgn, :wd_split, s(:call, s(:call, s(:lvar, :i), :downcase), :split, s(:str, ""))), s(:lasgn, :sort_wd, s(:call, s(:lvar, :wd_split), :sort)), s(:for, s(:lvar, :comp_ar), s(:lasgn, :j), s(:block, s(:lasgn, :comp_split, s(:call, s(:call, s(:lvar, :j), :downcase), :split, s(:str, ""))), s(:lasgn, :n_wd_split, s(:call, s(:lvar, :comp_split), :sort)), s(:if, s(:call, s(:lvar, :n_wd_split), :==, s(:lvar, :sort_wd)), s(:block, s(:call, s(:lvar, :inertm_ar), :push, s(:lvar, :j)), s(:call, s(:lvar, :done_words), :push, s(:lvar, :j))), nil))), s(:call, s(:lvar, :result), :push, s(:lvar, :inertm_ar)))), s(:return, s(:lvar, :result)))