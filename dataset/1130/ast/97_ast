s(:block, s(:defn, :canonize, s(:args, :w), s(:lasgn, :t, s(:array)), s(:iter, s(:call, s(:lvar, :w), :each_char), s(:args, :c), s(:call, s(:lvar, :t), :<<, s(:lvar, :c))), s(:call, s(:call, s(:lvar, :t), :sort!), :join)), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:call, s(:lvar, :w), :downcase!), s(:lasgn, :wc, s(:call, nil, :canonize, s(:lvar, :w))), s(:lasgn, :group, s(:if, s(:call, s(:lvar, :groups), :[], s(:lvar, :wc)), s(:call, s(:lvar, :groups), :[], s(:lvar, :wc)), s(:array))), s(:call, s(:lvar, :group), :<<, s(:lvar, :w)), s(:attrasgn, s(:lvar, :groups), :[]=, s(:lvar, :wc), s(:lvar, :group)))), s(:call, s(:lvar, :groups), :values)), s(:call, nil, :puts, s(:call, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), :inspect)))