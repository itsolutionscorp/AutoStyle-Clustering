s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :results, s(:call, s(:const, :Hash), :new)), s(:lasgn, :sorted_words, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join))), s(:lasgn, :uniq_sorted_words, s(:call, s(:lvar, :sorted_words), :uniq)), s(:iter, s(:call, s(:lvar, :uniq_sorted_words), :each), s(:args, :word), s(:attrasgn, s(:lvar, :results), :[]=, s(:lvar, :word), s(:array))), s(:iter, s(:call, s(:lvar, :results), :each_key), s(:args, :key), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :==, s(:lvar, :key)), s(:call, s(:call, s(:lvar, :results), :[], s(:lvar, :key)), :<<, s(:lvar, :word)), nil))), s(:lasgn, :results_a, s(:array)), s(:iter, s(:call, s(:lvar, :results), :each_value), s(:args, :value), s(:call, s(:lvar, :results_a), :<<, s(:lvar, :value))), s(:lvar, :results_a))