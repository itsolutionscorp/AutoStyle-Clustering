s(:block, s(:lasgn, :input, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:if, s(:call, s(:call, s(:lvar, :hash), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join)), :==, s(:nil)), s(:attrasgn, s(:lvar, :hash), :[]=, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join), s(:array)), nil), s(:call, s(:call, s(:lvar, :hash), :[], s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join)), :<<, s(:lvar, :w)))), s(:lasgn, :rList, s(:array)), s(:iter, s(:call, s(:lvar, :hash), :each_value), s(:args, :v), s(:call, s(:lvar, :rList), :<<, s(:lvar, :v))), s(:return, s(:lvar, :rList))))