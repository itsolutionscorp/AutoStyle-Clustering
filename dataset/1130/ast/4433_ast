s(:block, s(:defn, :output_results, s(:args, :all_group_array), s(:lasgn, :my_values, s(:call, s(:const, :Array), :new)), s(:lasgn, :my_keys, s(:call, s(:const, :Array), :new)), s(:lasgn, :my_group, s(:call, s(:const, :Array), :new)), s(:lasgn, :my_groups, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:call, s(:call, s(:lvar, :all_group_array), :sort), :reverse), :each), s(:args, :k, :v), s(:block, s(:call, s(:lvar, :my_keys), :push, s(:lvar, :k)), s(:call, s(:lvar, :my_values), :push, s(:lvar, :v)))), s(:for, s(:call, s(:call, s(:lvar, :my_keys), :uniq), :sort), s(:lasgn, :i), s(:block, s(:iter, s(:call, s(:lvar, :all_group_array), :each), s(:args, :k, :v), s(:if, s(:call, s(:lvar, :k), :==, s(:lvar, :i)), s(:call, s(:lvar, :my_group), :push, s(:lvar, :v)), nil)), s(:call, s(:lvar, :my_groups), :push, s(:lvar, :my_group)), s(:lasgn, :my_group, s(:array)))), s(:return, s(:lvar, :my_groups))), s(:defn, :print_hash_fingerprint, s(:args, :your_hash), s(:lasgn, :my_fingerprint, s(:call, s(:const, :String), :new)), s(:iter, s(:call, s(:lvar, :your_hash), :each), s(:args, :key, :value), s(:call, s(:call, s(:lvar, :my_fingerprint), :<<, s(:str, "")), :<<, s(:dstr, "", s(:evstr, s(:lvar, :key))))), s(:iter, s(:call, s(:lvar, :your_hash), :each), s(:args, :key, :value), s(:call, s(:call, s(:lvar, :my_fingerprint), :<<, s(:str, "")), :<<, s(:dstr, "", s(:evstr, s(:lvar, :value))))), s(:return, s(:lvar, :my_fingerprint))), s(:defn, :count_words_chars, s(:args, :your_word), s(:lasgn, :my_hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:call, s(:lvar, :your_word), :split, s(:lit, //)), :each), s(:args, :k), s(:if, s(:call, s(:lvar, :my_hash), :has_key?, s(:lvar, :k)), s(:attrasgn, s(:lvar, :my_hash), :[]=, s(:lvar, :k), s(:call, s(:call, s(:lvar, :my_hash), :[], s(:lvar, :k)), :+, s(:lit, 1))), s(:attrasgn, s(:lvar, :my_hash), :[]=, s(:lvar, :k), s(:lit, 1)))), s(:return, s(:lvar, :my_hash))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :words, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :to_s), :chomp), :strip), :downcase), :gsub, s(:lit, /[^a-z\s+]+/i), s(:str, ""))), s(:lasgn, :my_array, s(:call, s(:const, :Array), :new)), s(:lasgn, :hash_to_sort, s(:call, s(:const, :Hash), :new)), s(:lasgn, :hash_sorted, s(:call, s(:const, :Hash), :new)), s(:lasgn, :hash_to_sort, s(:call, nil, :count_words_length, s(:lvar, :words))), s(:lasgn, :hash_sorted, s(:iter, s(:call, s(:lvar, :hash_to_sort), :sort), s(:args, :k, :v), s(:call, s(:call, s(:lvar, :k), :[], s(:lit, 1)), :<=>, s(:call, s(:lvar, :v), :[], s(:lit, 1))))), s(:lasgn, :old, s(:nil)), s(:iter, s(:call, s(:lvar, :hash_sorted), :each), s(:args, :k, :v), s(:if, s(:call, s(:lvar, :old), :!=, s(:lvar, :v)), s(:block, s(:lasgn, :old, s(:lvar, :v)), s(:call, s(:lvar, :my_array), :push, s(:lvar, :old))), s(:if, s(:call, s(:lvar, :old), :==, s(:lvar, :v)), s(:lasgn, :old, s(:lvar, :v)), nil))), s(:lasgn, :your_word, s(:call, s(:const, :String), :new)), s(:lasgn, :fingerprint, s(:call, s(:const, :Array), :new)), s(:lasgn, :fingerprint_group_array, s(:call, s(:const, :Array), :new)), s(:lasgn, :my_keys, s(:call, s(:const, :Array), :new)), s(:lasgn, :h_sort, s(:call, s(:const, :Hash), :new)), s(:lasgn, :h_coded, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :my_array), :each_index), s(:args, :i), s(:lasgn, :your_word, s(:iter, s(:call, s(:lvar, :hash_sorted), :each), s(:args, :k, :v), s(:if, s(:call, s(:call, s(:lvar, :my_array), :[], s(:lvar, :i)), :==, s(:lvar, :v)), s(:block, s(:lasgn, :h, s(:call, nil, :count_words_chars, s(:lvar, :k))), s(:lasgn, :h_sort, s(:call, s(:const, :Hash), :[], s(:call, s(:lvar, :h), :sort))), s(:lasgn, :fingerprint, s(:call, s(:call, nil, :print_hash_fingerprint, s(:lvar, :h_sort)), :split, s(:str, " "))), s(:lasgn, :fingerprint, s(:svalue, s(:array, s(:lvar, :fingerprint), s(:lvar, :k)))), s(:call, s(:lvar, :fingerprint_group_array), :push, s(:lvar, :fingerprint))), nil)))), s(:return, s(:call, nil, :output_results, s(:lvar, :fingerprint_group_array)))), s(:defn, :count_words_length, s(:args, :your_string), s(:lasgn, :my_hash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:call, s(:lvar, :your_string), :split), :each), s(:args, :k), s(:block, s(:lasgn, :word_length, s(:call, s(:lvar, :k), :length)), s(:attrasgn, s(:lvar, :my_hash), :[]=, s(:lvar, :k), s(:lvar, :word_length)))), s(:return, s(:lvar, :my_hash))), s(:lasgn, :your_input, s(:call, s(:const, :Array), :new)), s(:lasgn, :your_input, s(:call, nil, :gets)), s(:lasgn, :my_original_values, s(:call, s(:const, :Array), :new)), s(:lasgn, :my_original_values, s(:lvar, :your_input)), s(:call, nil, :print, s(:lasgn, :all_group_array, s(:call, nil, :combine_anagrams, s(:lvar, :your_input)))), s(:call, nil, :print, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))))