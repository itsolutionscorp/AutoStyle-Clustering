s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anawords, s(:call, s(:const, :Array), :new, s(:call, s(:lvar, :words), :length))), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:attrasgn, s(:lvar, :anawords), :[]=, s(:lvar, :i), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :downcase), :split, s(:str, "")), :sort), :join))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :thisresult, s(:call, s(:const, :Array), :new)), s(:lasgn, :ende, s(:false)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:and, s(:call, s(:lvar, :ende), :!), s(:call, s(:call, s(:lvar, :anawords), :[], s(:lvar, :j)), :==, s(:call, s(:lvar, :anawords), :[], s(:lvar, :i)))), s(:block, s(:if, s(:call, s(:lvar, :j), :<, s(:lvar, :i)), s(:lasgn, :ende, s(:true)), nil), s(:if, s(:call, s(:lvar, :j), :>=, s(:lvar, :i)), s(:call, s(:lvar, :thisresult), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), nil)), nil)), s(:if, s(:call, s(:call, s(:lvar, :thisresult), :length), :>, s(:lit, 0)), s(:call, s(:lvar, :result), :<<, s(:lvar, :thisresult)), nil))), s(:return, s(:lvar, :result)))