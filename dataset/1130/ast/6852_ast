s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :list, s(:array)), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:lasgn, :list, s(:call, nil, :find_matches, s(:call, s(:lvar, :words), :[], s(:lit, 0)), s(:lvar, :words))), nil), s(:return, s(:lvar, :list))), s(:defn, :find_matches, s(:args, :word, :words), s(:lasgn, :mainList, s(:array)), s(:lasgn, :list1, s(:iter, s(:call, s(:lvar, :words), :find_all), s(:args, :obj), s(:call, s(:call, s(:call, s(:call, s(:lvar, :obj), :downcase), :gsub, s(:lit, /\w/)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :gsub, s(:lit, /\w/)), :sort)))), s(:call, s(:lvar, :mainList), :push, s(:lvar, :list1)), s(:lasgn, :newList, s(:iter, s(:call, s(:lvar, :words), :reject), s(:args, :obj), s(:call, s(:call, s(:call, s(:call, s(:lvar, :obj), :downcase), :gsub, s(:lit, /\w/)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :gsub, s(:lit, /\w/)), :sort)))), s(:if, s(:call, s(:call, s(:lvar, :newList), :length), :>, s(:lit, 0)), s(:block, s(:lasgn, :list2, s(:call, nil, :find_matches, s(:call, s(:lvar, :newList), :[], s(:lit, 0)), s(:lvar, :newList))), s(:call, s(:lvar, :mainList), :concat, s(:lvar, :list2))), nil), s(:return, s(:lvar, :mainList))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream")))), s(:call, nil, :puts, s(:call, nil, :combine_anagrams, s(:array))))