s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :words_final, s(:array)), s(:lasgn, :words_control, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:call, s(:lvar, :words_control), :<<, s(:lvar, :x))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:block, s(:if, s(:call, s(:lvar, :words_control), :include?, s(:lvar, :x)), s(:block, s(:lasgn, :temp, s(:array, s(:lvar, :x))), s(:call, s(:lvar, :words_control), :delete, s(:lvar, :x)), s(:iter, s(:call, s(:lvar, :words_control), :each), s(:args, :c), s(:if, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :c), :split, s(:lit, /\B/i)), :each), s(:args, :z), s(:call, s(:lvar, :z), :downcase!)), :sort), :==, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :x), :split, s(:lit, /\B/i)), :each), s(:args, :z), s(:call, s(:lvar, :z), :downcase!)), :sort)), s(:block, s(:call, s(:lvar, :temp), :<<, s(:lvar, :c)), s(:call, s(:lvar, :words_control), :delete, s(:lvar, :c))), nil))), nil), s(:call, s(:lvar, :words_final), :<<, s(:lvar, :temp)))), s(:return, s(:call, s(:lvar, :words_final), :compact)))