s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hashes, s(:call, s(:const, :Hash), :new, s(:lit, 0))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :x), s(:block, s(:lasgn, :alpha_word, s(:call, s(:call, s(:call, s(:call, s(:lvar, :x), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :hashes), :[], s(:lvar, :alpha_word)), :==, s(:lit, 0)), s(:attrasgn, s(:lvar, :hashes), :[]=, s(:lvar, :alpha_word), s(:array, s(:lvar, :x))), s(:attrasgn, s(:lvar, :hashes), :[]=, s(:lvar, :alpha_word), s(:call, s(:call, s(:lvar, :hashes), :[], s(:lvar, :alpha_word)), :<<, s(:lvar, :x)))))), s(:lasgn, :outArray, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :hashes), :each), s(:args, :key, :value), s(:call, s(:lvar, :outArray), :<<, s(:lvar, :value))), s(:return, s(:lvar, :outArray))), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :answer, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:call, s(:lvar, :answer), :inspect))