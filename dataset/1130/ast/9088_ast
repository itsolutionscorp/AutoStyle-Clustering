s(:block, s(:class, :EmptyArrayError, s(:const, :StandardError)), s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), nil, s(:call, nil, :raise, s(:const, :EmptyArrayError))), s(:lasgn, :i_prime, s(:lit, 0)), s(:lasgn, :outer_arr, s(:call, s(:const, :Array), :new, s(:lit, 0))), s(:until, s(:call, s(:lvar, :i_prime), :==, s(:call, s(:lvar, :words), :length)), s(:block, s(:lasgn, :i, s(:call, s(:lvar, :i_prime), :+, s(:lit, 1))), s(:lasgn, :isub, s(:lit, 0)), s(:if, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i_prime)), :!=, s(:nil)), s(:block, s(:lasgn, :inner_arr, s(:call, s(:const, :Array), :new, s(:lit, 0))), s(:attrasgn, s(:lvar, :inner_arr), :[]=, s(:lvar, :isub), s(:call, s(:lvar, :words), :[], s(:lvar, :i_prime))), s(:lasgn, :isub, s(:call, s(:lvar, :isub), :+, s(:lit, 1))), s(:until, s(:call, s(:lvar, :i), :==, s(:call, s(:lvar, :words), :length)), s(:block, s(:if, s(:call, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), :!=, s(:nil)), s(:if, s(:call, nil, :anagram?, s(:call, s(:lvar, :words), :[], s(:lvar, :i_prime)), s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:block, s(:attrasgn, s(:lvar, :inner_arr), :[]=, s(:lvar, :isub), s(:call, s(:lvar, :words), :[], s(:lvar, :i))), s(:attrasgn, s(:lvar, :words), :[]=, s(:lvar, :i), s(:nil)), s(:lasgn, :isub, s(:call, s(:lvar, :isub), :+, s(:lit, 1)))), nil), nil), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1)))), true), s(:call, s(:lvar, :outer_arr), :<<, s(:lvar, :inner_arr))), nil), s(:lasgn, :i_prime, s(:call, s(:lvar, :i_prime), :+, s(:lit, 1)))), true), s(:return, s(:lvar, :outer_arr))), s(:defn, :anagram?, s(:args, :w1, :w2), s(:if, s(:and, s(:call, s(:lvar, :w1), :!=, s(:nil)), s(:call, s(:lvar, :w2), :!=, s(:nil))), s(:return, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w1), :downcase), :split, s(:str, "")), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :w2), :downcase), :split, s(:str, "")), :sort))), s(:return, s(:false)))))