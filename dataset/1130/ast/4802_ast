s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :words, s(:call, nil, :remove_duplicates, s(:lvar, :words))), s(:lasgn, :anagrams, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :anagram_array, s(:array)), s(:call, s(:lvar, :anagram_array), :<<, s(:lvar, :word)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :test), s(:if, s(:or, s(:call, s(:lvar, :word), :==, s(:lvar, :test)), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :!=, s(:call, s(:call, s(:call, s(:call, s(:lvar, :test), :downcase), :chars), :sort), :join))), s(:next), s(:call, s(:lvar, :anagram_array), :<<, s(:lvar, :test)))), s(:if, s(:call, nil, :not_in_array, s(:lvar, :anagram_array), s(:lvar, :anagrams)), s(:call, s(:lvar, :anagrams), :<<, s(:lvar, :anagram_array)), nil))), s(:return, s(:lvar, :anagrams))), s(:defn, :not_in_array, s(:args, :test_array, :full_array), s(:iter, s(:call, s(:lvar, :full_array), :each), s(:args, :test), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :test), :[], s(:lit, 0)), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :test_array), :[], s(:lit, 0)), :downcase), :chars), :sort), :join)), s(:return, s(:false)), nil)), s(:return, s(:true))), s(:defn, :remove_duplicates, s(:args, :words), s(:lasgn, :new_words, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:lvar, :new_words), :index, s(:lvar, :word)), nil, s(:call, s(:lvar, :new_words), :<<, s(:lvar, :word)))), s(:return, s(:lvar, :new_words))))