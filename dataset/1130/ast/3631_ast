s(:defn, :combine_anagrams, s(:args, :list), s(:lasgn, :words, s(:call, s(:lvar, :list), :clone)), s(:if, s(:call, s(:call, s(:lvar, :words), :size), :==, s(:lit, 1)), s(:return, s(:call, s(:call, s(:const, :Array), :new), :<<, s(:lvar, :words))), s(:if, s(:call, s(:call, s(:lvar, :words), :size), :==, s(:lit, 0)), s(:return, s(:array)), nil)), s(:lasgn, :w1, s(:call, s(:lvar, :words), :[], s(:lit, 0))), s(:call, s(:lvar, :words), :delete_at, s(:lit, 0)), s(:lasgn, :sub, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :sub), :<<, s(:lvar, :w1)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w2), s(:if, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w1), :downcase), :split, s(:lit, //)), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :w2), :downcase), :split, s(:lit, //)), :sort)), s(:call, s(:lvar, :sub), :<<, s(:lvar, :w2)), nil)), s(:iter, s(:call, s(:lvar, :words), :reject!), s(:args, :x), s(:call, s(:lvar, :sub), :include?, s(:lvar, :x))), s(:return, s(:call, s(:call, nil, :combine_anagrams, s(:lvar, :words)), :<<, s(:lvar, :sub))))