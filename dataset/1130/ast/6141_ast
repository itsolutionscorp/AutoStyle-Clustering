s(:block, s(:call, nil, :require, s(:str, "pp")), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :ouArr, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :ouIt, s(:call, s(:const, :Array), :new, s(:array, s(:lvar, :w)))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w2), s(:if, s(:and, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :chars), :sort), :==, s(:call, s(:call, s(:call, s(:lvar, :w2), :downcase), :chars), :sort)), s(:call, s(:call, s(:lvar, :ouIt), :include?, s(:lvar, :w2)), :!)), s(:call, s(:lvar, :ouIt), :push, s(:lvar, :w2)), nil)), s(:call, s(:lvar, :ouIt), :sort!), s(:if, s(:call, s(:call, s(:lvar, :ouArr), :include?, s(:lvar, :ouIt)), :!), s(:call, s(:lvar, :ouArr), :push, s(:lvar, :ouIt)), nil))), s(:lvar, :ouArr)), s(:lasgn, :x, s(:call, s(:const, :Array), :new)), s(:lasgn, :x, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:lasgn, :x, s(:array, s(:str, "Cars"), s(:str, "Racs"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :pp, s(:call, nil, :combine_anagrams, s(:lvar, :x))))