s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hash_anagrams, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :anagram, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :to_s)), s(:call, nil, :printf, s(:str, "Anagram : %s\n"), s(:lvar, :anagram)), s(:if, s(:call, s(:lvar, :hash_anagrams), :include?, s(:lvar, :anagram)), s(:attrasgn, s(:lvar, :hash_anagrams), :[]=, s(:lvar, :anagram), s(:call, s(:call, s(:lvar, :hash_anagrams), :[], s(:lvar, :anagram)), :+, s(:array, s(:lvar, :word)))), s(:attrasgn, s(:lvar, :hash_anagrams), :[]=, s(:lvar, :anagram), s(:array, s(:lvar, :word)))))), s(:lasgn, :index, s(:lit, 0)), s(:lasgn, :arr_anagrams, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :hash_anagrams), :each_value), s(:args, :value), s(:block, s(:attrasgn, s(:lvar, :arr_anagrams), :[]=, s(:lvar, :index), s(:lvar, :value)), s(:lasgn, :index, s(:call, s(:lvar, :index), :+, s(:lit, 1))))), s(:lvar, :arr_anagrams))