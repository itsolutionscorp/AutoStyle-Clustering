s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagram_groups, s(:array)), s(:lasgn, :word_pairs, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :word), s(:block, s(:lasgn, :sorted_word, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :scan, s(:lit, /./)), :sort), :join)), s(:array, s(:lvar, :sorted_word), s(:lvar, :word))))), s(:until, s(:call, s(:call, s(:lvar, :word_pairs), :length), :==, s(:lit, 0)), s(:block, s(:lasgn, :word_group, s(:array)), s(:lasgn, :delete_word, s(:call, s(:call, s(:lvar, :word_pairs), :[], s(:lit, 0)), :[], s(:lit, 0))), s(:iter, s(:call, s(:lvar, :word_pairs), :each_index), s(:args, :i), s(:if, s(:call, s(:call, s(:call, s(:lvar, :word_pairs), :[], s(:lvar, :i)), :[], s(:lit, 0)), :==, s(:lvar, :delete_word)), s(:call, s(:lvar, :word_group), :<<, s(:call, s(:call, s(:lvar, :word_pairs), :[], s(:lvar, :i)), :[], s(:lit, 1))), nil)), s(:iter, s(:call, s(:lvar, :word_pairs), :delete_if), s(:args, :word_pair), s(:call, s(:lvar, :delete_word), :==, s(:call, s(:lvar, :word_pair), :[], s(:lit, 0)))), s(:call, s(:lvar, :anagram_groups), :<<, s(:lvar, :word_group))), true), s(:return, s(:lvar, :anagram_groups))), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "scream"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "cars"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:lasgn, :words, s(:array, s(:str, "a"), s(:str, "d"), s(:str, "a"), s(:str, "c"), s(:str, "c"), s(:str, "a"), s(:str, "b"), s(:str, "a"), s(:str, "d"), s(:str, "a"))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:lvar, :words))))