s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :actual_words, s(:lvar, :words)), s(:lasgn, :sorted_words, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :word), s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join))), s(:lasgn, :anagrams_map, s(:hash)), s(:iter, s(:call, s(:lvar, :sorted_words), :each_with_index), s(:args, :word, :index), s(:block, s(:if, s(:call, s(:lvar, :anagrams_map), :has_key?, s(:lvar, :word)), nil, s(:attrasgn, s(:lvar, :anagrams_map), :[]=, s(:lvar, :word), s(:call, s(:const, :Array), :new))), s(:call, s(:call, s(:lvar, :anagrams_map), :[], s(:lvar, :word)), :<<, s(:call, s(:lvar, :actual_words), :[], s(:lvar, :index))))), s(:iter, s(:call, s(:call, s(:lvar, :anagrams_map), :values), :inject, s(:array)), s(:args, :combined_anagrams, :value), s(:call, s(:lvar, :combined_anagrams), :<<, s(:lvar, :value)))), s(:call, nil, :p, s(:call, nil, :combine_anagrams, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "Racs"), s(:str, "four"), s(:str, "sCar"), s(:str, "cReams"), s(:str, "scream")))))