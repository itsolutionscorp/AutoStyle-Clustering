s(:defn, :compute, s(:args, :data1, :data2), s(:if, s(:call, s(:call, s(:lvar, :data1), :length), :!=, s(:call, s(:lvar, :data2), :length)), s(:call, nil, :raise, s(:str, "data1 must be the same length as data2 to compute Hamming distance")), nil), s(:gasgn, :$distance, s(:lit, 0)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:lvar, :data1), :length)), s(:lasgn, :i), s(:if, s(:call, s(:call, s(:lvar, :data1), :[], s(:lvar, :i)), :!=, s(:call, s(:lvar, :data2), :[], s(:lvar, :i))), s(:gasgn, :$distance, s(:call, s(:gvar, :$distance), :+, s(:lit, 1))), nil)), s(:return, s(:gvar, :$distance)))