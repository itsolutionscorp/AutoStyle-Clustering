s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :hash, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :letters, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:lit, //)), :sort), :join)), s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :letters), s(:dstr, "", s(:evstr, s(:lvar, :word)), s(:str, ","), s(:evstr, s(:call, s(:lvar, :hash), :[], s(:lvar, :letters))))))), s(:call, nil, :puts, s(:call, s(:lvar, :hash), :inspect)), s(:lasgn, :arr, s(:array)), s(:lasgn, :i, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :hash), :each), s(:args, :group), s(:block, s(:attrasgn, s(:lvar, :arr), :[]=, s(:lvar, :i), s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 1)), :split, s(:lit, /,/))), s(:call, nil, :puts, s(:dstr, "arr ", s(:evstr, s(:lvar, :i)), s(:str, " = "), s(:evstr, s(:call, s(:call, s(:lvar, :arr), :[], s(:lvar, :i)), :inspect)))), s(:lasgn, :i, s(:call, s(:lvar, :i), :+, s(:lit, 1))), s(:call, nil, :puts, s(:dstr, "", s(:evstr, s(:call, s(:lvar, :group), :[], s(:lit, 1))), s(:str, " split = "), s(:evstr, s(:call, s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 1)), :split, s(:lit, /,/)), :inspect)))), s(:call, nil, :puts, s(:call, s(:call, s(:lvar, :arr), :class), :to_s)))), s(:lvar, :arr))