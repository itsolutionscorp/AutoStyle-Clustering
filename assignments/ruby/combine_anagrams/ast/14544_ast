s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 0)), s(:return, s(:lvar, :words)), nil), s(:lasgn, :sorts, s(:array)), s(:lasgn, :new_list, s(:array)), s(:lasgn, :flag, s(:false)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:call, s(:lvar, :sorts), :push, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :split, s(:str, "")), :sort))), s(:call, s(:lvar, :new_list), :push, s(:array, s(:call, s(:lvar, :words), :[], s(:lit, 0)))), s(:call, s(:lvar, :sorts), :slice!, s(:lit, 0)), s(:iter, s(:call, s(:lvar, :sorts), :each_index), s(:args, :i), s(:block, s(:iter, s(:call, s(:lvar, :new_list), :each), s(:args, :arr), s(:block, s(:if, s(:call, s(:call, s(:lvar, :sorts), :[], s(:lvar, :i)), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :arr), :[], s(:lit, 0)), :downcase), :split, s(:str, "")), :sort)), s(:block, s(:call, s(:lvar, :arr), :push, s(:call, s(:lvar, :words), :[], s(:call, s(:lvar, :i), :+, s(:lit, 1)))), s(:lasgn, :flag, s(:false)), s(:break)), nil), s(:lasgn, :flag, s(:true)))), s(:if, s(:call, s(:lvar, :flag), :==, s(:true)), s(:call, s(:lvar, :new_list), :<<, s(:array, s(:call, s(:lvar, :words), :[], s(:call, s(:lvar, :i), :+, s(:lit, 1))))), nil), s(:lasgn, :flag, s(:false)))), s(:return, s(:lvar, :new_list)))