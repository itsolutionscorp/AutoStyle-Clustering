s(:defn, :combine_anagrams, s(:args, :words), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :>, s(:lit, 0)), s(:lasgn, :newword, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :words), :[], s(:lit, 0)), :downcase), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join)), s(:return, s(:array))), s(:lasgn, :a, s(:array, s(:array, s(:str, "dummy")))), s(:attrasgn, s(:call, s(:lvar, :a), :[], s(:lit, 0)), :[]=, s(:lit, 0), s(:lvar, :newword)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :b, s(:lit, 0)), s(:lasgn, :newword, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort_by, s(:block_pass, s(:lit, :downcase))), :join)), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :a), :length), :-, s(:lit, 1))), s(:lasgn, :w), s(:if, s(:call, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :w)), :[], s(:lit, 0)), :==, s(:lvar, :newword)), s(:block, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :w)), :insert, s(:call, s(:call, s(:lvar, :a), :[], s(:lvar, :w)), :length), s(:lvar, :word)), s(:lasgn, :b, s(:lit, 1))), nil)), s(:if, s(:call, s(:lvar, :b), :==, s(:lit, 0)), s(:block, s(:lasgn, :newarray, s(:call, s(:const, :Array), :new)), s(:attrasgn, s(:lvar, :newarray), :[]=, s(:lit, 0), s(:lvar, :newword)), s(:attrasgn, s(:lvar, :newarray), :[]=, s(:lit, 1), s(:lvar, :word)), s(:call, s(:lvar, :a), :insert, s(:call, s(:lvar, :a), :length), s(:lvar, :newarray))), nil))), s(:iter, s(:call, s(:lvar, :a), :each), s(:args, :c), s(:call, s(:lvar, :c), :delete_at, s(:lit, 0))), s(:call, nil, :puts, s(:lvar, :a)), s(:return, s(:lvar, :a)))