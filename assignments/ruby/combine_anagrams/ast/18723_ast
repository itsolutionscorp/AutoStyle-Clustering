s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :groups, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :found, s(:false)), s(:if, s(:call, s(:call, s(:lvar, :groups), :length), :==, s(:lit, 0)), s(:lasgn, :groups, s(:call, s(:lvar, :groups), :+, s(:array, s(:array, s(:lvar, :word))))), s(:block, s(:iter, s(:call, s(:lvar, :groups), :map!), s(:args, :group), s(:block, s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :group), :[], s(:lit, 0)), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:block, s(:lasgn, :group, s(:call, s(:lvar, :group), :+, s(:array, s(:lvar, :word)))), s(:lasgn, :found, s(:true))), nil), s(:lvar, :group))), s(:if, s(:call, s(:lvar, :found), :==, s(:false)), s(:lasgn, :groups, s(:call, s(:lvar, :groups), :+, s(:array, s(:array, s(:lvar, :word))))), nil))))), s(:return, s(:lvar, :groups)))