s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :input, s(:lvar, :words)), s(:lasgn, :hash, s(:hash)), s(:lasgn, :sorted, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :input), :each), s(:args, :i), s(:call, s(:lvar, :sorted), :<<, s(:call, s(:call, s(:call, s(:call, s(:lvar, :i), :downcase), :chars), :sort), :join))), s(:lasgn, :unique, s(:call, s(:lvar, :sorted), :uniq)), s(:iter, s(:call, s(:lvar, :unique), :each), s(:args, :s), s(:block, s(:attrasgn, s(:lvar, :hash), :[]=, s(:lvar, :s), s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :sorted), :each_index), s(:args, :x), s(:if, s(:call, s(:call, s(:lvar, :sorted), :[], s(:lvar, :x)), :==, s(:lvar, :s)), s(:call, s(:call, s(:lvar, :hash), :[], s(:lvar, :s)), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :x))), nil)))), s(:lasgn, :output, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :hash), :each_value), s(:args, :value), s(:call, s(:lvar, :output), :<<, s(:lvar, :value))), s(:call, nil, :pp, s(:lvar, :output)))