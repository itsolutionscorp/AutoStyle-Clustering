s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :tempHash, s(:call, s(:const, :Hash), :new)), s(:lasgn, :arrayOfGroups, s(:array)), s(:lasgn, :arrayOfGroupsHash, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :sortedWord, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :word), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join)), s(:attrasgn, s(:lvar, :tempHash), :[]=, s(:lvar, :word), s(:lvar, :sortedWord)))), s(:iter, s(:call, s(:lvar, :tempHash), :each), s(:args, :key, :value), s(:block, s(:lasgn, :tempArray, s(:array)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:if, s(:call, s(:call, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :word), :chars), :sort), s(:args, :a, :b), s(:call, s(:lvar, :a), :casecmp, s(:lvar, :b))), :join), :downcase), :==, s(:call, s(:lvar, :value), :downcase)), s(:call, s(:lvar, :tempArray), :push, s(:lvar, :word)), nil)), s(:if, s(:call, s(:call, s(:lvar, :tempArray), :length), :!=, s(:lit, 0)), s(:attrasgn, s(:lvar, :arrayOfGroupsHash), :[]=, s(:call, s(:lvar, :value), :downcase), s(:lvar, :tempArray)), nil))), s(:iter, s(:call, s(:lvar, :arrayOfGroupsHash), :each), s(:args, :key, :value), s(:call, s(:lvar, :arrayOfGroups), :push, s(:lvar, :value))), s(:return, s(:lvar, :arrayOfGroups)))