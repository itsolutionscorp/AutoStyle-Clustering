s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :anagrams_array, s(:call, s(:const, :Array), :new)), s(:lasgn, :anagrams, s(:call, s(:const, :Hash), :new, s(:lit, 0))), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:if, s(:call, s(:call, s(:lvar, :anagrams), :[], s(:call, s(:lvar, :word), :downcase)), :==, s(:lit, 1)), s(:block, s(:iter, s(:call, s(:lvar, :anagrams_array), :each), s(:args, :existing_array), s(:if, s(:call, s(:lvar, :existing_array), :include?, s(:lvar, :word)), s(:call, s(:lvar, :existing_array), :<<, s(:lvar, :word)), nil)), s(:next)), nil), s(:lasgn, :current_array, s(:call, s(:const, :Array), :new)), s(:call, s(:lvar, :current_array), :<<, s(:lvar, :word)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word_to_compare), s(:if, s(:call, s(:call, s(:lvar, :word), :downcase), :!=, s(:call, s(:lvar, :word_to_compare), :downcase)), s(:if, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word_to_compare), :downcase), :chars), :sort), :join)), s(:block, s(:call, nil, :puts, s(:dstr, "", s(:evstr, s(:lvar, :word)), s(:str, " and "), s(:evstr, s(:lvar, :word_to_compare)), s(:str, " are anagrams"))), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:call, s(:lvar, :word), :downcase), s(:lit, 1)), s(:attrasgn, s(:lvar, :anagrams), :[]=, s(:call, s(:lvar, :word_to_compare), :downcase), s(:lit, 1)), s(:call, s(:lvar, :current_array), :<<, s(:call, s(:lvar, :word_to_compare), :downcase))), nil), nil)), s(:call, s(:lvar, :anagrams_array), :<<, s(:lvar, :current_array)))), s(:return, s(:lvar, :anagrams_array)))