s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :sort_w, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :w), s(:block, s(:lasgn, :w_sort, s(:iter, s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :w), :downcase), :split, s(:str, "")), :sort), :join), :gsub, s(:lit, /(.)\1{2,}/)), s(:args, :s), s(:call, s(:call, s(:call, s(:lvar, :s), :length), :to_s), :+, s(:call, s(:lvar, :s), :[], s(:lit, 0), s(:lit, 1))))), s(:if, s(:call, s(:call, s(:lvar, :sort_w), :has_key?, s(:lvar, :w_sort)), :!), s(:attrasgn, s(:lvar, :sort_w), :[]=, s(:lvar, :w_sort), s(:array, s(:lvar, :w))), s(:attrasgn, s(:lvar, :sort_w), :[]=, s(:lvar, :w_sort), s(:call, s(:call, s(:lvar, :sort_w), :[], s(:lvar, :w_sort)), :push, s(:lvar, :w)))))), s(:lasgn, :out_array, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lvar, :sort_w), :each_key), s(:args, :ww), s(:call, s(:lvar, :out_array), :push, s(:call, s(:lvar, :sort_w), :[], s(:lvar, :ww)))), s(:return, s(:lvar, :out_array)))