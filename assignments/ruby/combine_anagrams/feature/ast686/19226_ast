s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :solution, s(:call, s(:const, :Array), :new)), s(:if, s(:call, s(:lvar, :words), :empty?), s(:lasgn, :solution, s(:array)), s(:if, s(:call, s(:call, s(:lvar, :words), :length), :==, s(:lit, 1)), s(:lasgn, :solution, s(:array, s(:lvar, :words))), s(:block, s(:lasgn, :modify, s(:iter, s(:call, s(:lvar, :words), :map), s(:args, :b), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :b), :downcase), :chars), :to_a), :sort), :join))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :modify), :length), :-, s(:lit, 1))), s(:lasgn, :i), s(:block, s(:lasgn, :tempsol, s(:array, s(:call, s(:lvar, :words), :[], s(:lvar, :i)))), s(:for, s(:dot2, s(:lit, 0), s(:call, s(:call, s(:lvar, :modify), :length), :-, s(:lit, 1))), s(:lasgn, :j), s(:if, s(:call, s(:call, s(:lvar, :modify), :[], s(:lvar, :i)), :eql?, s(:and, s(:call, s(:lvar, :modify), :[], s(:lvar, :j)), s(:call, s(:lvar, :i), :!=, s(:lvar, :j)))), s(:call, s(:lvar, :tempsol), :<<, s(:call, s(:lvar, :words), :[], s(:lvar, :j))), nil)), s(:call, s(:lvar, :solution), :<<, s(:lvar, :tempsol)))), s(:call, s(:lvar, :solution), :uniq!)))), s(:return, s(:lvar, :solution)))