digraph G {
n0 [shape=rect, label="Module"];
n1 [shape=rect, label="FunctionDef: function0"];
n2 [shape=rect, label="arguments"];
n3 [shape=rect, label="Assign"];
n4 [shape=rect, label="For"];
n5 [shape=rect, label="Return"];
n6 [shape=rect, label="Name"];
n7 [shape=rect, label="Name"];
n8 [shape=rect, label="Name"];
n9 [shape=rect, label="Num" style="filled" fillcolor="#dddddd"];
n10 [shape=rect, label="Name"];
n11 [shape=rect, label="Call"];
n12 [shape=rect, label="If"];
n13 [shape=rect, label="Name"];
n14 [shape=rect, label="Param" style="filled" fillcolor="#dddddd"];
n15 [shape=rect, label="Param" style="filled" fillcolor="#dddddd"];
n16 [shape=rect, label="Store" style="filled" fillcolor="#dddddd"];
n17 [shape=rect, label="Store" style="filled" fillcolor="#dddddd"];
n18 [shape=rect, label="get_string"];
n19 [shape=rect, label="Name"];
n20 [shape=rect, label="Compare"];
n21 [shape=rect, label="AugAssign"];
n22 [shape=rect, label="Load" style="filled" fillcolor="#dddddd"];
n23 [shape=rect, label="Load" style="filled" fillcolor="#dddddd"];
n24 [shape=rect, label="Load" style="filled" fillcolor="#dddddd"];
n25 [shape=rect, label="Name"];
n26 [shape=rect, label="In" style="filled" fillcolor="#dddddd"];
n27 [shape=rect, label="Call"];
n28 [shape=rect, label="Name"];
n29 [shape=rect, label="Add" style="filled" fillcolor="#dddddd"];
n30 [shape=rect, label="Num" style="filled" fillcolor="#dddddd"];
n31 [shape=rect, label="Load" style="filled" fillcolor="#dddddd"];
n32 [shape=rect, label="get_string"];
n33 [shape=rect, label="Name"];
n34 [shape=rect, label="Store" style="filled" fillcolor="#dddddd"];
n35 [shape=rect, label="Load" style="filled" fillcolor="#dddddd"];
n36 [shape=rect, label="Load" style="filled" fillcolor="#dddddd"];
n0 -> n1;
n1 -> n2;
n1 -> n3;
n1 -> n4;
n1 -> n5;
n2 -> n6;
n2 -> n7;
n3 -> n8;
n3 -> n9;
n4 -> n10;
n4 -> n11;
n4 -> n12;
n5 -> n13;
n6 -> n14;
n7 -> n15;
n8 -> n16;
n10 -> n17;
n11 -> n18;
n11 -> n19;
n12 -> n20;
n12 -> n21;
n13 -> n22;
n18 -> n23;
n19 -> n24;
n20 -> n25;
n20 -> n26;
n20 -> n27;
n21 -> n28;
n21 -> n29;
n21 -> n30;
n25 -> n31;
n27 -> n32;
n27 -> n33;
n28 -> n34;
n32 -> n35;
n33 -> n36;
}
