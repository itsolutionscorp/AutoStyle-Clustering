Module{[FunctionDef{'detect_anagrams', arguments{[Name{'anagram', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'a', Store{}}], Call{Name{'sorted', Load{}}, [ListComp{Call{Attribute{Name{'c', Load{}}, 'lower', Load{}}, [], [], None, None}, [comprehension{Name{'c', Store{}}, Name{'anagram', Load{}}, []}]}], [], None, None}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'words', Load{}}, [Assign{[Name{'w', Store{}}], Call{Name{'sorted', Load{}}, [ListComp{Name{'c', Load{}}, [comprehension{Name{'c', Store{}}, Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, []}]}], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'w', Load{}}, [Eq{}], [Name{'a', Load{}}]}, Compare{Name{'anagram', Load{}}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}