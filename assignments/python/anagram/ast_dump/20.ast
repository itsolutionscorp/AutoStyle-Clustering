Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'anagrams', Param{}}], None, None, []}, [Assign{[Name{'letters', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'actual_anagrams', Store{}}], List{[], Load{}}}, For{Name{'test_word', Store{}}, Name{'anagrams', Load{}}, [If{Compare{Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Continue{}], []}, Assign{[Name{'test_letters', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, If{Compare{Call{Name{'len', Load{}}, [Name{'test_letters', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'letters', Load{}}], [], None, None}]}, [Continue{}], []}, For{Name{'pair', Store{}}, Call{Name{'zip', Load{}}, [Name{'test_letters', Load{}}, Name{'letters', Load{}}], [], None, None}, [If{Compare{Subscript{Name{'pair', Load{}}, Index{Num{0}}, Load{}}, [NotEq{}], [Subscript{Name{'pair', Load{}}, Index{Num{1}}, Load{}}]}, [Break{}], []}], [Expr{Call{Attribute{Name{'actual_anagrams', Load{}}, 'append', Load{}}, [Name{'test_word', Load{}}], [], None, None}}]}], []}, Return{Name{'actual_anagrams', Load{}}}], []}]}