Module{[FunctionDef{'detect_anagrams', arguments{[Name{'orig', Param{}}, Name{'sent', Param{}}], None, None, []}, [Return{ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'sent', Load{}}, [BoolOp{And{}, [UnaryOp{Not{}, Compare{Call{Attribute{Name{'orig', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}]}}, Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'orig', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}]}]}]}}], []}]}