Module{[Expr{Str{' Anagram Test in Python'}}, ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'base_word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Expr{Str{' \n      break down the words on the list into dictionary \n      containing counts of letters and compare it with\n      the base_word.\n  '}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'letter_breakdown', Store{}}], List{[], Load{}}}, Assign{[Name{'base_word_breakdown', Store{}}], Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'base_word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'letter_breakdown', Store{}}], ListComp{Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'words', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [comprehension{Name{'words', Store{}}, Name{'word_list', Load{}}, []}]}}, Assign{[Name{'anagrams', Store{}}], ListComp{Name{'words', Load{}}, [comprehension{Tuple{[Name{'words', Store{}}, Name{'letters', Store{}}], Store{}}, Call{Name{'zip', Load{}}, [Name{'word_list', Load{}}, Name{'letter_breakdown', Load{}}], [], None, None}, [BoolOp{And{}, [Compare{Name{'base_word', Load{}}, [NotEq{}], [Call{Attribute{Name{'words', Load{}}, 'lower', Load{}}, [], [], None, None}]}, Compare{Name{'base_word_breakdown', Load{}}, [Eq{}], [Name{'letters', Load{}}]}]}]}]}}, Return{Name{'anagrams', Load{}}}], []}]}