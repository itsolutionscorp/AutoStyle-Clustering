Module{[FunctionDef{'detect_anagrams', arguments{[Name{'givenWord', Param{}}, Name{'possibleAnagrams', Param{}}], None, None, []}, [Assign{[Name{'occurances', Store{}}], Dict{[], []}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'givenWord', Store{}}], Call{Attribute{Name{'givenWord', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'ch', Store{}}, Name{'givenWord', Load{}}, [If{UnaryOp{Not{}, Compare{Name{'ch', Load{}}, [In{}], [Name{'occurances', Load{}}]}}, [Assign{[Subscript{Name{'occurances', Load{}}, Index{Name{'ch', Load{}}}, Store{}}], Call{Attribute{Name{'givenWord', Load{}}, 'count', Load{}}, [Name{'ch', Load{}}], [], None, None}}], []}], []}, For{Name{'possibleWord', Store{}}, Name{'possibleAnagrams', Load{}}, [Assign{[Name{'word', Store{}}], Call{Attribute{Name{'possibleWord', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'word', Load{}}, [NotEq{}], [Name{'givenWord', Load{}}]}, Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'givenWord', Load{}}], [], None, None}]}]}, [Assign{[Name{'lettersInWord', Store{}}], Dict{[], []}}, For{Name{'letter', Store{}}, Name{'word', Load{}}, [If{UnaryOp{Not{}, Compare{Name{'letter', Load{}}, [In{}], [Name{'lettersInWord', Load{}}]}}, [Assign{[Subscript{Name{'lettersInWord', Load{}}, Index{Name{'letter', Load{}}}, Store{}}], Call{Attribute{Name{'word', Load{}}, 'count', Load{}}, [Name{'letter', Load{}}], [], None, None}}], []}], []}, If{Compare{Name{'lettersInWord', Load{}}, [Eq{}], [Name{'occurances', Load{}}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'possibleWord', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}