Module{[FunctionDef{'detect_anagrams', arguments{[Name{'reference', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'reference', Store{}}], Call{Attribute{Name{'reference', Load{}}, 'casefold', Load{}}, [], [], None, None}}, Assign{[Name{'ref_list', Store{}}], Call{Name{'sorted', Load{}}, [Name{'reference', Load{}}], [], None, None}}, Assign{[Name{'detect_anagram', Store{}}], Lambda{arguments{[Name{'w1', Param{}}], None, None, []}, BoolOp{And{}, [Compare{Name{'w1', Load{}}, [NotEq{}], [Name{'ref', Load{}}]}, Compare{Call{Name{'sorted', Load{}}, [Name{'w1', Load{}}], [], None, None}, [Eq{}], [Name{'ref_list', Load{}}]}]}}}, Return{ListComp{Name{'word', Load{}}, [comprehension{Name{'word', Store{}}, Name{'word_list', Load{}}, [Call{Name{'detect_anagram', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'casefold', Load{}}, [], [], None, None}], [], None, None}]}]}}], []}]}