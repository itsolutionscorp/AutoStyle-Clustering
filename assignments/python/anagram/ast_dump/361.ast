Module{[FunctionDef{'detect_anagrams', arguments{[Name{'target', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'canon', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'target', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Return{ListComp{Name{'word', Load{}}, [comprehension{Name{'word', Store{}}, Name{'words', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'canon', Load{}}]}, Compare{Name{'target', Load{}}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}