Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible_anagrams', Param{}}], None, None, []}, [For{Name{'anagram', Store{}}, Name{'possible_anagrams', Load{}}, [If{UnaryOp{Not{}, Compare{Name{'anagram', Load{}}, [Eq{}], [Name{'word', Load{}}]}}, [Assign{[Name{'anagrams', Store{}}], ListComp{Name{'anagram', Load{}}, [comprehension{Name{'anagram', Store{}}, Name{'possible_anagrams', Load{}}, [Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}]}]}}, Return{Name{'anagrams', Load{}}}], [Return{List{[], Load{}}}]}], []}], []}]}