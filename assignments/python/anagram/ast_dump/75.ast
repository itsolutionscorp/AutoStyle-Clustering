Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'pos_word', Store{}}, Name{'word_list', Load{}}, [If{Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'pos_word', Load{}}], [], None, None}]}, [Assign{[Name{'wl', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'pwl', Store{}}], Call{Attribute{Name{'pos_word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'temp', Store{}}], ListComp{BoolOp{And{}, [Compare{Subscript{Name{'wl', Load{}}, Index{Name{'i', Load{}}}, Load{}}, [In{}], [Name{'pwl', Load{}}]}, Compare{Call{Attribute{Name{'wl', Load{}}, 'count', Load{}}, [Subscript{Name{'wl', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}, [Eq{}], [Call{Attribute{Name{'pwl', Load{}}, 'count', Load{}}, [Subscript{Name{'wl', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}]}]}, [comprehension{Name{'i', Store{}}, Call{Name{'range', Load{}}, [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}], [], None, None}, []}]}}, If{BoolOp{And{}, [Compare{Call{Attribute{Name{'temp', Load{}}, 'count', Load{}}, [Name{'True', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'pos_word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'pos_word', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}