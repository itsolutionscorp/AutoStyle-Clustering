Module{[FunctionDef{'detect_anagrams', arguments{[Name{'target', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'words', Load{}}, [Assign{[Name{'lword', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'ltarget', Store{}}], Call{Attribute{Name{'target', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'lword', Load{}}, [NotEq{}], [Name{'ltarget', Load{}}]}, Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'target', Load{}}], [], None, None}]}]}, [Assign{[Name{'word_chars', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Name{'set', Load{}}, [Name{'lword', Load{}}], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'target_chars', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Name{'set', Load{}}, [Name{'ltarget', Load{}}], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'word_counts', Store{}}], ListComp{Call{Attribute{Name{'lword', Load{}}, 'count', Load{}}, [Name{'c', Load{}}], [], None, None}, [comprehension{Name{'c', Store{}}, Name{'word_chars', Load{}}, []}]}}, Assign{[Name{'target_counts', Store{}}], ListComp{Call{Attribute{Name{'ltarget', Load{}}, 'count', Load{}}, [Name{'c', Load{}}], [], None, None}, [comprehension{Name{'c', Store{}}, Name{'target_chars', Load{}}, []}]}}, If{BoolOp{And{}, [Compare{Name{'word_chars', Load{}}, [Eq{}], [Name{'target_chars', Load{}}]}, Compare{Name{'word_counts', Load{}}, [Eq{}], [Name{'target_counts', Load{}}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}