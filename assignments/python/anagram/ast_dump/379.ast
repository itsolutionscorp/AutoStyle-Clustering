Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible_anagrams', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'possible', Store{}}, Name{'possible_anagrams', Load{}}, [Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'same_words', Store{}}], Compare{Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Name{'word', Load{}}]}}, Assign{[Name{'is_anagram', Store{}}], Compare{Call{Name{'sorted', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}}, If{BoolOp{And{}, [Name{'is_anagram', Load{}}, UnaryOp{Not{}, Name{'same_words', Load{}}}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'possible', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}