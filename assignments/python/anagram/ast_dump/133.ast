Module{[Import{[alias{'pdb', None}]}, FunctionDef{'detect_anagrams', arguments{[Name{'base_word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'success_list', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'word_list', Load{}}, [Assign{[Name{'success', Store{}}], Name{'True', Load{}}}, If{BoolOp{Or{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'base_word', Load{}}], [], None, None}]}, Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Num{0}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'base_word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Continue{}], [Assign{[Name{'word_char_list', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'base_word_char_list', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'base_word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, For{Name{'base_word_char', Store{}}, Name{'base_word_char_list', Load{}}, [TryExcept{[Expr{Call{Attribute{Name{'word_char_list', Load{}}, 'pop', Load{}}, [Call{Attribute{Name{'word_char_list', Load{}}, 'index', Load{}}, [Name{'base_word_char', Load{}}], [], None, None}], [], None, None}}], [ExceptHandler{Name{'ValueError', Load{}}, None, [Assign{[Name{'success', Store{}}], Name{'False', Load{}}}, Break{}]}], []}], []}, If{Name{'success', Load{}}, [Expr{Call{Attribute{Name{'success_list', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}]}], []}, Return{Name{'success_list', Load{}}}], []}]}