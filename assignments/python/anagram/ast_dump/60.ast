Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'_word', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Return{ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'candidates', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'_word', Load{}}]}, Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}