Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible_anagrams', Param{}}], None, None, []}, [Assign{[Name{'tmp_word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'matches', Store{}}], List{[], Load{}}}, For{Name{'possible_anagram', Store{}}, Name{'possible_anagrams', Load{}}, [Assign{[Name{'tmp_possible_anagram', Store{}}], Call{Attribute{Name{'possible_anagram', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'word', Load{}}, [NotEq{}], [Name{'tmp_possible_anagram', Load{}}]}, Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'tmp_possible_anagram', Load{}}], [], None, None}]}]}, [For{Name{'char', Store{}}, Name{'tmp_word', Load{}}, [Assign{[Name{'tmp_possible_anagram', Store{}}], Call{Attribute{Name{'tmp_possible_anagram', Load{}}, 'replace', Load{}}, [Name{'char', Load{}}, Str{''}, Num{1}], [], None, None}}], []}, If{Compare{Name{'tmp_possible_anagram', Load{}}, [Eq{}], [Str{''}]}, [Expr{Call{Attribute{Name{'matches', Load{}}, 'append', Load{}}, [Name{'possible_anagram', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'matches', Load{}}}], []}]}