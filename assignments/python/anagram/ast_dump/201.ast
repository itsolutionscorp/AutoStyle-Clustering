Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'string', Param{}}, Name{'listString', Param{}}], None, None, []}, [Assign{[Name{'strCounter', Store{}}], Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'string', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'retVal', Store{}}], List{[], Load{}}}, For{Name{'i', Store{}}, Name{'listString', Load{}}, [Assign{[Name{'listCounter', Store{}}], Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'i', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, If{BinOp{Compare{Name{'strCounter', Load{}}, [Eq{}], [Name{'listCounter', Load{}}]}, BitAnd{}, Compare{Call{Attribute{Name{'string', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'i', Load{}}, 'lower', Load{}}, [], [], None, None}]}}, [Expr{Call{Attribute{Name{'retVal', Load{}}, 'append', Load{}}, [Name{'i', Load{}}], [], None, None}}], []}], []}, Return{Name{'retVal', Load{}}}], []}, If{Compare{Name{'__name__', Load{}}, [Eq{}], [Str{'__main__'}]}, [Print{None, [Call{Name{'detect_anagrams', Load{}}, [Str{'banana'}, List{[Str{'banana'}], Load{}}], [], None, None}], True}], []}]}