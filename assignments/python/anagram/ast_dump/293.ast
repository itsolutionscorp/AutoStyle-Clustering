Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'result', Store{}}], List{[], Load{}}}, For{Name{'w', Store{}}, Name{'candidates', Load{}}, [Assign{[Name{'w_list', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'isAnagram', Store{}}], Name{'True', Load{}}}, For{Name{'l', Store{}}, Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [TryExcept{[Expr{Call{Attribute{Name{'w_list', Load{}}, 'remove', Load{}}, [Name{'l', Load{}}], [], None, None}}], [ExceptHandler{Name{'ValueError', Load{}}, None, [Assign{[Name{'isAnagram', Store{}}], Name{'False', Load{}}}, Break{}]}], []}], []}, If{Compare{Call{Name{'len', Load{}}, [Name{'w_list', Load{}}], [], None, None}, [NotEq{}], [Num{0}]}, [Assign{[Name{'isAnagram', Store{}}], Name{'False', Load{}}}], []}, If{Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Assign{[Name{'isAnagram', Store{}}], Name{'False', Load{}}}], []}, If{Name{'isAnagram', Load{}}, [Expr{Call{Attribute{Name{'result', Load{}}, 'append', Load{}}, [Name{'w', Load{}}], [], None, None}}], []}], []}, Return{Name{'result', Load{}}}], []}]}