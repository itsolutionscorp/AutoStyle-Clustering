Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'lst', Param{}}], None, None, []}, [Expr{Str{'Returns the anagrams for a given word from a given list.'}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'wrd', Store{}}, Name{'lst', Load{}}, [If{BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'wrd', Load{}}], [], None, None}]}, UnaryOp{Not{}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'wrd', Load{}}, 'lower', Load{}}, [], [], None, None}]}}]}, [Assign{[Name{'letters1', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'letters2', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'wrd', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, If{Compare{Name{'letters1', Load{}}, [Eq{}], [Name{'letters2', Load{}}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'wrd', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}