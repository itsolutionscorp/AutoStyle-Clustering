Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'testlist', Param{}}], None, None, []}, [Assign{[Name{'out', Store{}}], List{[], Load{}}}, Assign{[Name{'worddict', Store{}}], Dict{[], []}}, For{Name{'char', Store{}}, Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [TryExcept{[AugAssign{Subscript{Name{'worddict', Load{}}, Index{Name{'char', Load{}}}, Store{}}, Add{}, Num{1}}], [ExceptHandler{Name{'KeyError', Load{}}, None, [Assign{[Subscript{Name{'worddict', Load{}}, Index{Name{'char', Load{}}}, Store{}}], Num{1}}]}], []}], []}, For{Name{'test', Store{}}, Name{'testlist', Load{}}, [If{Compare{Call{Attribute{Name{'test', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Continue{}], []}, Assign{[Name{'testdict', Store{}}], Dict{[], []}}, For{Name{'char', Store{}}, Call{Attribute{Name{'test', Load{}}, 'lower', Load{}}, [], [], None, None}, [TryExcept{[AugAssign{Subscript{Name{'testdict', Load{}}, Index{Name{'char', Load{}}}, Store{}}, Add{}, Num{1}}], [ExceptHandler{Name{'KeyError', Load{}}, None, [Assign{[Subscript{Name{'testdict', Load{}}, Index{Name{'char', Load{}}}, Store{}}], Num{1}}]}], []}], []}, If{Compare{Name{'worddict', Load{}}, [Eq{}], [Name{'testdict', Load{}}]}, [Expr{Call{Attribute{Name{'out', Load{}}, 'append', Load{}}, [Name{'test', Load{}}], [], None, None}}], []}], []}, Return{Name{'out', Load{}}}], []}]}