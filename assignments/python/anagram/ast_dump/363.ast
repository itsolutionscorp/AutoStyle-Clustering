Module{[FunctionDef{'detect_anagrams', arguments{[Name{'targ', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'targ_sorted', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'targ', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'words_sorted', Store{}}], Call{Name{'map', Load{}}, [Lambda{arguments{[Name{'x', Param{}}], None, None, []}, Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Name{'words', Load{}}], [], None, None}}, Assign{[Name{'matching_inds', Store{}}], Call{Name{'filter', Load{}}, [Lambda{arguments{[Name{'i', Param{}}], None, None, []}, Compare{Subscript{Name{'words_sorted', Load{}}, Index{Name{'i', Load{}}}, Load{}}, [Eq{}], [Name{'targ_sorted', Load{}}]}}, Call{Name{'range', Load{}}, [Call{Name{'len', Load{}}, [Name{'words', Load{}}], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'matching_words', Store{}}], ListComp{Subscript{Name{'words', Load{}}, Index{Name{'i', Load{}}}, Load{}}, [comprehension{Name{'i', Store{}}, Name{'matching_inds', Load{}}, []}]}}, Return{Call{Name{'filter', Load{}}, [Lambda{arguments{[Name{'x', Param{}}], None, None, []}, Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'targ', Load{}}, 'lower', Load{}}, [], [], None, None}]}}, Name{'matching_words', Load{}}], [], None, None}}], []}]}