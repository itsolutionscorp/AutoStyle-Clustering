Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'options', Param{}}], None, None, []}, [Assign{[Name{'result', Store{}}], List{[], Load{}}}, Assign{[Name{'options', Store{}}], ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'options', Load{}}, [Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}}, Assign{[Name{'letters', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, For{Name{'option', Store{}}, Name{'options', Load{}}, [Assign{[Name{'anagram', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'option', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, If{Compare{Name{'letters', Load{}}, [Eq{}], [Name{'anagram', Load{}}]}, [Expr{Call{Attribute{Name{'result', Load{}}, 'append', Load{}}, [Name{'option', Load{}}], [], None, None}}], []}], []}, Return{Name{'result', Load{}}}], []}]}