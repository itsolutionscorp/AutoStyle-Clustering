Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'letter_count', Store{}}], Lambda{arguments{[Name{'w', Param{}}], None, None, []}, Call{Name{'tuple', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Call{Name{'dict', Load{}}, [Call{Name{'zip', Load{}}, [Call{Name{'list', Load{}}, [Name{'w', Load{}}], [], None, None}, ListComp{Call{Attribute{Name{'w', Load{}}, 'count', Load{}}, [Name{'x', Load{}}], [], None, None}, [comprehension{Name{'x', Store{}}, Call{Name{'list', Load{}}, [Name{'w', Load{}}], [], None, None}, []}]}], [], None, None}], [], None, None}, 'items', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}}, Return{Call{Name{'filter', Load{}}, [Lambda{arguments{[Name{'x', Param{}}], None, None, []}, BoolOp{And{}, [Compare{Call{Name{'letter_count', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'letter_count', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, UnaryOp{Not{}, Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}}]}}, Name{'word_list', Load{}}], [], None, None}}], []}]}