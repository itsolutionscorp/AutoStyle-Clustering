Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, Assign{[Name{'listify', Store{}}], Lambda{arguments{[Name{'f', Param{}}], None, None, []}, Lambda{arguments{[], 'a', 'kw', []}, Call{Name{'list', Load{}}, [Call{Name{'f', Load{}}, [], [], Name{'a', Load{}}, Name{'kw', Load{}}}], [], None, None}}}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'suspects', Param{}}], None, None, []}, [Assign{[Name{'wordl', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'wordc', Store{}}], Call{Name{'Counter', Load{}}, [Name{'wordl', Load{}}], [], None, None}}, For{Name{'suspect', Store{}}, Name{'suspects', Load{}}, [Assign{[Name{'suspectl', Store{}}], Call{Attribute{Name{'suspect', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'suspectl', Load{}}, [NotEq{}], [Name{'wordl', Load{}}]}, Compare{Call{Name{'Counter', Load{}}, [Name{'suspectl', Load{}}], [], None, None}, [Eq{}], [Name{'wordc', Load{}}]}]}, [Expr{Yield{Name{'suspect', Load{}}}}], []}], []}], [Name{'listify', Load{}}]}]}