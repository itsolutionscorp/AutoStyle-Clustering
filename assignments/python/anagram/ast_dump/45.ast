Module{[Import{[alias{'collections', None}]}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibilities', Param{}}], None, None, []}, [Assign{[Name{'matches', Store{}}], List{[], Load{}}}, Assign{[Name{'word_set', Store{}}], Call{Attribute{Name{'collections', Load{}}, 'Counter', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'possibilities_set', Store{}}], DictComp{Name{'possible', Load{}}, Call{Attribute{Name{'collections', Load{}}, 'Counter', Load{}}, [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [comprehension{Name{'possible', Store{}}, Name{'possibilities', Load{}}, []}]}}, For{Name{'possible_match', Store{}}, Name{'possibilities_set', Load{}}, [If{BoolOp{And{}, [Compare{Subscript{Name{'possibilities_set', Load{}}, Index{Name{'possible_match', Load{}}}, Load{}}, [Eq{}], [Name{'word_set', Load{}}]}, Compare{Call{Attribute{Name{'possible_match', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'matches', Load{}}, 'insert', Load{}}, [Num{0}, Name{'possible_match', Load{}}], [], None, None}}], []}], []}, Return{Name{'matches', Load{}}}], []}]}