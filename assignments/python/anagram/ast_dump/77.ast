Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'word_c', Store{}}], Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Return{ListComp{Name{'w', Load{}}, [comprehension{Name{'w', Store{}}, Name{'word_list', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'word_c', Load{}}]}, Compare{Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'word', Load{}}]}]}]}]}}], []}]}