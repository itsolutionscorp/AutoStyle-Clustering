Module{[Assign{[Name{'_normalize', Store{}}], Lambda{arguments{[Name{'s', Param{}}], None, None, []}, Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}}, Assign{[Name{'_same_word', Store{}}], Lambda{arguments{[Name{'x', Param{}}, Name{'y', Param{}}], None, None, []}, Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'y', Load{}}, 'lower', Load{}}, [], [], None, None}]}}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'word_sorted', Store{}}], Call{Name{'_normalize', Load{}}, [Name{'word', Load{}}], [], None, None}}, Assign{[Name{'list_sorted', Store{}}], GeneratorExp{Call{Name{'_normalize', Load{}}, [Name{'w', Load{}}], [], None, None}, [comprehension{Name{'w', Store{}}, Name{'word_list', Load{}}, []}]}}, Assign{[Name{'zipped', Store{}}], Call{Name{'zip', Load{}}, [Name{'word_list', Load{}}, Name{'list_sorted', Load{}}], [], None, None}}, Return{ListComp{Subscript{Name{'z', Load{}}, Index{Num{0}}, Load{}}, [comprehension{Name{'z', Store{}}, Name{'zipped', Load{}}, [BoolOp{And{}, [Compare{Subscript{Name{'z', Load{}}, Index{Num{1}}, Load{}}, [Eq{}], [Name{'word_sorted', Load{}}]}, UnaryOp{Not{}, Call{Name{'_same_word', Load{}}, [Subscript{Name{'z', Load{}}, Index{Num{0}}, Load{}}, Name{'word', Load{}}], [], None, None}}]}]}]}}], []}]}