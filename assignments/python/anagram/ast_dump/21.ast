Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'pos_list', Param{}}], None, None, []}, [Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'r', Store{}}], Call{Name{'Counter', Load{}}, [Name{'word', Load{}}], [], None, None}}, Assign{[Name{'f', Store{}}], ListComp{Name{'i', Load{}}, [comprehension{Name{'i', Store{}}, Name{'pos_list', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'i', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'r', Load{}}]}, Compare{Call{Attribute{Name{'i', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'word', Load{}}]}]}]}]}}, Return{Name{'f', Load{}}}], []}]}