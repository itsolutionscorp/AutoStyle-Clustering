Module{[Expr{Str{'\nanagram.py program that, given a word and a list of possible anagrams,\nselects the correct sublist.\n'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibilities', Param{}}], None, None, []}, [Expr{Str{'\n    Function to return a list of anagram matches for incoming word.\n        word word to try and match against possibilities list\n        possibilities a list of words to match against for possible anagrams\n    '}}, Assign{[Name{'reordered_word', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'matches', Store{}}], List{[], Load{}}}, For{Name{'match', Store{}}, Name{'possibilities', Load{}}, [If{Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'match', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Pass{}], [If{Compare{Name{'reordered_word', Load{}}, [Eq{}], [Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'match', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}]}, [Expr{Call{Attribute{Name{'matches', Load{}}, 'append', Load{}}, [Name{'match', Load{}}], [], None, None}}], []}]}], []}, Return{Name{'matches', Load{}}}], []}]}