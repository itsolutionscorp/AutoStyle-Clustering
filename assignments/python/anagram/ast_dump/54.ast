Module{[Import{[alias{'string', None}]}, FunctionDef{'detect_anagrams', arguments{[Name{'anagram', Param{}}, Name{'words', Param{}}], None, None, []}, [Return{ListComp{Name{'word', Load{}}, [comprehension{Name{'word', Store{}}, Name{'words', Load{}}, [BoolOp{And{}, [Compare{Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}, Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}]}]}]}}], []}]}