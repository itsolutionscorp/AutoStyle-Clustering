Module{[Import{[alias{'re', None}]}, FunctionDef{'detect_anagrams', arguments{[Name{'sub_choice', Param{}}, Name{'choices', Param{}}], None, None, []}, [Assign{[Name{'almost_there', Store{}}], ListComp{Name{'choice', Load{}}, [comprehension{Name{'choice', Store{}}, Name{'choices', Load{}}, [BoolOp{And{}, [Call{Attribute{Name{'re', Load{}}, 'search', Load{}}, [Call{Attribute{Str{'[{}]{{{}}}'}, 'format', Load{}}, [Name{'sub_choice', Load{}}, Call{Name{'len', Load{}}, [Name{'sub_choice', Load{}}], [], None, None}], [], None, None}, Name{'choice', Load{}}, Attribute{Name{'re', Load{}}, 'IGNORECASE', Load{}}], [], None, None}, Compare{Call{Name{'len', Load{}}, [Name{'choice', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'sub_choice', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'choice', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'sub_choice', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}, For{Name{'word', Store{}}, Name{'almost_there', Load{}}, [For{Name{'char', Store{}}, Name{'sub_choice', Load{}}, [If{Compare{Call{Attribute{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, 'count', Load{}}, [Name{'char', Load{}}], [], None, None}, [NotEq{}], [Call{Attribute{Call{Attribute{Name{'sub_choice', Load{}}, 'lower', Load{}}, [], [], None, None}, 'count', Load{}}, [Name{'char', Load{}}], [], None, None}]}, [Expr{Call{Attribute{Name{'almost_there', Load{}}, 'pop', Load{}}, [Call{Attribute{Name{'almost_there', Load{}}, 'index', Load{}}, [Name{'word', Load{}}], [], None, None}], [], None, None}}, Break{}], []}], []}], []}, Return{Name{'almost_there', Load{}}}], []}]}