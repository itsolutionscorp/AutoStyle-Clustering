Module{[FunctionDef{'detect_anagrams', arguments{[Name{'real_str', Param{}}, Name{'strings', Param{}}], None, None, []}, [Assign{[Name{'target', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'real_str', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'short_strings', Store{}}], ListComp{Name{'s', Load{}}, [comprehension{Name{'s', Store{}}, Name{'strings', Load{}}, [Compare{Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'real_str', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}}, Assign{[Name{'matches', Store{}}], List{[], Load{}}}, For{Name{'str', Store{}}, Name{'short_strings', Load{}}, [If{Compare{Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'str', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}, [Eq{}], [Name{'target', Load{}}]}, [Expr{Call{Attribute{Name{'matches', Load{}}, 'append', Load{}}, [Name{'str', Load{}}], [], None, None}}], []}], []}, Return{Name{'matches', Load{}}}], []}]}