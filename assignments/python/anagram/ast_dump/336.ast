Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'s', Param{}}], None, None, []}, [Assign{[Name{'nums', Store{}}], ListComp{Call{Name{'ord', Load{}}, [Name{'letter', Load{}}], [], None, None}, [comprehension{Name{'letter', Store{}}, Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, []}]}}, Expr{Call{Attribute{Name{'nums', Load{}}, 'sort', Load{}}, [], [], None, None}}, Assign{[Name{'ans', Store{}}], List{[], Load{}}}, For{Name{'item', Store{}}, Name{'s', Load{}}, [Assign{[Name{'temp', Store{}}], ListComp{Call{Name{'ord', Load{}}, [Name{'letter', Load{}}], [], None, None}, [comprehension{Name{'letter', Store{}}, Call{Attribute{Name{'item', Load{}}, 'lower', Load{}}, [], [], None, None}, []}]}}, Expr{Call{Attribute{Name{'temp', Load{}}, 'sort', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'temp', Load{}}, [Eq{}], [Name{'nums', Load{}}]}, Compare{Call{Attribute{Name{'item', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'ans', Load{}}, 'append', Load{}}, [Name{'item', Load{}}], [], None, None}}], []}], []}, Return{Name{'ans', Load{}}}], []}]}