Module{[FunctionDef{'detect_anagrams', arguments{[Name{'master', Param{}}, Name{'candidates', Param{}}], None, None, []}, [ImportFrom{'itertools', [alias{'permutations', None}], 0}, Assign{[Name{'all_perms', Store{}}], ListComp{Call{Attribute{Str{''}, 'join', Load{}}, [Name{'p', Load{}}], [], None, None}, [comprehension{Name{'p', Store{}}, Call{Name{'permutations', Load{}}, [Call{Attribute{Name{'master', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, []}]}}, Return{ListComp{Name{'cand', Load{}}, [comprehension{Name{'cand', Store{}}, Name{'candidates', Load{}}, [BoolOp{And{}, [Compare{Call{Attribute{Name{'cand', Load{}}, 'lower', Load{}}, [], [], None, None}, [In{}], [Name{'all_perms', Load{}}]}, Compare{Call{Attribute{Name{'cand', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'master', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}