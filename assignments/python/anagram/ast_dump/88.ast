Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [If{Compare{Name{'word', Load{}}, [In{}], [Name{'word_list', Load{}}]}, [Return{List{[], Load{}}}], []}, Assign{[Name{'word_c', Store{}}], Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'word_list_counters', Store{}}], Call{Name{'dict', Load{}}, [Call{Name{'zip', Load{}}, [Name{'word_list', Load{}}, GeneratorExp{Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [comprehension{Name{'w', Store{}}, Name{'word_list', Load{}}, []}]}], [], None, None}], [], None, None}}, Assign{[Name{'anagrams', Store{}}], ListComp{Name{'w', Load{}}, [comprehension{Name{'w', Store{}}, Name{'word_list_counters', Load{}}, [BoolOp{And{}, [Compare{Subscript{Name{'word_list_counters', Load{}}, Index{Name{'w', Load{}}}, Load{}}, [Eq{}], [Name{'word_c', Load{}}]}, Compare{Name{'w', Load{}}, [NotEq{}], [Name{'word', Load{}}]}]}]}]}}, Expr{Call{Attribute{Name{'anagrams', Load{}}, 'reverse', Load{}}, [], [], None, None}}, Return{Name{'anagrams', Load{}}}], []}]}