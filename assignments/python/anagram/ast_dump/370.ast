Module{[Expr{Str{'anagram function'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'slist', Param{}}], None, None, []}, [Expr{Str{'detect_anagrams in slist'}}, Assign{[Name{'makelist', Store{}}], Lambda{arguments{[Name{'s', Param{}}], None, None, []}, Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}}, Assign{[Name{'slist', Store{}}], ListComp{Name{'s', Load{}}, [comprehension{Name{'s', Store{}}, Name{'slist', Load{}}, [Compare{Call{Name{'len', Load{}}, [Name{'s', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}]}]}}, Assign{[Name{'wlist', Store{}}], Call{Name{'makelist', Load{}}, [Name{'word', Load{}}], [], None, None}}, Return{ListComp{Name{'w', Load{}}, [comprehension{Name{'w', Store{}}, Name{'slist', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'makelist', Load{}}, [Name{'w', Load{}}], [], None, None}, [Eq{}], [Name{'wlist', Load{}}]}, Compare{Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}