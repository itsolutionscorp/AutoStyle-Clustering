Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidate_list', Param{}}], None, None, []}, [Assign{[Name{'word_length', Store{}}], Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}}, Assign{[Name{'word_lowercase', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'word_sorted', Store{}}], Call{Name{'sorted', Load{}}, [Name{'word_lowercase', Load{}}], [], None, None}}, Assign{[Name{'anagrams', Store{}}], ListComp{Name{'candidate', Load{}}, [comprehension{Name{'candidate', Store{}}, Name{'candidate_list', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'candidate', Load{}}], [], None, None}, [Eq{}], [Name{'word_length', Load{}}]}, UnaryOp{Not{}, Compare{Call{Attribute{Name{'candidate', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Name{'word_lowercase', Load{}}]}}, Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'candidate', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'word_sorted', Load{}}]}]}]}]}}, Return{Name{'anagrams', Load{}}}], []}]}