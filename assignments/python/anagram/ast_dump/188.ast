Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'wordlist', Param{}}], None, None, []}, [Assign{[Name{'word_Counter', Store{}}], Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'list_to_return', Store{}}], Call{Name{'list', Load{}}, [], [], None, None}}, For{Name{'test_word', Store{}}, Name{'wordlist', Load{}}, [If{BoolOp{And{}, [Compare{Name{'word_Counter', Load{}}, [Eq{}], [Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, Compare{Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'list_to_return', Load{}}, 'append', Load{}}, [Name{'test_word', Load{}}], [], None, None}}], []}], []}, Return{Name{'list_to_return', Load{}}}], []}]}