Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word1', Param{}}, Name{'wordlist', Param{}}], None, None, []}, [Expr{Str{'\n    Return True if anagram of word1 found in wordList else False\n    param word1 String\n    param wordlist List of Strings\n    return bool\n    '}}, Assign{[Name{'word1_lower', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word1', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Return{ListComp{Name{'word', Load{}}, [comprehension{Name{'word', Store{}}, Name{'wordlist', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'word1_lower', Load{}}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word1', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}