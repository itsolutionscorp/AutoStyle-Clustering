Module{[Expr{Str{'\nAnagram\n'}}, Assign{[Name{'__version__', Store{}}], Str{'0.0.1'}}, Assign{[Name{'__all__', Store{}}], List{[Str{'__version__'}, Str{'detect_anagrams'}], Load{}}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Expr{Str{'Given a word and a list of possible anagrams,\n    selects the correct sublist.\n    .. versionadded 0.0.1\n    param word the word\n    param word_list list of possible anagrams\n    '}}, Assign{[Name{'_length', Store{}}], Lambda{arguments{[Name{'a', Param{}}], None, None, []}, Compare{Call{Name{'len', Load{}}, [Name{'a', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}}}, Assign{[Name{'_same', Store{}}], Lambda{arguments{[Name{'a', Param{}}], None, None, []}, Compare{Call{Attribute{Name{'a', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}}}, Assign{[Name{'_sorted', Store{}}], Lambda{arguments{[Name{'a', Param{}}], None, None, []}, Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'a', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}}}, Return{Call{Name{'filter', Load{}}, [Lambda{arguments{[Name{'a', Param{}}], None, None, []}, BoolOp{And{}, [Call{Name{'_length', Load{}}, [Name{'a', Load{}}], [], None, None}, Call{Name{'_same', Load{}}, [Name{'a', Load{}}], [], None, None}, Call{Name{'_sorted', Load{}}, [Name{'a', Load{}}], [], None, None}]}}, Name{'word_list', Load{}}], [], None, None}}], []}]}