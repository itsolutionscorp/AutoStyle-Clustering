Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'anagrams', Param{}}], None, None, []}, [Assign{[Name{'real_anagrams', Store{}}], List{[], Load{}}}, For{Name{'candidate', Store{}}, Name{'anagrams', Load{}}, [Assign{[Name{'lower_word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'lower_candidate', Store{}}], Call{Attribute{Name{'candidate', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'char', Store{}}, Name{'lower_word', Load{}}, [If{Compare{Name{'char', Load{}}, [In{}], [Name{'lower_candidate', Load{}}]}, [Assign{[Name{'lower_candidate', Store{}}], Call{Attribute{Name{'lower_candidate', Load{}}, 'replace', Load{}}, [Name{'char', Load{}}, Str{''}, Num{1}], [], None, None}}], []}], []}, If{BoolOp{And{}, [UnaryOp{Not{}, Name{'lower_candidate', Load{}}}, Compare{Call{Name{'len', Load{}}, [Name{'candidate', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}]}, [If{Compare{Call{Attribute{Name{'candidate', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'lower_word', Load{}}]}, [Expr{Call{Attribute{Name{'real_anagrams', Load{}}, 'append', Load{}}, [Name{'candidate', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'real_anagrams', Load{}}}], []}]}