Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, ClassDef{'Anagram', [], [FunctionDef{'__init__', arguments{[Name{'self', Param{}}, Name{'a', Param{}}], None, None, []}, [Assign{[Attribute{Name{'self', Load{}}, 'match', Store{}}], Lambda{arguments{[Name{'l', Param{}}], None, None, []}, ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'l', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'a', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, Compare{Call{Attribute{Name{'a', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}}], []}], []}]}