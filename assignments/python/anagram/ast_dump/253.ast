Module{[FunctionDef{'detect_anagrams', arguments{[Name{'origin', Param{}}, Name{'possible', Param{}}], None, None, []}, [Assign{[Name{'answer', Store{}}], List{[], Load{}}}, Assign{[Name{'letter_match_count', Store{}}], Num{0}}, For{Name{'word', Store{}}, Name{'possible', Load{}}, [If{BoolOp{Or{}, [Compare{Call{Attribute{Name{'origin', Load{}}, 'upper', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'word', Load{}}, 'upper', Load{}}, [], [], None, None}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'find', Load{}}, [Name{'origin', Load{}}], [], None, None}, [NotEq{}], [Num{-1}]}, Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'origin', Load{}}], [], None, None}]}]}, [Pass{}], [Assign{[Name{'letter_match_count', Store{}}], Num{0}}, For{Name{'letter', Store{}}, Name{'origin', Load{}}, [If{Compare{Call{Attribute{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, 'count', Load{}}, [Call{Attribute{Name{'letter', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Attribute{Call{Attribute{Name{'origin', Load{}}, 'lower', Load{}}, [], [], None, None}, 'count', Load{}}, [Call{Attribute{Name{'letter', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, [AugAssign{Name{'letter_match_count', Store{}}, Add{}, Num{1}}], [Break{}]}], []}, If{Compare{Name{'letter_match_count', Load{}}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}, [Expr{Call{Attribute{Name{'answer', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}]}], []}, Return{Name{'answer', Load{}}}], []}]}