Module{[FunctionDef{'detect_anagrams', arguments{[Name{'case_word', Param{}}, Name{'test_words', Param{}}], None, None, []}, [Assign{[Name{'ana_list', Store{}}], List{[], Load{}}}, Assign{[Name{'case_word', Store{}}], Call{Attribute{Name{'case_word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'i', Store{}}, Call{Name{'range', Load{}}, [Call{Name{'len', Load{}}, [Name{'test_words', Load{}}], [], None, None}], [], None, None}, [If{BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'case_word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Subscript{Name{'test_words', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}]}, Compare{Name{'case_word', Load{}}, [NotEq{}], [Call{Attribute{Subscript{Name{'test_words', Load{}}, Index{Name{'i', Load{}}}, Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Assign{[Name{'test_list', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Subscript{Name{'test_words', Load{}}, Index{Name{'i', Load{}}}, Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, For{Name{'x', Store{}}, Call{Name{'list', Load{}}, [Name{'case_word', Load{}}], [], None, None}, [If{BoolOp{And{}, [Compare{Name{'x', Load{}}, [In{}], [Name{'test_list', Load{}}]}, Compare{Call{Name{'len', Load{}}, [Name{'test_list', Load{}}], [], None, None}, [Eq{}], [Num{1}]}]}, [Expr{Call{Attribute{Name{'ana_list', Load{}}, 'append', Load{}}, [Subscript{Name{'test_words', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}}], [If{Compare{Name{'x', Load{}}, [In{}], [Name{'test_list', Load{}}]}, [Expr{Call{Attribute{Name{'test_list', Load{}}, 'remove', Load{}}, [Name{'x', Load{}}], [], None, None}}], [Break{}]}]}], []}], []}], []}, Return{Name{'ana_list', Load{}}}], []}]}