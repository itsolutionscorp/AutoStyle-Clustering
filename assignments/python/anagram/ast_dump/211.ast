Module{[FunctionDef{'detect_anagrams', arguments{[Name{'str1', Param{}}, Name{'str_list', Param{}}], None, None, []}, [Assign{[Name{'sortedStr', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'str1', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'result', Store{}}], ListComp{Name{'s', Load{}}, [comprehension{Name{'s', Store{}}, Name{'str_list', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'sortedStr', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'s', Load{}}], [], None, None}]}, Compare{Name{'str1', Load{}}, [NotEq{}], [Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}]}, Compare{Name{'sortedStr', Load{}}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}]}]}]}}, Return{Name{'result', Load{}}}], []}]}