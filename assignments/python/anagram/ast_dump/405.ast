Module{[FunctionDef{'detect_anagrams', arguments{[Name{'given_word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'test_word', Store{}}, Name{'candidates', Load{}}, [Assign{[Name{'lc_given', Store{}}], Call{Attribute{Name{'given_word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'lc_test', Store{}}], Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'lc_given', Load{}}, [NotEq{}], [Name{'lc_test', Load{}}]}, Compare{Call{Name{'sorted', Load{}}, [Name{'lc_given', Load{}}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Name{'lc_test', Load{}}], [], None, None}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'test_word', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}