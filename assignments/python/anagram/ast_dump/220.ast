Module{[FunctionDef{'detect_anagrams', arguments{[Name{'base', Param{}}, Name{'potentials', Param{}}], None, None, []}, [Expr{Str{'Returns a list of anagrams for the base from a list of potentials'}}, Assign{[Name{'potentials', Store{}}], ListComp{Name{'p', Load{}}, [comprehension{Name{'p', Store{}}, Name{'potentials', Load{}}, [Compare{Call{Attribute{Name{'p', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'base', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}}, Return{ListComp{Name{'p', Load{}}, [comprehension{Name{'p', Store{}}, Name{'potentials', Load{}}, [Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'p', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'base', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}]}]}}], []}]}