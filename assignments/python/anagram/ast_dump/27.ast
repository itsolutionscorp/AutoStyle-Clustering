Module{[ImportFrom{'itertools', [alias{'permutations', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibles', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], Call{Name{'list', Load{}}, [Call{Name{'set', Load{}}, [ListComp{Call{Attribute{Str{''}, 'join', Load{}}, [Name{'p', Load{}}], [], None, None}, [comprehension{Name{'p', Store{}}, Call{Name{'permutations', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}], [], None, None}, []}]}], [], None, None}], [], None, None}}, Assign{[Name{'results', Store{}}], List{[], Load{}}}, For{Name{'p', Store{}}, Name{'possibles', Load{}}, [If{BoolOp{And{}, [Compare{Call{Attribute{Name{'p', Load{}}, 'lower', Load{}}, [], [], None, None}, [In{}], [Name{'anagrams', Load{}}]}, Compare{Call{Attribute{Name{'p', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'results', Load{}}, 'append', Load{}}, [Name{'p', Load{}}], [], None, None}}], []}], []}, Return{Name{'results', Load{}}}], []}]}