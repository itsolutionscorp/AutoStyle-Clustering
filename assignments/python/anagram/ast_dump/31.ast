Module{[Assign{[Name{'__author__', Store{}}], Str{'cameron'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'anagram', Param{}}], None, None, []}, [Assign{[Name{'matches', Store{}}], Str{''}}, Assign{[Name{'sortedword', Store{}}], Call{Name{'sorted', Load{}}, [Name{'word', Load{}}], [], None, None}}, For{Name{'alt', Store{}}, Name{'anagram', Load{}}, [If{Compare{Name{'sortedword', Load{}}, [Eq{}], [Call{Name{'sorted', Load{}}, [Name{'alt', Load{}}], [], None, None}]}, [AugAssign{Name{'matches', Store{}}, Add{}, BinOp{Name{'alt', Load{}}, Add{}, Str{' '}}}], []}], []}, Return{Call{Attribute{Name{'matches', Load{}}, 'split', Load{}}, [], [], None, None}}], []}]}