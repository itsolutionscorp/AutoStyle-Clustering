Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'wordList', Param{}}], None, None, []}, [Assign{[Name{'sort', Store{}}], Lambda{arguments{[Name{'x', Param{}}], None, None, []}, Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}], [], None, None}}}, Assign{[Name{'alp', Store{}}], Call{Name{'sort', Load{}}, [Name{'word', Load{}}], [], None, None}}, Assign{[Name{'alpList', Store{}}], Call{Name{'map', Load{}}, [Name{'sort', Load{}}, Name{'wordList', Load{}}], [], None, None}}, Assign{[Name{'ret', Store{}}], List{[], Load{}}}, For{Tuple{[Name{'i', Store{}}, Name{'w', Store{}}], Store{}}, Call{Name{'enumerate', Load{}}, [Name{'alpList', Load{}}], [], None, None}, [If{BoolOp{And{}, [Compare{Name{'w', Load{}}, [Eq{}], [Name{'alp', Load{}}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Subscript{Name{'wordList', Load{}}, Index{Name{'i', Load{}}}, Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'ret', Load{}}, 'append', Load{}}, [Subscript{Name{'wordList', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}}], []}], []}, Return{Name{'ret', Load{}}}], []}]}