Module{[FunctionDef{'detect_anagrams', arguments{[Name{'anagram', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'anagram_lower', Store{}}], Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'letters', Store{}}], SetComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'anagram', Load{}}, []}]}}, Assign{[Name{'anagram_list', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'word_list', Load{}}, [Assign{[Name{'count', Store{}}], Num{0}}, Assign{[Name{'word_lower', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Is{}], [Call{Name{'len', Load{}}, [Name{'anagram', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'anagram', Load{}}]}]}, [For{Name{'letter', Store{}}, Name{'letters', Load{}}, [If{Compare{Call{Attribute{Name{'anagram_lower', Load{}}, 'count', Load{}}, [Name{'letter', Load{}}], [], None, None}, [Is{}], [Call{Attribute{Name{'word_lower', Load{}}, 'count', Load{}}, [Name{'letter', Load{}}], [], None, None}]}, [AugAssign{Name{'count', Store{}}, Add{}, Num{1}}], []}], []}, If{Compare{Name{'count', Load{}}, [Is{}], [Call{Name{'len', Load{}}, [Name{'letters', Load{}}], [], None, None}]}, [Expr{Call{Attribute{Name{'anagram_list', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagram_list', Load{}}}], []}]}