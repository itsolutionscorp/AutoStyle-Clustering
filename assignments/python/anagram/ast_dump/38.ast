Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibles', Param{}}], None, None, []}, [Assign{[Name{'out', Store{}}], List{[], Load{}}}, For{Name{'p', Store{}}, Name{'possibles', Load{}}, [If{Compare{Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'p', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, [If{UnaryOp{Not{}, Compare{Call{Attribute{Name{'p', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}}, [Expr{Call{Attribute{Name{'out', Load{}}, 'append', Load{}}, [Name{'p', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'out', Load{}}}], []}]}