Module{[FunctionDef{'detect_anagrams', arguments{[Name{'ref', Param{}}, Name{'compare', Param{}}], None, None, []}, [Assign{[Name{'ref_length', Store{}}], Call{Name{'len', Load{}}, [Name{'ref', Load{}}], [], None, None}}, Assign{[Name{'ref_sorted', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'ref', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'out', Store{}}], List{[], Load{}}}, For{Name{'c', Store{}}, Name{'compare', Load{}}, [If{BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'c', Load{}}], [], None, None}, [Eq{}], [Name{'ref_length', Load{}}]}, Compare{Call{Attribute{Name{'c', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'ref', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [If{Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'c', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'ref_sorted', Load{}}]}, [Expr{Call{Attribute{Name{'out', Load{}}, 'append', Load{}}, [Name{'c', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'out', Load{}}}], []}]}