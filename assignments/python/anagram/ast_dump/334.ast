Module{[ImportFrom{'itertools', [alias{'permutations', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'anagrams', Param{}}], None, None, []}, [Return{ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'anagrams', Load{}}, [BoolOp{And{}, [Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}, Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [In{}], [Call{Attribute{Call{Name{'set', Load{}}, [ListComp{Call{Attribute{Name{'a', Load{}}, 'lower', Load{}}, [], [], None, None}, [comprehension{Name{'a', Store{}}, Name{'anagrams', Load{}}, []}]}], [], None, None}, 'intersection', Load{}}, [ListComp{Call{Attribute{Str{''}, 'join', Load{}}, [Name{'p', Load{}}], [], None, None}, [comprehension{Name{'p', Store{}}, Call{Name{'permutations', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, []}]}], [], None, None}]}]}]}]}}], []}]}