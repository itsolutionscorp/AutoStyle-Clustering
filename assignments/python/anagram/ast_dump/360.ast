Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'string', Param{}}, Name{'listString', Param{}}], None, None, []}, [Assign{[Name{'strCounter', Store{}}], Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'string', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Return{ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'listString', Load{}}, [BinOp{Compare{Name{'strCounter', Load{}}, [Eq{}], [Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, BitAnd{}, Compare{Call{Attribute{Name{'string', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}]}}]}]}}], []}, If{Compare{Name{'__name__', Load{}}, [Eq{}], [Str{'__main__'}]}, [Print{None, [Call{Name{'detect_anagrams', Load{}}, [Str{'banana'}, List{[Str{'banana'}], Load{}}], [], None, None}], True}], []}]}