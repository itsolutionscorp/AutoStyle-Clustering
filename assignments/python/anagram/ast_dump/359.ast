Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'word_lower', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'sorted_word', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'sorted_candidates', Store{}}], Call{Name{'map', Load{}}, [Lambda{arguments{[Name{'s', Param{}}], None, None, []}, Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Name{'candidates', Load{}}], [], None, None}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'i', Store{}}, Call{Name{'range', Load{}}, [Call{Name{'len', Load{}}, [Name{'candidates', Load{}}], [], None, None}], [], None, None}, [If{BoolOp{And{}, [Compare{Name{'sorted_word', Load{}}, [Eq{}], [Subscript{Name{'sorted_candidates', Load{}}, Index{Name{'i', Load{}}}, Load{}}]}, UnaryOp{Not{}, Compare{Name{'word_lower', Load{}}, [Eq{}], [Call{Attribute{Subscript{Name{'candidates', Load{}}, Index{Name{'i', Load{}}}, Load{}}, 'lower', Load{}}, [], [], None, None}]}}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Subscript{Name{'candidates', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}