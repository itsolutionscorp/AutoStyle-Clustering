Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'target', Store{}}], Call{Attribute{Name{'source', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'letters', Store{}}], Call{Name{'sorted', Load{}}, [Name{'word', Load{}}], [], None, None}}, Return{ListComp{Name{'w', Load{}}, [comprehension{Name{'w', Store{}}, Name{'words', Load{}}, [BoolOp{And{}, [Compare{Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'target', Load{}}]}, Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Name{'letters', Load{}}]}]}]}]}}], []}]}