Module{[FunctionDef{'detect_anagrams', arguments{[Name{'given', Param{}}, Name{'potential', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'given_chars', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'given', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, For{Name{'match', Store{}}, Name{'potential', Load{}}, [If{BoolOp{Or{}, [Compare{Call{Name{'len', Load{}}, [Name{'given', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'match', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'given', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'match', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Continue{}], []}, Assign{[Name{'match_chars', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'match', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, If{Compare{Name{'given_chars', Load{}}, [Eq{}], [Name{'match_chars', Load{}}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'match', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}, If{Compare{Name{'__name__', Load{}}, [Eq{}], [Str{'__main__'}]}, [Expr{Call{Name{'detect_anagram', Load{}}, [Str{'galea'}, List{[Str{'eagle'}], Load{}}], [], None, None}}], []}]}