Module{[FunctionDef{'detect_anagrams', arguments{[Name{'base', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'sort_n_lower', Store{}}], Lambda{arguments{[Name{'w', Param{}}], None, None, []}, Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}}, Assign{[Name{'test_base', Store{}}], Call{Name{'sort_n_lower', Load{}}, [Name{'base', Load{}}], [], None, None}}, Assign{[Name{'anagrams', Store{}}], ListComp{Name{'w', Load{}}, [comprehension{Name{'w', Store{}}, Name{'candidates', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'sort_n_lower', Load{}}, [Name{'w', Load{}}], [], None, None}, [Eq{}], [Name{'test_base', Load{}}]}, Compare{Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'base', Load{}}]}]}]}]}}, Return{Name{'anagrams', Load{}}}], []}]}