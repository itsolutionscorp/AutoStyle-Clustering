Module{[FunctionDef{'detect_anagrams', arguments{[Name{'original', Param{}}, Name{'possibles', Param{}}], None, None, []}, [Assign{[Name{'original_word', Store{}}], Name{'original', Load{}}}, Assign{[Name{'results', Store{}}], List{[], Load{}}}, For{Name{'possible_word', Store{}}, Name{'possibles', Load{}}, [If{Compare{Call{Attribute{Name{'possible_word', Load{}}, 'upper', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'original_word', Load{}}, 'upper', Load{}}, [], [], None, None}]}, [If{Compare{Call{Name{'len', Load{}}, [Name{'possible_word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'original_word', Load{}}], [], None, None}]}, [Assign{[Name{'original_list', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'original_word', Load{}}, 'upper', Load{}}, [], [], None, None}], [], None, None}}, For{Name{'letter', Store{}}, Call{Attribute{Name{'possible_word', Load{}}, 'upper', Load{}}, [], [], None, None}, [If{Compare{Name{'original_list', Load{}}, [NotEq{}], [List{[], Load{}}]}, [If{Compare{Name{'letter', Load{}}, [In{}], [Name{'original_list', Load{}}]}, [Expr{Call{Attribute{Name{'original_list', Load{}}, 'remove', Load{}}, [Name{'letter', Load{}}], [], None, None}}], [Expr{Name{'next', Load{}}}]}], []}], []}, If{Compare{Name{'original_list', Load{}}, [Eq{}], [List{[], Load{}}]}, [Expr{Call{Attribute{Name{'results', Load{}}, 'append', Load{}}, [Name{'possible_word', Load{}}], [], None, None}}], []}], []}], []}], []}, Return{Name{'results', Load{}}}], []}]}