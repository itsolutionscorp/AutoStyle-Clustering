Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'cands', Param{}}], None, None, []}, [Assign{[Name{'base', Store{}}], Lambda{arguments{[Name{'w', Param{}}], None, None, []}, Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}}, Return{ListComp{Name{'c', Load{}}, [comprehension{Name{'c', Store{}}, Name{'cands', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'base', Load{}}, [Name{'c', Load{}}], [], None, None}, [Eq{}], [Call{Name{'base', Load{}}, [Name{'word', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'c', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}