Module{[ImportFrom{'itertools', [alias{'permutations', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'match_word', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'possible_words', Store{}}], Call{Name{'list', Load{}}, [Call{Name{'permutations', Load{}}, [Call{Attribute{Name{'match_word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'match_word_tuple', Store{}}], Call{Name{'tuple', Load{}}, [Call{Attribute{Name{'match_word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'results', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'words', Load{}}, [Assign{[Name{'word_tuple', Store{}}], Call{Name{'tuple', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, If{Compare{Name{'word_tuple', Load{}}, [Eq{}], [Name{'match_word_tuple', Load{}}]}, [Continue{}], []}, If{Compare{Name{'word_tuple', Load{}}, [In{}], [Name{'possible_words', Load{}}]}, [Expr{Call{Attribute{Name{'results', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}, Return{Name{'results', Load{}}}], []}]}