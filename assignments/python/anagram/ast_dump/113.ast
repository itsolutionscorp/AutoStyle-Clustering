Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'anagrams', Param{}}], None, None, []}, [Assign{[Name{'list_of_anagrams', Store{}}], List{[], Load{}}}, For{Name{'possible', Store{}}, Name{'anagrams', Load{}}, [If{BoolOp{Or{}, [Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}]}, Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'possible', Load{}}], [], None, None}]}]}, [Assign{[Name{'is_anagram', Store{}}], Name{'False', Load{}}}], [Assign{[Name{'is_anagram', Store{}}], Name{'True', Load{}}}]}, Assign{[Name{'lower_possible', Store{}}], Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'lower_word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'letter', Store{}}, Name{'lower_word', Load{}}, [If{Compare{Call{Attribute{Name{'lower_word', Load{}}, 'count', Load{}}, [Name{'letter', Load{}}], [], None, None}, [NotEq{}], [Call{Attribute{Name{'lower_possible', Load{}}, 'count', Load{}}, [Name{'letter', Load{}}], [], None, None}]}, [Assign{[Name{'is_anagram', Store{}}], Name{'False', Load{}}}], []}], []}, If{Compare{Name{'is_anagram', Load{}}, [Eq{}], [Name{'True', Load{}}]}, [Expr{Call{Attribute{Name{'list_of_anagrams', Load{}}, 'append', Load{}}, [Name{'possible', Load{}}], [], None, None}}], []}], []}, Return{Name{'list_of_anagrams', Load{}}}], []}]}