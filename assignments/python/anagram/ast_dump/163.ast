Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'wordlist', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'w', Store{}}, Name{'wordlist', Load{}}, [Assign{[Name{'temp_word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'temp_w', Store{}}], Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{Compare{Name{'temp_w', Load{}}, [NotEq{}], [Name{'temp_word', Load{}}]}, [For{Name{'c', Store{}}, Name{'temp_w', Load{}}, [If{Compare{Name{'c', Load{}}, [In{}], [Name{'temp_word', Load{}}]}, [Assign{[Name{'temp_word', Store{}}], Call{Attribute{Name{'temp_word', Load{}}, 'replace', Load{}}, [Name{'c', Load{}}, Str{''}, Num{1}], [], None, None}}, Assign{[Name{'temp_w', Store{}}], Call{Attribute{Name{'temp_w', Load{}}, 'replace', Load{}}, [Name{'c', Load{}}, Str{''}, Num{1}], [], None, None}}], []}, If{BoolOp{And{}, [Compare{Name{'temp_w', Load{}}, [Eq{}], [Str{''}]}, Compare{Name{'temp_word', Load{}}, [Eq{}], [Str{''}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'w', Load{}}], [], None, None}}], []}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}