Module{[ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'masterword', Param{}}, Name{'complist', Param{}}], None, None, []}, [Assign{[Name{'resultlist', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'complist', Load{}}, [Assign{[Name{'wordtest', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'masterwordtest', Store{}}], Call{Attribute{Name{'masterword', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'wordtest', Load{}}, [NotEq{}], [Name{'masterwordtest', Load{}}]}, Compare{Call{Name{'Counter', Load{}}, [Name{'wordtest', Load{}}], [], None, None}, [Eq{}], [Call{Name{'Counter', Load{}}, [Name{'masterwordtest', Load{}}], [], None, None}]}]}, [Expr{Call{Attribute{Name{'resultlist', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}, Return{Name{'resultlist', Load{}}}], []}]}