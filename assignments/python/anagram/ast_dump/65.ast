Module{[FunctionDef{'detect_anagrams', arguments{[Name{'what', Param{}}, Name{'wordlist', Param{}}], None, None, []}, [Assign{[Name{'what', Store{}}], Call{Attribute{Name{'what', Load{}}, 'lower', Load{}}, [], [], None, None}}, Return{ListComp{Name{'word', Load{}}, [comprehension{Name{'word', Store{}}, Name{'wordlist', Load{}}, [BoolOp{And{}, [Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'what', Load{}}]}, Compare{Call{Name{'sorted', Load{}}, [Name{'what', Load{}}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}]}]}]}}], []}]}