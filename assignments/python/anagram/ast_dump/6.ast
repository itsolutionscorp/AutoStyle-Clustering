Module{[ImportFrom{'collections', [alias{'OrderedDict', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Print{None, [Name{'word_list', Load{}}], True}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'wordchars', Store{}}], Dict{[], []}}, For{Name{'ch', Store{}}, Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Assign{[Subscript{Name{'wordchars', Load{}}, Index{Name{'ch', Load{}}}, Store{}}], BinOp{Call{Attribute{Name{'wordchars', Load{}}, 'get', Load{}}, [Name{'ch', Load{}}, Num{0}], [], None, None}, Add{}, Num{1}}}], []}, For{Name{'listword', Store{}}, Name{'word_list', Load{}}, [Assign{[Name{'listchars', Store{}}], Dict{[], []}}, For{Name{'ch', Store{}}, Call{Attribute{Name{'listword', Load{}}, 'lower', Load{}}, [], [], None, None}, [Assign{[Subscript{Name{'listchars', Load{}}, Index{Name{'ch', Load{}}}, Store{}}], BinOp{Call{Attribute{Name{'listchars', Load{}}, 'get', Load{}}, [Name{'ch', Load{}}, Num{0}], [], None, None}, Add{}, Num{1}}}], []}, If{Compare{Name{'listchars', Load{}}, [Eq{}], [Name{'wordchars', Load{}}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'listword', Load{}}], [], None, None}}], []}], []}, Assign{[Name{'anagrams', Store{}}], ListComp{Name{'a', Load{}}, [comprehension{Name{'a', Store{}}, Name{'anagrams', Load{}}, [Compare{Call{Attribute{Name{'a', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}}, Assign{[Name{'anagrams', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'OrderedDict', Load{}}, 'fromkeys', Load{}}, [Name{'anagrams', Load{}}], [], None, None}], [], None, None}}, Return{Name{'anagrams', Load{}}}], []}]}