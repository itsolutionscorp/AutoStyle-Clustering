Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'lret', Store{}}], List{[], Load{}}}, Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'word_set', Store{}}], Call{Name{'set', Load{}}, [Name{'word', Load{}}], [], None, None}}, For{Name{'ana', Store{}}, Name{'word_list', Load{}}, [Assign{[Name{'ana_set', Store{}}], Call{Name{'set', Load{}}, [Call{Attribute{Name{'ana', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, If{BoolOp{Or{}, [Compare{Call{Name{'len', Load{}}, [Name{'ana', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'ana', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Name{'word', Load{}}]}, Compare{Name{'ana_set', Load{}}, [NotEq{}], [Name{'word_set', Load{}}]}]}, [Continue{}], []}, If{ListComp{Str{'no'}, [comprehension{Name{'x', Store{}}, Name{'word_set', Load{}}, [Compare{Call{Attribute{Name{'word', Load{}}, 'count', Load{}}, [Name{'x', Load{}}], [], None, None}, [NotEq{}], [Call{Attribute{Call{Attribute{Name{'ana', Load{}}, 'lower', Load{}}, [], [], None, None}, 'count', Load{}}, [Name{'x', Load{}}], [], None, None}]}]}]}, [Continue{}], []}, Expr{Call{Attribute{Name{'lret', Load{}}, 'append', Load{}}, [Name{'ana', Load{}}], [], None, None}}], []}, Return{Name{'lret', Load{}}}], []}]}