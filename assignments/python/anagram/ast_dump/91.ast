Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'letters_in_word', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'matches', Store{}}], List{[], Load{}}}, For{Name{'candidate', Store{}}, Name{'candidates', Load{}}, [Assign{[Name{'normalized', Store{}}], Call{Attribute{Name{'candidate', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{Compare{Name{'normalized', Load{}}, [Eq{}], [Name{'word', Load{}}]}, [Continue{}], []}, Assign{[Name{'letters_in_candidate', Store{}}], Call{Name{'sorted', Load{}}, [Name{'normalized', Load{}}], [], None, None}}, If{Compare{Name{'letters_in_candidate', Load{}}, [Eq{}], [Name{'letters_in_word', Load{}}]}, [Expr{Call{Attribute{Name{'matches', Load{}}, 'append', Load{}}, [Name{'candidate', Load{}}], [], None, None}}], []}], []}, Return{Name{'matches', Load{}}}], []}]}