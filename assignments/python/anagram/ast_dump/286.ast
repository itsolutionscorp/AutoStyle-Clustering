Module{[Assign{[Name{'__author__', Store{}}], Str{'emiller42'}}, FunctionDef{'detect_anagrams', arguments{[Name{'target_word', Param{}}, Name{'potential_anagrams', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'target_word_lower', Store{}}], Call{Attribute{Name{'target_word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'target_word_sorted', Store{}}], Call{Name{'sorted', Load{}}, [Name{'target_word_lower', Load{}}], [], None, None}}, For{Name{'potential_anagram', Store{}}, Name{'potential_anagrams', Load{}}, [Assign{[Name{'potential_anagram_lower', Store{}}], Call{Attribute{Name{'potential_anagram', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{Compare{Name{'target_word_lower', Load{}}, [NotEq{}], [Name{'potential_anagram_lower', Load{}}]}, [If{Compare{Name{'target_word_sorted', Load{}}, [Eq{}], [Call{Name{'sorted', Load{}}, [Name{'potential_anagram_lower', Load{}}], [], None, None}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'potential_anagram', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}