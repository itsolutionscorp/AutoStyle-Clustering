Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'anagram_list', Param{}}], None, None, []}, [Assign{[Name{'valid_list', Store{}}], List{[], Load{}}}, Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'test_word', Store{}}, Name{'anagram_list', Load{}}, [If{Compare{Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Name{'word', Load{}}]}, [Continue{}], []}, Assign{[Name{'letter_list', Store{}}], Call{Name{'list', Load{}}, [Name{'word', Load{}}], [], None, None}}, For{Name{'letter', Store{}}, Name{'test_word', Load{}}, [TryExcept{[Expr{Call{Attribute{Name{'letter_list', Load{}}, 'remove', Load{}}, [Call{Attribute{Name{'letter', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}], [ExceptHandler{Name{'ValueError', Load{}}, None, [Break{}]}], []}], [If{UnaryOp{Not{}, Name{'letter_list', Load{}}}, [Expr{Call{Attribute{Name{'valid_list', Load{}}, 'append', Load{}}, [Name{'test_word', Load{}}], [], None, None}}], []}]}], []}, Return{Name{'valid_list', Load{}}}], []}]}