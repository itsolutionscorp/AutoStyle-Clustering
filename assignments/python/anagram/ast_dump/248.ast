Module{[FunctionDef{'detect_anagrams', arguments{[Name{'test_word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'sorted_test_word', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Expr{Call{Attribute{Name{'sorted_test_word', Load{}}, 'sort', Load{}}, [], [], None, None}}, Assign{[Name{'anagram_list', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'word_list', Load{}}, [If{BoolOp{Or{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'test_word', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'test_word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Continue{}], []}, Assign{[Name{'sorted_word', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Expr{Call{Attribute{Name{'sorted_word', Load{}}, 'sort', Load{}}, [], [], None, None}}, If{Compare{Name{'sorted_word', Load{}}, [Eq{}], [Name{'sorted_test_word', Load{}}]}, [Expr{Call{Attribute{Name{'anagram_list', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagram_list', Load{}}}], []}]}