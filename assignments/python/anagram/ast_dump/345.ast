Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'potentials', Param{}}], None, None, []}, [Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'dct', Store{}}], Dict{[], []}}, For{Name{'char', Store{}}, Name{'word', Load{}}, [Assign{[Subscript{Name{'dct', Load{}}, Index{Name{'char', Load{}}}, Store{}}], IfExp{Compare{Name{'char', Load{}}, [NotIn{}], [Name{'dct', Load{}}]}, Num{1}, BinOp{Subscript{Name{'dct', Load{}}, Index{Name{'char', Load{}}}, Load{}}, Add{}, Num{1}}}}], []}, Assign{[Name{'results', Store{}}], List{[], Load{}}}, For{Name{'potential', Store{}}, Name{'potentials', Load{}}, [If{Compare{Name{'word', Load{}}, [Eq{}], [Call{Attribute{Name{'potential', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Continue{}], []}, Assign{[Name{'h', Store{}}], Dict{[], []}}, For{Name{'char', Store{}}, Call{Attribute{Name{'potential', Load{}}, 'lower', Load{}}, [], [], None, None}, [Assign{[Subscript{Name{'h', Load{}}, Index{Name{'char', Load{}}}, Store{}}], IfExp{Compare{Name{'char', Load{}}, [NotIn{}], [Name{'h', Load{}}]}, Num{1}, BinOp{Subscript{Name{'h', Load{}}, Index{Name{'char', Load{}}}, Load{}}, Add{}, Num{1}}}}], []}, If{Compare{Name{'dct', Load{}}, [Eq{}], [Name{'h', Load{}}]}, [Expr{Call{Attribute{Name{'results', Load{}}, 'append', Load{}}, [Name{'potential', Load{}}], [], None, None}}], []}], []}, Return{Name{'results', Load{}}}], []}]}