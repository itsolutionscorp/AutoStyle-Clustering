Module{[FunctionDef{'detect_anagrams', arguments{[Name{'input_keyword', Param{}}, Name{'anagram_candidates', Param{}}], None, None, []}, [Assign{[Name{'lower_input_keyword', Store{}}], Call{Attribute{Name{'input_keyword', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'sorted_lower_input_keyword', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Name{'lower_input_keyword', Load{}}], [], None, None}], [], None, None}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'potential_anagram', Store{}}, Name{'anagram_candidates', Load{}}, [Assign{[Name{'lower_potential_anagram', Store{}}], Call{Attribute{Name{'potential_anagram', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'lower_potential_anagram', Load{}}, [NotEq{}], [Name{'lower_input_keyword', Load{}}]}, Compare{Call{Name{'len', Load{}}, [Name{'lower_potential_anagram', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'lower_input_keyword', Load{}}], [], None, None}]}]}, [If{UnaryOp{Not{}, Call{Name{'sum', Load{}}, [GeneratorExp{Compare{Name{'a', Load{}}, [NotEq{}], [Name{'b', Load{}}]}, [comprehension{Tuple{[Name{'a', Store{}}, Name{'b', Store{}}], Store{}}, Call{Name{'zip', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Name{'lower_potential_anagram', Load{}}], [], None, None}], [], None, None}, Name{'sorted_lower_input_keyword', Load{}}], [], None, None}, []}]}], [], None, None}}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'potential_anagram', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}