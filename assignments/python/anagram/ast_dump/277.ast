Module{[ImportFrom{'typing', [alias{'Iterable', None}, alias{'List', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'word_hash', Store{}}], Call{Name{'sum', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'encode', Load{}}, [Str{'ascii'}], [], None, None}], [], None, None}}, Assign{[Name{'word_len', Store{}}], Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}}, Return{Call{Name{'list', Load{}}, [Call{Name{'filter', Load{}}, [Lambda{arguments{[Name{'c', Param{}}], None, None, []}, BoolOp{And{}, [Compare{Name{'c', Load{}}, [NotEq{}], [Name{'word', Load{}}]}, Compare{Call{Name{'len', Load{}}, [Name{'c', Load{}}], [], None, None}, [Eq{}], [Name{'word_len', Load{}}]}, Compare{Call{Name{'sum', Load{}}, [Call{Attribute{Name{'c', Load{}}, 'encode', Load{}}, [Str{'ascii'}], [], None, None}], [], None, None}, [Eq{}], [Name{'word_hash', Load{}}]}]}}, Name{'candidates', Load{}}], [], None, None}], [], None, None}}], []}]}