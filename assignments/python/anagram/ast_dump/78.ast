Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible_anagrams', Param{}}], None, None, []}, [Expr{Str{' This function takes a word and a list {possible_anagrams} and see if the words in the list\n\tare anagrams of the first word. It then returns a list of those that are.'}}, Assign{[Name{'anagram', Store{}}], List{[], Load{}}}, For{Name{'possible', Store{}}, Name{'possible_anagrams', Load{}}, [If{Compare{Name{'word', Load{}}, [NotEq{}], [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [If{Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, [Expr{Call{Attribute{Name{'anagram', Load{}}, 'append', Load{}}, [Name{'possible', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagram', Load{}}}], []}]}