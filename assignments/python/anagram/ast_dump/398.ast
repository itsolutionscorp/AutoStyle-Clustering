Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'dictionary', Param{}}], None, None, []}, [Assign{[Name{'reference', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'result', Store{}}], List{[], Load{}}}, For{Name{'otherWord', Store{}}, Name{'dictionary', Load{}}, [Assign{[Name{'testWord', Store{}}], Call{Attribute{Name{'otherWord', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'testWord', Load{}}, [NotEq{}], [Name{'reference', Load{}}]}, Compare{Call{Name{'sorted', Load{}}, [Name{'testWord', Load{}}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Name{'reference', Load{}}], [], None, None}]}]}, [Expr{Call{Attribute{Name{'result', Load{}}, 'append', Load{}}, [Name{'otherWord', Load{}}], [], None, None}}], []}], []}, Return{Name{'result', Load{}}}], []}]}