Module{[FunctionDef{'detect_anagrams', arguments{[Name{'anagram', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'anagramChars', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Expr{ListComp{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}, [comprehension{Name{'word', Store{}}, Name{'words', Load{}}, [BoolOp{And{}, [UnaryOp{Not{}, Compare{Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}}, Compare{Name{'anagramChars', Load{}}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}]}]}]}]}}, Return{Name{'anagrams', Load{}}}], []}]}