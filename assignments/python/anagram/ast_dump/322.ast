Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibleWords', Param{}}], None, None, []}, [Expr{Str{'Select the correct anagrams for a word from a list.'}}, Assign{[Name{'possibleLetters', Store{}}], List{[], Load{}}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'possible', Store{}}, Name{'possibleWords', Load{}}, [If{Compare{Call{Name{'len', Load{}}, [Name{'possible', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}, [If{Compare{Name{'word', Load{}}, [NotEq{}], [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Expr{Call{Attribute{Name{'possibleLetters', Load{}}, 'append', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'possible', Load{}}], [], None, None}}], []}], []}], []}, For{Name{'x', Store{}}, Call{Name{'range', Load{}}, [BinOp{Call{Name{'len', Load{}}, [Name{'anagrams', Load{}}], [], None, None}, Sub{}, Num{1}}, Num{-1}, Num{-1}], [], None, None}, [Assign{[Name{'match', Store{}}], Name{'True', Load{}}}, For{Name{'letter', Store{}}, Name{'word', Load{}}, [TryExcept{[Expr{Call{Attribute{Subscript{Name{'possibleLetters', Load{}}, Index{Name{'x', Load{}}}, Load{}}, 'pop', Load{}}, [Call{Attribute{Subscript{Name{'possibleLetters', Load{}}, Index{Name{'x', Load{}}}, Load{}}, 'index', Load{}}, [Name{'letter', Load{}}], [], None, None}], [], None, None}}], [ExceptHandler{None, None, [Assign{[Name{'match', Store{}}], Name{'False', Load{}}}, Break{}]}], []}], []}, If{BoolOp{Or{}, [UnaryOp{Not{}, Name{'match', Load{}}}, Compare{Call{Name{'len', Load{}}, [Subscript{Name{'possibleLetters', Load{}}, Index{Name{'x', Load{}}}, Load{}}], [], None, None}, [NotEq{}], [Num{0}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'pop', Load{}}, [Name{'x', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}