Module{[FunctionDef{'detect_anagrams', arguments{[Name{'inword', Param{}}, Name{'inlist', Param{}}], None, None, []}, [Assign{[Name{'outlist', Store{}}], ListComp{Name{'word', Load{}}, [comprehension{Name{'word', Store{}}, Name{'inlist', Load{}}, [BoolOp{And{}, [Compare{Call{Attribute{Name{'inword', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}, Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'inword', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}]}]}]}}, Return{Name{'outlist', Load{}}}], []}]}