Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'anagram_list', Store{}}], List{[], Load{}}}, Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'original_candidate', Store{}}, Name{'candidates', Load{}}, [Assign{[Name{'candidate', Store{}}], Call{Attribute{Name{'original_candidate', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{Compare{Name{'candidate', Load{}}, [Eq{}], [Name{'word', Load{}}]}, [Continue{}], []}, Assign{[Name{'candidate_chars', Store{}}], Call{Name{'list', Load{}}, [Name{'candidate', Load{}}], [], None, None}}, Assign{[Name{'equal_chars', Store{}}], Name{'True', Load{}}}, For{Name{'char', Store{}}, Name{'candidate_chars', Load{}}, [If{Compare{Name{'char', Load{}}, [NotIn{}], [Name{'word', Load{}}]}, [Assign{[Name{'equal_chars', Store{}}], Name{'False', Load{}}}], [If{Compare{Call{Attribute{Name{'word', Load{}}, 'count', Load{}}, [Name{'char', Load{}}], [], None, None}, [NotEq{}], [Call{Attribute{Name{'candidate', Load{}}, 'count', Load{}}, [Name{'char', Load{}}], [], None, None}]}, [Assign{[Name{'equal_chars', Store{}}], Name{'False', Load{}}}], []}]}], []}, If{BoolOp{And{}, [Name{'equal_chars', Load{}}, Compare{Call{Name{'len', Load{}}, [Name{'candidate', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}]}, [Expr{Call{Attribute{Name{'anagram_list', Load{}}, 'append', Load{}}, [Name{'original_candidate', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagram_list', Load{}}}], []}]}