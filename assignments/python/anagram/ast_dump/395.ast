Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'phrase', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'ordered_word', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Name{'word', Load{}}], [], None, None}], [], None, None}}, For{Name{'i', Store{}}, Call{Name{'range', Load{}}, [Call{Name{'len', Load{}}, [Name{'phrase', Load{}}], [], None, None}], [], None, None}, [Assign{[Name{'lowercase_candidate', Store{}}], Call{Attribute{Subscript{Name{'phrase', Load{}}, Index{Name{'i', Load{}}}, Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'ordered_candidate', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Name{'lowercase_candidate', Load{}}], [], None, None}], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'ordered_word', Load{}}, [Eq{}], [Name{'ordered_candidate', Load{}}]}, UnaryOp{Not{}, Compare{Name{'word', Load{}}, [Eq{}], [Name{'lowercase_candidate', Load{}}]}}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Subscript{Name{'phrase', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}