Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible', Param{}}], None, None, []}, [Assign{[Name{'returns', Store{}}], List{[], Load{}}}, Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'anagram', Store{}}, Name{'possible', Load{}}, [Assign{[Name{'aTemp', Store{}}], Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{Compare{Name{'aTemp', Load{}}, [Eq{}], [Name{'word', Load{}}]}, [Continue{}], []}, Assign{[Name{'found', Store{}}], Name{'True', Load{}}}, For{Name{'letter', Store{}}, Name{'word', Load{}}, [If{Compare{Name{'letter', Load{}}, [In{}], [Name{'aTemp', Load{}}]}, [Assign{[Name{'aTemp', Store{}}], Call{Attribute{Name{'aTemp', Load{}}, 'replace', Load{}}, [Name{'letter', Load{}}, Str{''}, Num{1}], [], None, None}}], [Assign{[Name{'found', Store{}}], Name{'False', Load{}}}, Break{}]}], []}, If{BoolOp{And{}, [Name{'found', Load{}}, Compare{Call{Name{'len', Load{}}, [Name{'aTemp', Load{}}], [], None, None}, [Eq{}], [Num{0}]}]}, [Expr{Call{Attribute{Name{'returns', Load{}}, 'append', Load{}}, [Name{'anagram', Load{}}], [], None, None}}], []}], []}, Return{Name{'returns', Load{}}}], []}]}