Module{[FunctionDef{'detect_anagrams', arguments{[Name{'target_word', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'target_word', Store{}}], Call{Attribute{Name{'target_word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'res', Store{}}], Call{Name{'list', Load{}}, [], [], None, None}}, For{Name{'o_word', Store{}}, Name{'words', Load{}}, [Assign{[Name{'word', Store{}}], Call{Attribute{Name{'o_word', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{Or{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'target_word', Load{}}], [], None, None}]}, Compare{Name{'word', Load{}}, [Eq{}], [Name{'target_word', Load{}}]}]}, [Continue{}], []}, Assign{[Name{'found', Store{}}], Name{'True', Load{}}}, For{Name{'char', Store{}}, Call{Name{'set', Load{}}, [Name{'word', Load{}}], [], None, None}, [If{Compare{Call{Attribute{Name{'target_word', Load{}}, 'count', Load{}}, [Name{'char', Load{}}], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'count', Load{}}, [Name{'char', Load{}}], [], None, None}]}, [Assign{[Name{'found', Store{}}], Name{'False', Load{}}}, Break{}], []}], []}, If{Name{'found', Load{}}, [Expr{Call{Attribute{Name{'res', Load{}}, 'append', Load{}}, [Name{'o_word', Load{}}], [], None, None}}], []}], []}, Return{Name{'res', Load{}}}], []}]}