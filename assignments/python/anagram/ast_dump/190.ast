Module{[Expr{Str{'\nCreated on Thu Sep 25 140108 2014\n@author laegrim\n'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible_anagrams', Param{}}], None, None, []}, [Expr{Str{'\n    Determines which words, if any, in the possible anagrams list are anagrams \n    of the given word\n    '}}, Return{ListComp{Name{'anagram', Load{}}, [comprehension{Name{'anagram', Store{}}, Name{'possible_anagrams', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'sorted', Load{}}, [GeneratorExp{Name{'i', Load{}}, [comprehension{Name{'i', Store{}}, Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}, []}]}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [GeneratorExp{Name{'i', Load{}}, [comprehension{Name{'i', Store{}}, Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, []}]}], [], None, None}]}, Compare{Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}