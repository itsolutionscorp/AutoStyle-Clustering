Module{[Expr{Str{'\nReturns a correct list of anagrams given an overfull one.\nWritten by Bede Kelly for Exercism.\n'}}, Assign{[Name{'__author__', Store{}}], Str{'Bede Kelly'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible_anagrams', Param{}}], None, None, []}, [Expr{Str{'Prunes out non-anagrams and returns the fixed list.'}}, Assign{[Name{'with_correct_count', Store{}}], List{[], Load{}}}, For{Name{'anagram', Store{}}, Name{'possible_anagrams', Load{}}, [If{Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [For{Name{'letter', Store{}}, Call{Name{'set', Load{}}, [BinOp{Call{Name{'list', Load{}}, [Name{'word', Load{}}], [], None, None}, Add{}, Call{Name{'list', Load{}}, [Name{'anagram', Load{}}], [], None, None}}], [], None, None}, [If{Compare{Call{Attribute{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, 'count', Load{}}, [Name{'letter', Load{}}], [], None, None}, [NotEq{}], [Call{Attribute{Call{Attribute{Name{'anagram', Load{}}, 'lower', Load{}}, [], [], None, None}, 'count', Load{}}, [Name{'letter', Load{}}], [], None, None}]}, [Break{}], []}], [Expr{Call{Attribute{Name{'with_correct_count', Load{}}, 'append', Load{}}, [Name{'anagram', Load{}}], [], None, None}}]}], []}], []}, Return{Name{'with_correct_count', Load{}}}], []}]}