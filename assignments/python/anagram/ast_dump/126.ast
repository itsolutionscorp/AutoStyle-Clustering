Module{[Expr{Str{'\nanagram.py\nDetect anagrams\n'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Expr{Str{'\n    Given a word and a list of possible anagrams, select the correct sublist\n    @param word the given word\n    @param candidates possible anagrams\n    @returns sublist of actual anagrams\n    '}}, Assign{[Name{'sorted_word', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Return{ListComp{Name{'w', Load{}}, [comprehension{Name{'w', Store{}}, Name{'candidates', Load{}}, [BoolOp{And{}, [Compare{Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}, [Eq{}], [Name{'sorted_word', Load{}}]}, Compare{Call{Attribute{Name{'w', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}], []}]}