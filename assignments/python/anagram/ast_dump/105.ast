Module{[Assign{[Name{'__author__', Store{}}], Str{'jeffmarkey'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'list', Param{}}], None, None, []}, [Assign{[Name{'match_val', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'return_list', Store{}}], List{[], Load{}}}, For{Name{'elm', Store{}}, Name{'list', Load{}}, [If{Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'elm', Load{}}], [], None, None}]}, [Assign{[Name{'test_val', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'elm', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, If{BoolOp{And{}, [Compare{Name{'test_val', Load{}}, [Eq{}], [Name{'match_val', Load{}}]}, Compare{Call{Attribute{Name{'elm', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'return_list', Load{}}, 'append', Load{}}, [Name{'elm', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'return_list', Load{}}}], []}]}