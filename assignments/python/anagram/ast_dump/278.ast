Module{[Assign{[Name{'__author__', Store{}}], Str{'Hinek'}}, Import{[alias{'collections', None}]}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'chars_orig', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'result', Store{}}], List{[], Load{}}}, For{Name{'c', Store{}}, Name{'candidates', Load{}}, [If{Compare{Name{'word', Load{}}, [Eq{}], [Call{Attribute{Name{'c', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Continue{}], []}, Assign{[Name{'chars_cand', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'c', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Assign{[Name{'compare', Store{}}], Lambda{arguments{[Name{'x', Param{}}, Name{'y', Param{}}], None, None, []}, Compare{Call{Attribute{Name{'collections', Load{}}, 'Counter', Load{}}, [Name{'x', Load{}}], [], None, None}, [Eq{}], [Call{Attribute{Name{'collections', Load{}}, 'Counter', Load{}}, [Name{'y', Load{}}], [], None, None}]}}}, If{Call{Name{'compare', Load{}}, [Name{'chars_orig', Load{}}, Name{'chars_cand', Load{}}], [], None, None}, [Expr{Call{Attribute{Name{'result', Load{}}, 'append', Load{}}, [Name{'c', Load{}}], [], None, None}}], []}], []}, Return{Name{'result', Load{}}}], []}]}