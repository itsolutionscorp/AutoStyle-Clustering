Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'phrase', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'i', Store{}}, Call{Name{'range', Load{}}, [Call{Name{'len', Load{}}, [Name{'phrase', Load{}}], [], None, None}], [], None, None}, [Assign{[Name{'lowercase_phrase', Store{}}], Call{Attribute{Subscript{Name{'phrase', Load{}}, Index{Name{'i', Load{}}}, Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Subscript{Name{'phrase', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}]}, UnaryOp{Not{}, Compare{Name{'word', Load{}}, [Eq{}], [Name{'lowercase_phrase', Load{}}]}}]}, [Assign{[Name{'anagram_test', Store{}}], ListComp{Name{'letter', Load{}}, [comprehension{Name{'letter', Store{}}, Name{'lowercase_phrase', Load{}}, []}]}}, For{Name{'j', Store{}}, Name{'word', Load{}}, [If{Compare{Name{'j', Load{}}, [In{}], [Name{'anagram_test', Load{}}]}, [Expr{Call{Attribute{Name{'anagram_test', Load{}}, 'remove', Load{}}, [Name{'j', Load{}}], [], None, None}}], [Break{}]}], []}, If{Compare{Call{Name{'len', Load{}}, [Name{'anagram_test', Load{}}], [], None, None}, [Eq{}], [Num{0}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Subscript{Name{'phrase', Load{}}, Index{Name{'i', Load{}}}, Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}