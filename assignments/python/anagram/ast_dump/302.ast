Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'tests', Param{}}], None, None, []}, [Assign{[Name{'word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'test_list', Store{}}], ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'tests', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'x', Load{}}], [], None, None}]}, Compare{Name{'word', Load{}}, [NotEq{}], [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}]}]}}, Assign{[Name{'anagrams', Store{}}], ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'test_list', Load{}}, [Compare{Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Name{'word', Load{}}], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}]}]}]}}, Return{Name{'anagrams', Load{}}}], []}]}