Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Expr{Str{'Return all words in word_list which are anagrams of word\n       Anagrams may be upper or lower case.\n       Return first version of word found in mixed case. \n       Detect duplicates by storing uppercase version of matches.\n    '}}, Assign{[Name{'list', Store{}}], List{[], Load{}}}, Assign{[Name{'upperMatches', Store{}}], List{[], Load{}}}, Assign{[Name{'upperWord', Store{}}], Call{Attribute{Name{'word', Load{}}, 'upper', Load{}}, [], [], None, None}}, Assign{[Name{'sortedWord', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Name{'upperWord', Load{}}], [], None, None}], [], None, None}}, For{Name{'candidate', Store{}}, Name{'word_list', Load{}}, [Assign{[Name{'upperCandidate', Store{}}], Call{Attribute{Name{'candidate', Load{}}, 'upper', Load{}}, [], [], None, None}}, If{BoolOp{Or{}, [Compare{Name{'upperCandidate', Load{}}, [Eq{}], [Name{'upperWord', Load{}}]}, Compare{Name{'upperCandidate', Load{}}, [In{}], [Name{'upperMatches', Load{}}]}]}, [Continue{}], []}, Assign{[Name{'sortedCandidate', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Name{'upperCandidate', Load{}}], [], None, None}], [], None, None}}, If{Compare{Name{'sortedCandidate', Load{}}, [Eq{}], [Name{'sortedWord', Load{}}]}, [Expr{Call{Attribute{Name{'upperMatches', Load{}}, 'append', Load{}}, [Name{'sortedCandidate', Load{}}], [], None, None}}, Expr{Call{Attribute{Name{'list', Load{}}, 'append', Load{}}, [Name{'candidate', Load{}}], [], None, None}}], []}], []}, Return{Name{'list', Load{}}}], []}]}