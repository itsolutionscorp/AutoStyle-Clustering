Module{[Expr{Str{'\nMethod detect_anagrams takes a keyword and a list of comparison words\nand returns a comprehensive list containing any anagram matches\n'}}, FunctionDef{'detect_anagrams', arguments{[Name{'keyword', Param{}}, Name{'compWords', Param{}}], None, None, []}, [Assign{[Name{'resultList', Store{}}], List{[], Load{}}}, Assign{[Name{'keyword', Store{}}], Call{Attribute{Name{'keyword', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'word', Store{}}, Name{'compWords', Load{}}, [Assign{[Name{'lcWord', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, If{BoolOp{Or{}, [Compare{Call{Name{'len', Load{}}, [Name{'lcWord', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'keyword', Load{}}], [], None, None}]}, Compare{Name{'lcWord', Load{}}, [Eq{}], [Name{'keyword', Load{}}]}]}, [Continue{}], []}, Assign{[Name{'matchNum', Store{}}], Num{0}}, Assign{[Name{'keyComp', Store{}}], Call{Name{'list', Load{}}, [Name{'keyword', Load{}}], [], None, None}}, For{Name{'letter', Store{}}, Name{'lcWord', Load{}}, [If{Compare{Name{'letter', Load{}}, [In{}], [Name{'keyComp', Load{}}]}, [AugAssign{Name{'matchNum', Store{}}, Add{}, Num{1}}, Expr{Call{Attribute{Name{'keyComp', Load{}}, 'remove', Load{}}, [Name{'letter', Load{}}], [], None, None}}], []}], []}, If{Compare{Name{'matchNum', Load{}}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'keyword', Load{}}], [], None, None}]}, [Expr{Call{Attribute{Name{'resultList', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}, Return{Name{'resultList', Load{}}}], []}]}