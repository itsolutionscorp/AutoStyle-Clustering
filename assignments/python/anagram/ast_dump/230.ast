Module{[FunctionDef{'detect_anagrams', arguments{[Name{'match', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'match', Store{}}], Call{Attribute{Name{'match', Load{}}, 'lower', Load{}}, [], [], None, None}}, Assign{[Name{'words', Store{}}], Call{Name{'filter', Load{}}, [Lambda{arguments{[Name{'x', Param{}}], None, None, []}, Compare{Call{Attribute{Name{'x', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Name{'match', Load{}}]}}, Name{'words', Load{}}], [], None, None}}, Return{ListComp{Name{'word', Load{}}, [comprehension{Name{'word', Store{}}, Name{'words', Load{}}, [Compare{Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}, [Eq{}], [Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Name{'match', Load{}}], [], None, None}], [], None, None}]}]}]}}], []}]}