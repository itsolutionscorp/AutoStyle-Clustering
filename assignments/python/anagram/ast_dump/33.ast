Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibles', Param{}}], None, None, []}, [If{Compare{Name{'word', Load{}}, [Eq{}], [Subscript{Name{'possibles', Load{}}, Index{Num{0}}, Load{}}]}, [Return{List{[], Load{}}}], []}, Assign{[Name{'word', Store{}}], Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, Assign{[Name{'anagrams', Store{}}], ListComp{Name{'possible', Load{}}, [comprehension{Name{'possible', Store{}}, Name{'possibles', Load{}}, [Compare{Call{Attribute{Str{''}, 'join', Load{}}, [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'possible', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}, [Eq{}], [Name{'word', Load{}}]}]}]}}, Return{Name{'anagrams', Load{}}}], []}]}