Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'l', Param{}}], None, None, []}, [Assign{[Name{'word_letters', Store{}}], Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, Expr{Call{Attribute{Name{'word_letters', Load{}}, 'sort', Load{}}, [], [], None, None}}, Assign{[Name{'words_list', Store{}}], ListComp{Call{Name{'list', Load{}}, [Call{Attribute{Name{'i', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [comprehension{Name{'i', Store{}}, Name{'l', Load{}}, []}]}}, Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'w', Store{}}, Call{Name{'range', Load{}}, [Call{Name{'len', Load{}}, [Name{'words_list', Load{}}], [], None, None}], [], None, None}, [Expr{Call{Attribute{Subscript{Name{'words_list', Load{}}, Index{Name{'w', Load{}}}, Load{}}, 'sort', Load{}}, [], [], None, None}}, Print{None, [Compare{Subscript{Name{'words_list', Load{}}, Index{Name{'w', Load{}}}, Load{}}, [Eq{}], [Name{'word_letters', Load{}}]}], True}, If{BoolOp{And{}, [Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Subscript{Name{'l', Load{}}, Index{Name{'w', Load{}}}, Load{}}, 'lower', Load{}}, [], [], None, None}]}, Compare{Subscript{Name{'words_list', Load{}}, Index{Name{'w', Load{}}}, Load{}}, [Eq{}], [Name{'word_letters', Load{}}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Subscript{Name{'l', Load{}}, Index{Name{'w', Load{}}}, Load{}}], [], None, None}}], []}], []}, Return{Name{'anagrams', Load{}}}], []}]}