Module{[Import{[alias{'string', None}]}, ImportFrom{'collections', [alias{'Counter', None}], 0}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibles', Param{}}], None, None, []}, [Assign{[Name{'lower_word', Store{}}], Call{Attribute{Name{'string', Load{}}, 'lower', Load{}}, [Name{'word', Load{}}], [], None, None}}, Return{ListComp{Name{'x', Load{}}, [comprehension{Name{'x', Store{}}, Name{'possibles', Load{}}, [BoolOp{And{}, [Compare{Call{Name{'Counter', Load{}}, [Name{'lower_word', Load{}}], [], None, None}, [Eq{}], [Call{Name{'Counter', Load{}}, [Call{Attribute{Name{'string', Load{}}, 'lower', Load{}}, [Name{'x', Load{}}], [], None, None}], [], None, None}]}, Compare{Name{'lower_word', Load{}}, [NotEq{}], [Call{Attribute{Name{'string', Load{}}, 'lower', Load{}}, [Name{'x', Load{}}], [], None, None}]}]}]}]}}], []}]}