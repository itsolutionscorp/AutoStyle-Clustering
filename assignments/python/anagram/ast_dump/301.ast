Module{[FunctionDef{'detect_anagrams', arguments{[Name{'s', Param{}}, Name{'words', Param{}}], None, None, []}, [Assign{[Name{'matches', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'words', Load{}}, [If{BoolOp{Or{}, [Compare{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, [NotEq{}], [Call{Name{'len', Load{}}, [Name{'s', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [Eq{}], [Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Continue{}], []}, For{Name{'letter', Store{}}, Name{'word', Load{}}, [If{Compare{Call{Attribute{Name{'letter', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotIn{}], [Call{Attribute{Name{'s', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Break{}], [If{Compare{Call{Attribute{Name{'word', Load{}}, 'index', Load{}}, [Name{'letter', Load{}}], [], None, None}, [Eq{}], [BinOp{Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}, Sub{}, Num{1}}]}, [Expr{Call{Attribute{Name{'matches', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}]}], []}], []}, Return{Name{'matches', Load{}}}], []}]}