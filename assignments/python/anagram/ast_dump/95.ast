Module{[FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possible_list', Param{}}], None, None, []}, [Assign{[Name{'return_list', Store{}}], List{[], Load{}}}, For{Name{'testword', Store{}}, Name{'possible_list', Load{}}, [If{BoolOp{And{}, [Compare{Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'testword', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, Compare{Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'testword', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'return_list', Load{}}, 'append', Load{}}, [Name{'testword', Load{}}], [], None, None}}], []}], []}, Return{Name{'return_list', Load{}}}], []}]}