Module{[Assign{[Name{'__author__', Store{}}], Str{'cameron'}}, FunctionDef{'detect_anagrams', arguments{[Name{'word', Param{}}, Name{'possibles', Param{}}], None, None, []}, [Assign{[Name{'anagram', Store{}}], List{[], Load{}}}, Assign{[Name{'sortedpossibles', Store{}}], Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}}, For{Name{'alt', Store{}}, Name{'possibles', Load{}}, [If{Compare{Name{'sortedpossibles', Load{}}, [Eq{}], [Call{Name{'sorted', Load{}}, [Call{Attribute{Name{'alt', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}]}, [Expr{Call{Attribute{Name{'anagram', Load{}}, 'append', Load{}}, [Name{'alt', Load{}}], [], None, None}}], []}], []}, Return{Name{'anagram', Load{}}}], []}]}