Module{[Assign{[Name{'__author__', Store{}}], Str{'emiller42'}}, FunctionDef{'detect_anagrams', arguments{[Name{'target', Param{}}, Name{'word_list', Param{}}], None, None, []}, [Assign{[Name{'matches', Store{}}], List{[], Load{}}}, Assign{[Name{'target_list', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'target', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, For{Name{'word', Store{}}, Name{'word_list', Load{}}, [If{Compare{Call{Attribute{Name{'target', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}, [Assign{[Name{'temp_word', Store{}}], Call{Name{'sorted', Load{}}, [Call{Name{'list', Load{}}, [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}], [], None, None}], [], None, None}}, If{Compare{Name{'target_list', Load{}}, [Eq{}], [Name{'temp_word', Load{}}]}, [Expr{Call{Attribute{Name{'matches', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}], []}], []}, Return{Name{'matches', Load{}}}], []}]}