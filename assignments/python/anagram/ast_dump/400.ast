Module{[FunctionDef{'detect_anagrams', arguments{[Name{'original', Param{}}, Name{'candidates', Param{}}], None, None, []}, [Assign{[Name{'anagrams', Store{}}], List{[], Load{}}}, For{Name{'word', Store{}}, Name{'candidates', Load{}}, [Assign{[Name{'temp_word', Store{}}], Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}}, For{Name{'letter', Store{}}, Call{Attribute{Name{'original', Load{}}, 'lower', Load{}}, [], [], None, None}, [If{Compare{Name{'letter', Load{}}, [NotIn{}], [Name{'temp_word', Load{}}]}, [Break{}], []}, Assign{[Name{'temp_word', Store{}}], Call{Attribute{Name{'temp_word', Load{}}, 'replace', Load{}}, [Name{'letter', Load{}}, Str{''}, Num{1}], [], None, None}}], [If{BoolOp{And{}, [Compare{Call{Name{'len', Load{}}, [Name{'original', Load{}}], [], None, None}, [Eq{}], [Call{Name{'len', Load{}}, [Name{'word', Load{}}], [], None, None}]}, Compare{Call{Attribute{Name{'original', Load{}}, 'lower', Load{}}, [], [], None, None}, [NotEq{}], [Call{Attribute{Name{'word', Load{}}, 'lower', Load{}}, [], [], None, None}]}]}, [Expr{Call{Attribute{Name{'anagrams', Load{}}, 'append', Load{}}, [Name{'word', Load{}}], [], None, None}}], []}]}], []}, Return{Name{'anagrams', Load{}}}], []}]}