s(:defn, :combine_anagrams, s(:args, :xs), s(:if, s(:call, s(:call, s(:lvar, :xs), :is_a?, s(:const, :Array)), :!), s(:return, s(:nil)), nil), s(:lasgn, :out, s(:call, s(:const, :Hash), :new)), s(:iter, s(:call, s(:lvar, :xs), :each), s(:args, :x), s(:if, s(:and, s(:call, s(:lvar, :x), :is_a?, s(:const, :String)), s(:call, s(:match3, s(:lit, /[^A-Za-z]/), s(:lvar, :x)), :==, s(:nil))), s(:block, s(:lasgn, :a, s(:array)), s(:iter, s(:call, s(:call, s(:lvar, :x), :downcase), :scan, s(:lit, /[a-z]/)), s(:args, :c), s(:lasgn, :a, s(:call, s(:lvar, :a), :+, s(:array, s(:lvar, :c))))), s(:lasgn, :key, s(:call, s(:call, s(:lvar, :a), :sort), :join)), s(:attrasgn, s(:lvar, :out), :[]=, s(:lvar, :key), s(:call, s(:call, s(:lvar, :out), :fetch, s(:lvar, :key), s(:array)), :+, s(:array, s(:lvar, :x))))), nil)), s(:return, s(:call, s(:lvar, :out), :values)))