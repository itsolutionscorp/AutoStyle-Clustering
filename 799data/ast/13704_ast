s(:block, s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :ans, s(:hash)), s(:iter, s(:call, s(:lvar, :words), :each), s(:args, :word), s(:block, s(:lasgn, :a, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word), :downcase), :chars), :sort), :join)), s(:if, s(:call, s(:call, s(:lvar, :ans), :[], s(:lvar, :a)), :nil?), s(:attrasgn, s(:lvar, :ans), :[]=, s(:lvar, :a), s(:array)), nil), s(:call, s(:call, s(:lvar, :ans), :[], s(:lvar, :a)), :<<, s(:lvar, :word)))), s(:lasgn, :vals, s(:array)), s(:iter, s(:call, s(:lvar, :ans), :each_value), s(:args, :val), s(:call, s(:lvar, :vals), :<<, s(:lvar, :val))), s(:lvar, :vals)), s(:lasgn, :words, s(:array, s(:str, "cars"), s(:str, "for"), s(:str, "potatoes"), s(:str, "racs"), s(:str, "four"), s(:str, "scar"), s(:str, "creams"), s(:str, "scream"), s(:str, "A"), s(:str, "a"), s(:str, "Cars"), s(:str, "pOtateos"))), s(:lasgn, :a, s(:call, nil, :combine_anagrams, s(:lvar, :words))), s(:call, nil, :puts, s(:lvar, :a)), s(:call, nil, :puts), s(:call, nil, :puts, s(:call, s(:lvar, :a), :size)))