s(:block, s(:defn, :are_anagram?, s(:args, :word1, :word2), s(:call, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word1), :downcase), :each_char), :map), :sort), :==, s(:call, s(:call, s(:call, s(:call, s(:lvar, :word2), :downcase), :each_char), :map), :sort))), s(:defn, :combine_anagrams, s(:args, :words), s(:lasgn, :result, s(:call, s(:const, :Array), :new)), s(:iter, s(:call, s(:lit, 0), :upto, s(:call, s(:call, s(:lvar, :words), :length), :-, s(:lit, 1))), s(:args, :i), s(:block, s(:lasgn, :anagrams, s(:call, s(:iter, s(:call, s(:call, s(:lvar, :words), :each), :map), s(:args, :word), s(:if, s(:call, nil, :are_anagram?, s(:call, s(:lvar, :words), :[], s(:lvar, :i)), s(:lvar, :word)), s(:lvar, :word), nil)), :compact)), s(:if, s(:call, s(:lvar, :result), :include?, s(:lvar, :anagrams)), nil, s(:call, s(:lvar, :result), :<<, s(:lvar, :anagrams))))), s(:lvar, :result)))